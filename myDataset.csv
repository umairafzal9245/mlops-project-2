Questions,Answers,
 What is a loop in C++?,A loop is a control structure in C++ that allows a block of code to be executed repeatedly.,
What are the three types of loops in C++?,"The three types of loops in C++ are for loop, while loop, and do-while loop.",
 What is the syntax for the for loop?,The syntax for the for loop is: for (initialization; condition; increment/decrement) ,
What is the syntax for the while loop?,The syntax for the while loop is: while (condition) ,
What is the syntax for the do-while loop?,The syntax for the do-while loop is: do while (condition);,
What is the difference between the while loop and do-while loop?,"The while loop checks the condition before executing the code block, whereas the do-while loop checks the condition after executing the code block at least once.",
What is an infinite loop?,  An infinite loop is a loop that never terminates because the condition for exiting the loop is never met.,
 How can you break out of an infinite loop?,You can break out of an infinite loop by using the break statement.,
What is the continue statement used for?,The continue statement is used to skip a particular iteration of the loop and continue with the next iteration.,
What is the difference between a break statement and a continue statement?,"The break statement is used to exit the loop, whereas the continue statement is used to skip a particular iteration of the loop.",
 What is a nested loop?,A nested loop is a loop inside another loop.,
What is the maximum number of nested loops that can be used in C++?,There is no maximum limit to the number of nested loops that can be used in C++.,
What is the difference between pre-increment and post-increment operators?,"The pre-increment operator (++variable) increments the variable before using its value, whereas the post-increment operator (variable++) increments the variable after using its value.",
What is the difference between pre-decrement and post-decrement operators?,"The pre-decrement operator (--variable) decrements the variable before using its value, whereas the post-decrement operator (variable--) decrements the variable after using its value.",
 What is a loop control variable?,A loop control variable is a variable that is used to control the number of iterations in a loop.,
 What is a sentinel-controlled loop?,"A sentinel-controlled loop is a loop that uses a special value, called a sentinel value, to terminate the loop.",
What is a counter-controlled loop?,A counter-controlled loop is a loop that uses a loop control variable to control the number of iterations in the loop.,
 What is the difference between a do-while loop and a repeat-until loop?,"A do-while loop checks the condition at the end of the loop, whereas a repeat-until loop checks the condition at the beginning of the loop.",
 What is the difference between a while loop and a for loop?,"A while loop is used when the number of iterations is not known in advance, whereas a for loop is used when the number of iterations is known in advance.",
How can you terminate a loop before it has completed all its iterations?,You can terminate a loop before it has completed all its iterations by using the break statement.,
How can you skip a particular iteration of a loop?, You can skip a particular iteration of a loop by using the continue statement.,
What is an array in C++?,An array in C++ is a collection of elements of the same data type stored in contiguous memory locations.,
How do you declare an array in C++?,"To declare an array in C++, you specify the data type of the elements, followed by the name of the array and the number of elements it will contain in square brackets. For example: int myArray[10];",
What is the maximum size of an array in C++?,The maximum size of an array in C++ is determined by the amount of available memory on the system. This varies depending on the system.,
Can you change the size of an array after it has been declared in C++?,"No, the size of an array cannot be changed after it has been declared in C++.",
How do you initialize an array in C++?,You can initialize an array in C++ by providing a comma-separated list of values enclosed in braces. ,
What is the difference between an array and a pointer in C++?," An array is a collection of elements of the same data type stored in contiguous memory locations. A pointer, on the other hand, is a variable that holds the memory address of another variable. In some contexts, an array can be treated as a pointer to its first element.",
How do you access the elements of an array in C++?," You can access the elements of an array in C++ using the index operator ([]), followed by the index of the element you want to access. For example: myArray[0] to access the first element.",
What happens when you try to access an element outside the bounds of an array in C++?," When you try to access an element outside the bounds of an array in C++, you may get undefined behavior, such as a segmentation fault or garbage values.",
Can you have an array of objects in C++?," Yes, you can have an array of objects in C++. For example, an array of strings, an array of employee objects, etc.",
What is a multidimensional array in C++?,A multidimensional array in C++ is an array that contains other arrays as its elements. It can be thought of as a table with rows and columns.,
How do you declare a two-dimensional array in C++?,"To declare a two-dimensional array in C++, you specify the data type of the elements, followed by the name of the array and the size of each dimension in square brackets. For example: int myArray[2][3];",
How do you access the elements of a two-dimensional array in C++?,"You can access the elements of a two-dimensional array in C++ using two index operators, one for each dimension. For example: myArray[0][1] to access the element in the first row and second column.",
How do you pass an array to a function in C++?,You can pass an array to a function in C++ by specifying the array name without brackets in the function argument list. For example: void myFunction(int myArray[]).,
How do you find the length of an array in C++?,You can find the length of an array in C++ by dividing the total size of the array by the size of each element. For example: sizeof(myArray) / sizeof(myArray[0]).,
How do you sort an array in C++?,You can sort an array in C++ using the std::sort function from the <algorithm> header file.,
What is a dynamic array in C++?,A dynamic array in C++ is an array whose size can be determined at runtime rather than at compile time. It is created using the new keyword.,
How do you create a dynamic array in C++?,"To create a dynamic array in C++, you use the new operator followed by the data type of the array and the number of elements. For example: int *myArray = new int[10];",
How do you delete a dynamic array in C++?,"To delete a dynamic array in C++, you use the delete[] operator followed by the name of the array. For example: delete[] myArray;",
What is a pointer to an array in C++?,A pointer to an array in C++ is a variable that holds the memory address of the first element of an array.,
How do you declare a pointer to an array in C++?,"To declare a pointer to an array in C++, you use the data type of the array followed by an asterisk and the name of the pointer. For example: int (*myPointer)[10];",
How do you initialize a pointer to an array in C++?, You can initialize a pointer to an array in C++ by assigning the address of the array to the pointer. For example: int myArray[10]; int (*myPointer)[10] = &myArray;,
How do you pass a pointer to an array to a function in C++?,You can pass a pointer to an array to a function in C++ by specifying the pointer in the function argument list. For example: void myFunction(int (*myPointer)[10]);,
What is the difference between a static and a dynamic array in C++?,"A static array in C++ has a fixed size determined at compile time, while a dynamic array has a size that can be determined at runtime.",
 How do you create a static array of strings in C++?,"To create a static array of strings in C++, you use a two-dimensional array where each row is a string. ",
How do you create a dynamic array of strings in C++?," To create a dynamic array of strings in C++, you use a two-dimensional array of char pointers where each row points to a string. For example: char *myArray = new char[2]; myArray[0] = new char[10]; myArray[1] = new char[10];",
What is a jagged array in C++?, A jagged array in C++ is a multidimensional array where each row can have a different number of elements. It is created using an array of pointers.,
 How do you create a jagged array in C++?,"To create a jagged array in C++, you use an array of pointers where each pointer points to an array of a different size. For example: int *myArray[2]; myArray[0] = new int[3]; myArray[1] = new int[4];",
How do you copy the contents of one array to another in C++?,You can copy the contents of one array to another in C++ using a loop or the std::copy function from the <algorithm> header file.,
 What is an array of function pointers in C++?,An array of function pointers in C++ is an array where each element is a pointer to a function.,
What is an array of structures in C++?,An array of structures in C++ is an array where each element is a structure. It is useful when you need to store multiple pieces of related data.,
How do you create an array of structures in C++?,"To create an array of structures in C++, you define a structure and then declare an array of that structure.",
How do you access a member of a structure in an array in C++?,"To access a member of a structure in an array in C++, you use the dot operator followed by the member name. For example: myArray[0].a = 5;",
How do you search for an element in an array in C++?,"You can search for an element in an array in C++ using a loop or the std::find function from the <algorithm> header file. For example: int *result = std::find(myArray, myArray + 10, 5);",
How do you reverse an array in C++?,"You can reverse an array in C++ using the std::reverse function from the <algorithm> header file. For example: std::reverse(myArray, myArray + 10);",
How do you find the maximum element in an array in C++?,"You can find the maximum element in an array in C++ using the std::max_element function from the <algorithm> header file. For example: int *max = std::max_element(myArray, myArray + 10);",
How do you find the minimum element in an array in C++?,"You can find the minimum element in an array in C++ using the std::min_element function from the <algorithm> header file. For example: int *min = std::min_element(myArray, myArray + 10);",
How do you remove an element from an array in C++?,You cannot remove an element from an array in C++. You can only overwrite it with another value.,
How do you insert an element into an array in C++?,You cannot insert an element into an array in C++. You can only overwrite an existing element or create a new array with the new element.,
 How do you iterate over a two-dimensional array in C++?,You can iterate over a two-dimensional array in C++ using nested loops. ,
 How do you find the sum of all elements in an array in C++?,"You can find the sum of all elements in an array in C++ using a loop or the std::accumulate function from the <numeric> header file. For example: int sum = std::accumulate(myArray, myArray + 10, 0);",
 How do you copy an array in C++?," You can copy an array in C++ using the std::copy function from the <algorithm> header file. For example: int newArray[10]; std::copy(myArray, myArray + 10, newArray);",
How do you fill an array with a specific value in C++?,"You can fill an array with a specific value in C++ using the std::fill function from the <algorithm> header file. For example: std::fill(myArray, myArray + 10, 0);",
 How do you swap two elements in an array in C++?," You can swap two elements in an array in C++ using the std::swap function from the <algorithm> header file. For example: std::swap(myArray[0], myArray[1]);",
 How do you count the occurrences of an element in an array in C++?," You can count the occurrences of an element in an array in C++ using the std::count function from the <algorithm> header file. For example: int count = std::count(myArray, myArray + 10, 5);",
 How do you remove duplicates from an array in C++?,"You can remove duplicates from an array in C++ using the std::unique function from the <algorithm> header file. For example: std::sort(myArray, myArray + 10); int *newEnd = std::unique(myArray, myArray + 10);",
How do you shuffle the elements of an array in C++?,"You can shuffle the elements of an array in C++ using the std::shuffle function from the <algorithm> header file. For example: std::shuffle(myArray, myArray + 10, std::default_random_engine());",
How do you find the median of an array in C++?,"You can find the median of an array in C++ by sorting the array and then finding the middle element(s). For example: std::sort(myArray, myArray + 10); int median = myArray[4];",
How do you rotate the elements of an array in C++?," You can rotate the elements of an array in C++ using the std::rotate function from the <algorithm> header file. For example: std::rotate(myArray, myArray + 3, myArray + 10);",
 How do you create a dynamic array in C++?, You can create a dynamic array in C++ using the new operator. For example: int *myArray = new int[10];,
 How do you delete a dynamic array in C++?, You can delete a dynamic array in C++ using the delete[] operator. For example: delete[] myArray;,
How do you initialize a dynamic array in C++?,You can initialize a dynamic array in C++ using curly braces. ,
How do you resize a dynamic array in C++?, You cannot resize a dynamic array in C++. You must create a new array and copy the elements from the old array.,
How do you create an array of pointers in C++?,You can create an array of pointers in C++ using the new operator. For example: int *myArray = new int[10];,
How do you initialize an array of pointers in C++?,You can initialize an array of pointers in C++ using a loop. ,
 How do you delete an array of pointers in C++?,You can delete an array of pointers in C++ using a loop. ,
 How do you find the largest element in an array in C++?,"You can find the largest element in an array in C++ using the std::max_element function from the <algorithm> header file. For example: int *max = std::max_element(myArray, myArray + 10);",
How do you find the smallest element in an array in C++?,"You can find the smallest element in an array in C++ using the std::min_element function from the <algorithm> header file. For example: int *min = std::min_element(myArray, myArray + 10);",
How do you reverse the elements of an array in C++?,"You can reverse the elements of an array in C++ using the std::reverse function from the <algorithm> header file. For example: std::reverse(myArray, myArray + 10);",
 How do you compute the sum of the elements of an array in C++?,You can compute the sum of the elements of an array in C++ using a loop.,
 How do you compute the product of the elements of an array in C++?,You can compute the product of the elements of an array in C++ using a loop.,
 How do you find the second largest element in an array in C++?," You can find the second largest element in an array in C++ by sorting the array and then selecting the second-to-last element. For example: std::sort(myArray, myArray + 10); int secondLargest = myArray[8];",
 How do you find the second smallest element in an array in C++?,"You can find the second smallest element in an array in C++ by sorting the array and then selecting the second element. For example: std::sort(myArray, myArray + 10); int secondSmallest = myArray[1];",
How do you count the number of even elements in an array in C++?,You can count the number of even elements in an array in C++ using a loop and an if statement. ,
What is a pointer in C++?, A pointer is a variable that stores the memory address of another variable.,
How do you declare a pointer variable in C++?,"You declare a pointer variable by putting an asterisk () before the variable name, like this: int myPointer;",
What is the purpose of a null pointer in C++?,A null pointer is a pointer that points to nothing. It is used to indicate that a pointer is not currently pointing to a valid memory location.,
What is the difference between a pointer and a reference in C++?,"A pointer is a variable that stores the memory address of another variable, while a reference is an alias for another variable. Once a reference is initialized, it cannot be changed to refer to another variable.",
How do you assign a value to a pointer in C++?,"You can assign a value to a pointer by using the address-of operator (&) to get the memory address of a variable, and then assigning that value to the pointer, like this: int* myPointer = &myVariable;",
What happens if you try to dereference a null pointer in C++?,"Dereferencing a null pointer results in undefined behavior, which can include crashes, data corruption, or other unpredictable results.",
What is the arrow operator (->) used for in C++?,The arrow operator is used to access a member variable or member function of an object that is pointed to by a pointer. It is a shorthand for dereferencing the pointer and then using the dot operator to access the member.,
How do you pass a pointer to a function in C++?,"You can pass a pointer to a function by declaring the function parameter as a pointer and then passing the address of a variable to the function, like this: void myFunction(int* myPointer);",
What is a function pointer in C++?,A function pointer is a variable that stores the memory address of a function. It can be used to call a function indirectly.,
How do you declare a function pointer in C++?,"You declare a function pointer by putting the function signature in parentheses and then putting an asterisk (*) before the variable name, like this: int (*myFunctionPointer)(int, int);",
How do you call a function using a function pointer in C++?,"You call a function using a function pointer by dereferencing the pointer and then using the parentheses operator to call the function, like this: int result = (*myFunctionPointer)(arg1, arg2);",
What is a const pointer in C++?,A const pointer is a pointer that cannot be used to modify the value of the variable it points to.,
What is a pointer to a const variable in C++?,"A pointer to a const variable is a pointer that can be used to access the value of a variable, but cannot be used to modify that value.",
What is a const pointer to a const variable in C++?,"A const pointer to a const variable is a pointer that cannot be used to modify the value of a variable, and also cannot be used to modify the pointer itself.",
What is the difference between the ++ operator and the * operator when used with a pointer in C++?,"The ++ operator increments the pointer to point to the next memory location, while the * operator dereferences the pointer to access the value at the current memory location.",
What is a pointer array in C++?,"A pointer array is an array of pointers, where each element of the array stores the memory address of another variable.",
What is a double pointer in C++?,A double pointer is a pointer that stores the memory address of another pointer.,
How do you declare a double pointer in C++?,"You declare a double pointer by putting two asterisks () before the variable name, like this: int myDoublePointer;",
What is the purpose of dynamic memory allocation in C++?,"Dynamic memory allocation is used to allocate memory at run-time, allowing you to create data structures of varying sizes and to manage memory more efficiently.",
What is the difference between stack and heap memory in C++?,"Stack memory is used for static memory allocation and is managed by the compiler, while heap memory is used for dynamic memory allocation and is managed by the programmer.",
How do you allocate memory dynamically in C++?,"You can allocate memory dynamically using the new operator, like this: int* myPointer = new int;",
How do you deallocate memory in C++?,"You deallocate memory using the delete operator, like this: delete myPointer;",
What is a memory leak in C++?,"A memory leak is a situation where memory that was allocated using dynamic memory allocation is not properly deallocated, resulting in the program consuming more and more memory until it crashes or runs out of memory.",
How do you avoid memory leaks in C++?,You can avoid memory leaks by always properly deallocating memory that was allocated using dynamic memory allocation.,
What is the difference between pass-by-reference and pass-by-pointer in C++?,"Pass-by-reference uses a reference to a variable as a parameter, while pass-by-pointer uses a pointer to a variable as a parameter.",
How do you use pointers to allocate an array in C++?,"You can use pointers to allocate an array dynamically, like this: int* myArray = new int[10];",
How do you access elements of an array using pointers in C++?,"You can access elements of an array using pointers by adding an offset to the pointer, like this: int element = *(myArray + 2);",
What is a pointer to a function in C++?,"A pointer to a function is a variable that stores the memory address of a function, allowing you to call the function indirectly.",
How do you declare a pointer to a function in C++?," You declare a pointer to a function by putting the function signature in parentheses and then putting an asterisk (*) before the variable name, like this: int (*myFunctionPointer)(int, int);",
How do you call a function using a pointer to a function in C++?,"You call a function using a pointer to a function by dereferencing the pointer and then using the parentheses operator to call the function, like this: int result = (*myFunctionPointer)(arg1, arg2);",
What is the purpose of the void pointer in C++?,The void pointer is a generic pointer that can be used to store the memory address of any data type.,
How do you cast a void pointer to another pointer type in C++?,"You can cast a void pointer to another pointer type using the static_cast operator, like this: int* myPointer = static_cast<int*>(myVoidPointer);",
What is the difference between a const pointer and a pointer to a const in C++?,"A const pointer is a pointer that cannot be used to modify the value of the variable it points to, while a pointer to a const is a pointer that can be used to access the value of a variable, but cannot be used to modify that value.",
What is the difference between a null pointer and a void pointer in C++?,"A null pointer is a pointer that does not point to any memory address, while a void pointer is a pointer that can point to any memory address.",
How do you use a pointer to swap two variables in C++?,"You can use a pointer to swap two variables by using the dereference operator and a temporary variable, like this: int temp = *a; *a = *b; *b = temp;",
What is a null pointer in C++?,A null pointer is a pointer that does not point to any memory address.,
How do you check if a pointer is null in C++?,You can check if a pointer is null by using the null pointer constant.,
What is a dangling pointer in C++?,"A dangling pointer is a pointer that points to a memory address that has been deallocated, resulting in undefined behavior.",
How do you avoid using dangling pointers in C++?,You can avoid using dangling pointers by always setting pointers to null after deallocating the memory they point to.,
What is a smart pointer in C++?,A smart pointer is a class that encapsulates a raw pointer and manages the memory it points to automatically.,
What are the different types of smart pointers in C++?,"The different types of smart pointers in C++ are unique_ptr, shared_ptr, and weak_ptr.",
What is a unique_ptr in C++?,A unique_ptr is a smart pointer that manages the memory of a single object and cannot be shared or copied.,
What is a shared_ptr in C++?,A shared_ptr is a smart pointer that manages the memory of an object and can be shared and copied by multiple pointers.,
What is a weak_ptr in C++?,A weak_ptr is a smart pointer that can be used to prevent circular references between shared_ptrs.,
How do you create a unique_ptr in C++?,"You create a unique_ptr by using the std::make_unique function or by calling the unique_ptr constructor, like this: std::unique_ptr<int> myPointer(new int);",
How do you create a shared_ptr in C++?,"You create a shared_ptr by using the std::make_shared function or by calling the shared_ptr constructor, like this: std::shared_ptr<int> myPointer(new int);",
How do you use a weak_ptr in C++?," You use a weak_ptr by creating it from a shared_ptr and using the lock function to obtain a shared_ptr when needed, like this: std::weak_ptr<int> myWeakPointer(mySharedPointer); std::shared_ptr<int> mySharedPtr = myWeakPointer.lock();",
What is a volatile pointer in C++?,"A volatile pointer is a pointer that can be used to access memory that may change unexpectedly, such as memory mapped to hardware.",
What is a static member?,"A static member is a member of a class that belongs to the class itself, rather than to any individual object of the class. There is only one copy of a static member, regardless of how many objects of the class are created.",
What is a static method?,"A static method is a method of a class that can be called without creating an object of the class. Like static members, static methods belong to the class itself rather than any individual object.",
What is an abstract class?,"An abstract class is a class that contains one or more pure virtual functions. Abstract classes cannot be instantiated, but can be used as base classes for other classes.",
What is a pure virtual destructor?,A pure virtual destructor is a destructor that is declared as pure virtual in the base class. This is used to ensure that the destructor of a subclass is always called when the subclass is destroyed.,
What is a template?,A template is a way of creating generic classes or functions that can be used with different types of data.,
What is a template specialization?,A template specialization is a way of providing a specific implementation for a template for a specific type or set of types.,
What is a template class?,"A template class is a class that is defined using a template, allowing it to be used with different types of data.",
What is a template function?,"A template function is a function that is defined using a template, allowing it to be used with different types of data.",
What is a virtual destructor?,"A virtual destructor is a destructor that is declared as virtual in the base class. This is used to ensure that the destructor of a subclass is always called when the subclass is destroyed, even if the object is deleted through a pointer to the base class.",
What is dynamic binding?,"Dynamic binding is the process of determining which method to call at runtime, based on the actual type of the object being used.",
What is a vtable?,A vtable (virtual table) is a table of function pointers used for dynamic binding in C++. Each class that contains virtual functions has a vtable that contains pointers to the virtual functions.,
What is a pure virtual class?,A pure virtual class is a class that contains only pure virtual functions. This is often used to define an interface that must be implemented by any class that inherits from the pure virtual class.,
What is a namespace?,"A namespace is a way of organizing code into a named scope, to avoid naming conflicts between different parts of a program.",
What is a smart pointer?,"A smart pointer is a class that acts like a pointer, but provides automatic memory management by automatically deleting the object it points to when it is no longer needed.",
What is an iterator?,An iterator is an object that provides a way of iterating over a collection of objects.,
What is a const_iterator?,A const_iterator is an iterator that provides a way of iterating over a collection of objects while ensuring that the objects are not modified.,
What is a move constructor?,"A move constructor is a constructor that is used to create a new object by moving the resources of an existing object into the new object, rather than copying them.",
What is a move assignment operator?,"A move assignment operator is an operator that is used to assign the resources of an existing object to a new object by moving them, rather than copying them.",
What is the difference between composition and inheritance?,Composition is the practice of creating a new class by combining multiple objects of existing classes. Inheritance is the practice of creating a new class by extending an existing class.,
What is a const object?,A const object is an object whose value cannot be modified after it has been initialized.,
What is a const member function?,A const member function is a member function of a class that does not modify the object it is called on and is declared using the const keyword.,
What is a copy constructor?,A copy constructor is a constructor that is used to create a new object from an existing object of the same type.,
What is a copy assignment operator?,A copy assignment operator is an operator that is used to copy the value of one object to another object of the same type.,
What is a destructor?,"A destructor is a member function of a class that is called when an object of the class is destroyed, usually to release any resources held by the object.",
What is a pointer?,A pointer is a variable that stores the memory address of another variable or object.,
What is a reference?,"A reference is an alias for an existing variable or object, allowing it to be accessed with a different name.",
What is a default constructor?,A default constructor is a constructor that is automatically generated by the compiler if no other constructor is defined for a class.,
What is a derived class?,A derived class is a class that is created by inheriting properties and methods from a base class.,
What is an exception?,"An exception is an error or unexpected event that occurs during the execution of a program, causing the program to terminate or to take some other action to handle the error.",
What is a try-catch block?,"A try-catch block is a programming construct used to handle exceptions in C++. The code that might generate an exception is enclosed in a try block, and any exceptions that are thrown are caught and handled by one or more catch blocks.",
What is a virtual function?,"A virtual function is a function that is declared in a base class as virtual, allowing it to be overridden in a derived class.",
What is dynamic polymorphism?,"Dynamic polymorphism is the ability of an object to take on many forms, allowing different objects to be treated as if they were the same type at runtime.",
What is a lambda expression?,A lambda expression is a way of defining an anonymous function in C++ that can be used inline with other code.,
What is the difference between a shared_ptr and a unique_ptr?,"A shared_ptr is a smart pointer that allows multiple pointers to refer to the same object, whereas a unique_ptr is a smart pointer that only allows a single pointer to refer to an object at any given time.",
What is a factory method?,A factory method is a design pattern that involves creating an object through a factory class rather than directly instantiating the object.,
What is the purpose of the virtual keyword in C++?,"The virtual keyword is used to declare a virtual function in a base class, allowing it to be overridden by derived classes.",
What is a pure virtual function?,A pure virtual function is a virtual function that is declared in a base class but has no implementation. It must be implemented by any derived classes that use it.,
What is a concrete class?,A concrete class is a class that can be instantiated directly and contains all necessary implementations of its member functions.,
What is multiple inheritance?,Multiple inheritance is a feature of C++ that allows a class to inherit properties and methods from multiple base classes.,
What is the diamond problem in multiple inheritance?,The diamond problem is a common issue that arises in multiple inheritance when a class inherits from two or more classes that share a common base class.,
What is a function object?,"A function object is an object that behaves like a function, allowing it to be used in contexts where a function is expected.",
What is a functor?,A functor is another name for a function object in C++.,
What is an interface class?,"An interface class is a class that defines a set of pure virtual functions, allowing it to be used as an interface for other classes.",
What is a non-virtual interface?,"A non-virtual interface is a design pattern in C++ that involves using virtual functions to define an interface for a class, but keeping the interface non-virtual to ensure consistent behavior across derived classes.",
What is type erasure?,"Type erasure is a technique in C++ that allows a generic type to be used with different concrete types, by hiding the concrete type behind a common interface.",
What is a mixin?,"A mixin is a class that is designed to be used as a base class for other classes, providing additional functionality.",
What is a CRTP?,"CRTP stands for ""Curiously Recurring Template Pattern"" and is a design pattern in C++ that involves using a derived class as a template argument for its own base class.",
What is a tag dispatch?,Tag dispatch is a technique in C++ that involves using overloaded functions and special tag types to select between different function implementations based on the type of their arguments.,
What is SFINAE?,"SFINAE stands for ""Substitution Failure Is Not An Error"" and is a C++ rule that allows a function template to be removed from consideration during overload resolution if its instantiation would result in a substitution failure.",
What is a variadic template?,"A variadic template is a C++ template that accepts a variable number of arguments of any type, allowing for generic programming with an arbitrary number of arguments.",
What is perfect forwarding?,"Perfect forwarding is a C++ technique that allows a function to forward its arguments to another function without losing any information, including their types and whether they are lvalues or rvalues.",
What is move semantics?,"Move semantics is a C++ feature that allows for the efficient transfer of ownership of resources, such as memory or file handles, from one object to another.",
What is an rvalue reference?,"An rvalue reference is a C++ reference that can only bind to an rvalue expression, such as a temporary object or the result of an expression.",
What is the rule of five?,"The rule of five is a C++ guideline that recommends defining a destructor, copy constructor, copy assignment operator, move constructor, and move assignment operator for a class that manages resources.",
What is RAII?,"RAII stands for ""Resource Acquisition Is Initialization"" and is a C++ programming technique that uses constructors and destructors to manage the lifetime of resources, such as memory or file handles.",
What is a range-based for loop?,"A range-based for loop is a C++ loop construct that allows iterating over a range of values, such as an array or a container, using a simplified syntax.",
What is a constexpr function?,"A constexpr function is a C++ function that can be evaluated at compile time, allowing for the use of constant expressions in program logic.",
What is a static_assert?,"A static_assert is a C++ feature that allows asserting a compile-time condition, generating a compiler error if the condition is not met.",
What is a user-defined literal?," A user-defined literal is a C++ feature that allows defining a custom suffix for a literal, allowing for the creation of domain-specific syntax.",
What is a tuple?,"A tuple is a C++ data structure that allows grouping together a fixed number of heterogeneous elements, with each element accessible by a separate index.",
What is a pair?,A pair is a C++ data structure that allows grouping together two elements of possibly different types.,
What is a lambda capture?,"A lambda capture is a C++ feature that allows capturing variables from the enclosing scope into a lambda expression, allowing them to be used inside the lambda body.",
What is a move-only type?,"A move-only type is a C++ type that cannot be copied, only moved, such as a unique_ptr or a thread.",
What is a type trait?,"A type trait is a C++ feature that allows querying information about types at compile-time, such as whether a type is a pointer or a class.",
What is a constexpr if?,"A constexpr if is a C++ feature that allows conditional compilation based on a constexpr expression, allowing for more efficient code generation.",
What is a coroutine?,"A coroutine is a C++ feature that allows suspending and resuming execution of a function, allowing for more efficient asynchronous programming.",
What is a proxy class?,"A proxy class is a C++ class that acts as an intermediary between the user and another object, providing additional functionality or modifying the behavior of the underlying object.",
What is a type erasure?,"Type erasure is a C++ technique that allows hiding the concrete type of an object behind a common interface, allowing for polymorphism and generic programming.",
What is a dependent name?,"A dependent name is a C++ name that depends on a template parameter or a class type, requiring special handling in template code.",
What is a metaclass?,"A metaclass is a C++ feature that allows generating C++ code at compile-time, allowing for more efficient and flexible code generation.",
What is a forwarding reference?,"A forwarding reference is a C++ reference that can bind to both lvalue and rvalue expressions, allowing for perfect forwarding of arguments to another function.",
What is a conversion operator?,"A conversion operator is a C++ member function of a class that converts the object to another type, allowing for implicit conversion between types.",
What is a constructor inheritance?,"A constructor inheritance is a C++ feature that allows a derived class to inherit the constructors of its base class, simplifying class definitions and avoiding code duplication.",
What is a variadic template specialization?,"A variadic template specialization is a C++ template specialization that accepts a variable number of template arguments, allowing for more flexible and specialized programming.",
What is a stateless lambda?,"A stateless lambda is a C++ lambda expression that captures no variables from the enclosing scope, allowing it to be converted to a function pointer or a function object.",
What is a factory function?,"A factory function is a C++ function or method that creates and returns an object of a certain type, allowing for more flexible object creation and initialization.",
What is a placement new operator?,"A placement new operator is a C++ operator that allows constructing an object at a specified memory location, allowing for more flexible memory management.",
What is a default member initializer?,"A default member initializer is a C++ feature that allows initializing class members to a default value at their declaration, simplifying class definitions.",
What is a constexpr variable?,"A constexpr variable is a C++ variable that can be evaluated at compile-time, allowing for the use of constant expressions in program logic.",
What is a range-v3 library?,"The range-v3 library is a C++ library that provides a set of algorithms and data structures for working with ranges, allowing for more expressive and efficient programming.",
What is an object slicing?,"Object slicing is a C++ phenomenon that occurs when a derived class object is assigned to a base class object, causing the derived class-specific data to be ""sliced off"" and lost.",
What is a friend function?,"A friend function is a C++ function that is declared inside a class but is not a member function, allowing it to access the private and protected members of the class.",
What is a virtual base class?,"A virtual base class is a C++ base class that is declared as virtual, allowing for proper handling of shared base class subobjects in class hierarchies.",
What is a template template parameter?,"A template template parameter is a C++ template parameter that accepts a template as its argument, allowing for more flexible and generic programming.",
What is an explicit constructor?,"An explicit constructor is a C++ constructor that is marked as explicit, preventing implicit conversion from the constructor argument type to the class type.",
What is a std::function?,"A std::function is a C++ class that acts as a type-safe function wrapper, allowing for storing and calling arbitrary functions with a specific signature.",
What is a CRTP-based mixin?,A CRTP-based mixin is a C++ programming pattern that uses template inheritance to implement reusable and composable behavior in classes.,
What is a noexcept specifier?,"A noexcept specifier is a C++ feature that marks a function as not throwing any exceptions, allowing for more efficient code generation and more expressive program logic.",
What is a variadic template pack expansion?,"A variadic template pack expansion is a C++ programming technique that expands a parameter pack into a sequence of function calls or template instantiations, allowing for more flexible and generic programming.",
What is a CRTP-based factory?,A CRTP-based factory is a C++ programming pattern that uses template inheritance to implement a generic factory for creating objects of different types.,
"What is the difference between public, private, and protected access specifiers in C++?","Public members are accessible from anywhere, private members are accessible only from within the class, and protected members are accessible from within the class and its derived classes.",
What is the diamond problem in C++?,"The diamond problem is a C++ ambiguity that occurs when a class is derived from two or more base classes that share a common ancestor, causing ambiguity in how to resolve the shared base class subobject.",
What is a lambda function in C++?,"A lambda function is a C++ anonymous function that can be defined inline and captures its surrounding context, allowing for more concise and flexible code.",
What is the difference between a deep copy and a shallow copy in C++?,"A deep copy creates a new object with its own copy of the data, while a shallow copy simply copies the memory address of the data, causing two objects to share the same data.",
What is the difference between a class and a struct in C++?,"The only difference between a class and a struct in C++ is the default access level of its members (private for class, public for struct).",
What is a const member function in C++?,"A const member function is a C++ member function that is marked as const, indicating that it does not modify the state of the object and allowing it to be called on const objects.",
What is an override specifier in C++?,"An override specifier is a C++ feature that marks a virtual function as an override of a base class virtual function, allowing for better compiler error detection of mistakes.",
What is a final specifier in C++?,"A final specifier is a C++ feature that marks a virtual function or a class as final, preventing it from being overridden or derived from, respectively.",
What is a template metaprogramming in C++?,"Template metaprogramming is a C++ programming technique that uses templates to perform computations and generate code at compile-time, allowing for more efficient and expressive programs.",
What is a variadic template in C++?,"A variadic template is a C++ template that accepts a variable number of template arguments, allowing for more flexible and generic programming.",
What is an anonymous union in C++?,"An anonymous union is a C++ union that is declared without a name, allowing its members to be accessed directly without qualifying them with the union name.",
What is a tuple in C++?,"A tuple is a C++ template class that represents a fixed-size collection of heterogeneous values, allowing for more flexible and generic programming.",
What is an allocator in C++?,"An allocator is a C++ class that provides a uniform interface for allocating and deallocating memory, allowing for more flexible and efficient memory management.",
What is a scoped enumeration in C++?,"A scoped enumeration (or enum class) is a C++ enumeration that is enclosed in a namespace, allowing for better type safety and encapsulation.",
What is a CRTP-based decorator?,A CRTP-based decorator is a C++ programming pattern that uses template inheritance to add behavior to an object at runtime without changing its interface.,
What is a move constructor in C++?,"A move constructor is a C++ constructor that allows for the efficient transfer of resources (such as memory) from one object to another, reducing unnecessary copies.",
What is the copy-and-swap idiom in C++?,The copy-and-swap idiom is a C++ programming technique that uses a copy constructor and a swap function to implement a robust and efficient assignment operator.,
What is RAII in C++?,"RAII (Resource Acquisition Is Initialization) is a C++ programming technique that uses object lifetimes to automatically manage resources, such as memory or locks.",
What is a virtual inheritance in C++?,"Virtual inheritance is a C++ feature that allows a class to inherit from a common base class in a diamond inheritance hierarchy, preventing ambiguity and reducing memory overhead.",
What is the difference between a constructor and a destructor in C++?,"A constructor is a C++ member function that is called when an object is created, while a destructor is a member function that is called when an object is destroyed.",
What is a function object in C++?,"A function object (or functor) is a C++ object that acts like a function, allowing for more flexible and generic programming.",
What is the curiously recurring template pattern (CRTP) in C++?,"The CRTP is a C++ programming pattern that uses template inheritance to implement static polymorphism, allowing for efficient and type-safe code.",
What is the difference between a static member and a non-static member in C++?,"A static member is a member of a class that is shared by all instances of the class, while a non-static member is a member that is unique to each instance of the class.",
What is a const object in C++?," A const object is an object in C++ that is marked as const, indicating that its state cannot be modified.",
What is the difference between overloading and overriding in C++?,"Overloading is a C++ feature that allows multiple functions with the same name but different parameter types to coexist, while overriding is a feature that allows derived classes to provide their own implementation of a base class virtual function.",
What is a template specialization in C++?,A template specialization is a C++ feature that allows for customizing the behavior of a template for specific types or values.,
What is a static_assert in C++?,"A static_assert is a C++ feature that allows for compile-time assertion checking, allowing for more robust and error-free code.",
What is a mixin in C++?,"A mixin is a C++ programming pattern that uses multiple inheritance to combine multiple behaviors into a single class, allowing for more flexible and reusable code.",
What is a friend function in C++?,"A friend function is a C++ function that is declared as a friend of a class, allowing it to access private members of the class.",
What is a default argument in C++?,"A default argument is a C++ feature that allows for providing a default value for a function parameter, allowing for more concise and flexible function calls.",
What is a pure virtual function in C++?,"A pure virtual function is a C++ function that is declared as pure virtual, requiring derived classes to provide their own implementations.",
What is a constexpr function in C++?,"A constexpr function is a C++ function that can be evaluated at compile-time, allowing for more efficient and expressive code.",
What is a reference in C++?,"A reference is a C++ variable that is an alias for another variable, allowing for more efficient and concise code.",
What is the difference between a shallow copy and a deep copy in C++?,"A shallow copy in C++ creates a new object with a pointer to the same memory as the original object, while a deep copy creates a new object with a pointer to new memory with the same values as the original object.",
What is the difference between a member function and a static function in C++?,"A member function in C++ is associated with an object of the class, while a static function is not associated with any object of the class.",
What is an abstract class in C++?,An abstract class in C++ is a class that cannot be instantiated and contains at least one pure virtual function.,
What is the difference between a namespace and a class in C++?,"A namespace in C++ is used to group related entities together, while a class is a user-defined data type that contains data members and member functions.",
What is the difference between a private and a protected member in C++?,"A private member in C++ is only accessible by member functions of the same class, while a protected member is accessible by member functions of the same class and its derived classes.",
What is the difference between a function pointer and a member function pointer in C++?,"A function pointer in C++ points to a function that is not associated with any object of a class, while a member function pointer points to a member function that is associated with an object of a class.",
What is a pure virtual destructor in C++?,"A pure virtual destructor in C++ is a virtual destructor that is declared as pure virtual, indicating that the class is an abstract class.",
What is the difference between a struct and a class in C++?,"A struct in C++ is like a class, but with the default access level of public, while a class has the default access level of private.",
What is the difference between an object and a class in C++?,"An object in C++ is an instance of a class, while a class is a blueprint for creating objects.",
What is an access specifier in C++?,An access specifier in C++ is a keyword that specifies the level of access that members of a class have to other parts of the program.,
What is the difference between const and constexpr in C++?,"Const in C++ indicates that a variable cannot be modified, while constexpr indicates that a value can be evaluated at compile-time.",
What is the difference between a constructor and an initializer list in C++?,"A constructor in C++ is a function that creates an object, while an initializer list is a list of values used to initialize the data members of an object.",
What is the difference between a stack and a heap in C++?,"A stack in C++ is a region of memory used for automatic storage of local variables, while a heap is a region of memory used for dynamic allocation of objects.",
What is the difference between a virtual function and a pure virtual function in C++?,"A virtual function in C++ can be overridden in a derived class, while a pure virtual function must be overridden in a derived class.",
What is multiple inheritance in C++?,Multiple inheritance in C++ is a feature that allows a class to inherit from multiple base classes.,
What is an operator overload in C++?,An operator overload in C++ is a way to redefine the behavior of an operator for user-defined data types.,
What is the difference between a friend function and a member function in C++?,"A friend function in C++ is not a member of the class, but has access to its private members, while a member function is a member of the class and has access to its private members.",
What is an inline function in C++?,"An inline function in C++ is a function that is expanded by the compiler at the point of call, instead of being called as a separate function.",
What is a template in C++?,A template in C++ is a way to define a generic class or function that can work with any data type.,
What is the difference between a const pointer and a pointer to const in C++?,"A const pointer in C++ is a pointer whose value cannot be changed, while a pointer to const is a pointer that points to a const variable.",
What is the difference between a virtual function and a virtual destructor in C++?,"A virtual function in C++ is used to achieve polymorphism, while a virtual destructor is used to ensure that the correct destructor is called when deleting a derived class object through a base class pointer.",
What is the difference between dynamic_cast and static_cast in C++?,"Dynamic_cast in C++ is used to safely convert pointers and references to derived classes, while static_cast is used to perform static conversions between compatible types.",
What is the difference between a reference and a pointer to a function in C++?,"A reference to a function in C++ is an alias for a function, while a pointer to a function is a variable that stores the memory address of a function.",
What is the difference between a copy constructor and an assignment operator in C++?,"A copy constructor in C++ creates a new object with the same values as an existing object, while an assignment operator modifies an existing object with the values of another object.",
What is a pure virtual function with default implementation in C++?,"A pure virtual function with default implementation in C++ is a virtual function that has an implementation in the base class, but can be overridden in derived classes.",
What is the difference between private and public inheritance in C++?,"Private inheritance in C++ means that the derived class can access the base class members as private members, while public inheritance means that the derived class can access the base class members as public members.",
What is a friend class in C++?,A friend class in C++ is a class that is allowed to access the private and protected members of another class.,
What is a virtual base class in C++?,"A virtual base class in C++ is a base class that is shared among multiple derived classes, ensuring that only one copy of its data members is inherited.",
What is an interface class in C++?," An interface class in C++ is a class that contains only pure virtual functions, and is used to define a set of operations that other classes can implement.",
What is a copy constructor in C++?,A copy constructor in C++ is a special constructor that creates a new object with the same values as an existing object.,
What is the difference between a const object and a const member function in C++?,"A const object in C++ is an object that cannot be modified, while a const member function is a member function that does not modify the data members of a class.",
What is the difference between an abstract class and an interface class in C++?,"An abstract class in C++ contains one or more pure virtual functions and can have implementation code, while an interface class contains only pure virtual functions and cannot have implementation code.",
What is a virtual function table in C++?,"A virtual function table in C++ is a table that stores the addresses of the virtual functions for a class, and is used to achieve polymorphism.",
What is a const reference in C++?,"A const reference in C++ is a reference to a const object, and cannot be used to modify the object.",
What is a static member function in C++?,"A static member function in C++ is a member function that can be called without an object of the class, and operates only on static data members of the class.",
What is the difference between a const pointer and a const member function in C++?,"A const pointer in C++ is a pointer whose value cannot be changed, while a const member function is a member function that does not modify the data members of a class.",
What is an abstract base class in C++?,An abstract base class in C++ is a class that contains one or more pure virtual functions and cannot be instantiated directly.,
What is a static data member in C++?,"A static data member in C++ is a member of a class that is shared among all objects of that class, and is initialized only once.",
 What is a friend function in C++?,A friend function in C++ is a function that is allowed to access the private and protected members of a class.,
What is the difference between composition and inheritance in C++?,"Composition in C++ is a design technique where a class contains objects of other classes as members, while inheritance is a technique where a new class is created by deriving from an existing class.",
What is a copy assignment operator in C++?,A copy assignment operator in C++ is a special member function that assigns the values of one object to another object of the same class.,
"What is the difference between public, protected, and private access specifiers in C++?","Public members of a class in C++ can be accessed by any code, while protected members can be accessed by the class itself and its derived classes, and private members can be accessed only by the class itself.",
What is a virtual destructor in C++?,"A virtual destructor in C++ is a destructor that is declared as virtual in the base class, ensuring that the correct destructor is called when an object of a derived class is deleted.",
What is the difference between overriding and overloading in C++?,"Overriding in C++ is a technique where a derived class provides a new implementation of a virtual function from its base class, while overloading is a technique where a function has multiple definitions with different parameter lists.",
What is the difference between a const object and a const reference in C++?,"A const object in C++ cannot be modified, while a const reference is a reference to an object that cannot be modified through that reference.",
What is a non-static data member initialization in C++?,A non-static data member initialization in C++ is a technique where a data member of a class is initialized using a constructor in the class definition.,
What is a mutable data member in C++?,A mutable data member in C++ is a data member of a class that can be modified even in a const member function.,
What is the difference between new and malloc in C++?,"New in C++ is an operator that allocates memory for an object and returns a pointer to that object, while malloc is a function from the C standard library that allocates memory and returns a void pointer.",
What is the difference between call by value and call by reference in C++?,"Call by value means that a copy of the argument is passed to the function, and any changes made to the argument inside the function have no effect on the original value outside the function. Call by reference means that a reference to the original argument is passed to the function, and any changes made to the argument inside the function are reflected in the original value outside the function.",
What is an inline function in C++?,"An inline function is a function that is expanded in line with the rest of the code, rather than being called as a separate function. This can improve performance by reducing the overhead of function calls, but can also lead to larger code size.",
What is the difference between a class and a struct in C++?,"In C++, the only difference between a class and a struct is the default access level: members of a class are private by default, while members of a struct are public by default. Otherwise, they are identical.",
What is a virtual function in C++?,"A virtual function is a member function that can be overridden by derived classes. When a virtual function is called through a base class pointer or reference, the program will determine the type of the object at runtime and call the appropriate overridden function.",
What is a constructor in C++?,A constructor is a special member function of a class that is executed whenever an object of that class is created. It can be used to initialize the object's data members and perform any other setup that is needed.,
What is a destructor in C++?,"A destructor is a special member function of a class that is executed whenever an object of that class goes out of scope or is deleted. It can be used to release any resources that the object has acquired, such as memory or file handles.",
What is a template in C++?,"A template is a feature of C++ that allows you to write generic code that works with multiple types. Templates are used to create classes and functions that can operate on any data type, without the need for explicit type casting.",
What is a namespace in C++?,"A namespace is a container that holds a set of identifiers (names), such as variable and function names. Namespaces are used to organize code and prevent naming conflicts between different libraries and code modules.",
What is the difference between a copy constructor and an assignment operator in C++?,"A copy constructor is a special constructor that creates a new object by copying the data from an existing object. An assignment operator is an operator that assigns one object's data to another object. The copy constructor is called when a new object is created from an existing object, whereas the assignment operator is called when an existing object is assigned to another existing object.",
What is the difference between a C++ array and a vector?,"Both C++ arrays and vectors are containers for storing collections of data, but there are some key differences between the two. Arrays are fixed-size, whereas vectors can grow or shrink dynamically. Arrays are built into the language, whereas vectors are part of the Standard Template Library (STL). Arrays offer better performance for some operations, but vectors offer more convenience and flexibility.",
What is the difference between a stack and a queue in C++?,"A stack is a container that follows the Last In First Out (LIFO) principle, where the last element added to the container is the first one to be removed. A queue is a container that follows the First In First Out (FIFO) principle, where the first element added to the container is the first one to be removed. Both stack and queue are implemented in C++ Standard Template Library (STL) and can be used to store elements of any data type.",
How do you overload a operator in C++?,"Operator overloading in C++ allows you to redefine the behavior of operators for user-defined types. You can overload an operator by defining a special operator function, which is a member function or a non-member function, that has the keyword 'operator' followed by the operator symbol. The operator function must have at least one parameter of the class or struct type for which the operator is being overloaded.",
What is a smart pointer in C++?,"A smart pointer is an object that acts like a regular pointer but with additional functionality, such as automatic memory management and thread-safety. Smart pointers are implemented in C++ Standard Template Library (STL) and are used to wrap a pointer in order to prevent memory leaks and other errors that can occur when using raw pointers. Examples of smart pointers in C++ are unique_ptr, shared_ptr and weak_ptr.",
What is the difference between a static and a dynamic array in C++?,A static array is an array whose size is fixed at compile-time and is stored in the data segment of a program. A dynamic array is an array whose size can be changed at runtime and is stored on the heap. Static arrays use less memory and are faster than dynamic arrays. Dynamic arrays can be resized during the execution of the program and also can be deleted after use while static array can't be deleted and are fixed in size.,
What is the difference between a const and a non-const object in C++?,"A const object is an object that cannot be modified after it is created. A non-const object is an object that can be modified after it is created. A const object can be read but not written, whereas a non-const object can be read and written. Constness can be applied to variables, member functions, and objects.",
What is a function pointer in C++?,"A function pointer is a pointer that points to a function. It is used to call a function through a pointer, rather than by directly calling the function by its name. Function pointers are useful for implementing callback functions and for passing functions as arguments to other functions. Function pointers can be assigned to regular functions and also to class member functions.",
What is an exception in C++?,"An exception is an abnormal event that occurs during the execution of a program, such as an attempt to divide by zero or to access an out-of-bounds array element. C++ provides a mechanism called exception handling that allows you to handle exceptions in a controlled way. Exception handling in C++ uses try, catch and throw statements to handle exceptions, where try block encloses the code that may throw an exception, catch block catches the exception and throw statement throws the exception.",
What is a virtual destructor in C++?,"A virtual destructor is a destructor that is declared as virtual, meaning that it can be overridden by derived classes. When an object of a derived class is deleted, and the base class destructor is not virtual.",
What is a template class in C++?,"A template class is a generic class that can work with different data types. Template classes are defined using the template keyword, followed by a list of template parameters enclosed in angle brackets. These template parameters can be used as placeholders for the actual data types that will be used when the class is instantiated. This allows the class to be reused with different data types without the need to write separate code for each data type.",
What is the difference between a reference and a pointer in C++?,"A reference is an alias for an existing object, whereas a pointer is a variable that holds the memory address of an object. A reference must be initialized when it is defined and cannot be reassigned to refer to another object, whereas a pointer can be reassigned to refer to different objects at any time. A reference can be thought of as a constant pointer, and it is generally safer and easier to use than a pointer.",
What is a friend function in C++?,A friend function is a non-member function that has been granted access to the private and protected members of a class. Friend functions are defined outside the class but are declared inside the class using the keyword friend. Friend functions can be useful for implementing operator overloads and for providing additional functionality to a class.,
What is a pure virtual function in C++?,"A pure virtual function is a virtual function that has no implementation in the base class. It is used to create an abstract base class, which is a class that cannot be instantiated but can be inherited by other classes. A pure virtual function is declared using the keyword virtual followed by =0 at the end of the function declaration. Classes that contain pure virtual functions are known as abstract classes.",
What is a static member in C++?,"A static member is a member of a class that is shared by all objects of the class. It is defined using the keyword static before the type of the member. A static member has a single copy that is shared by all objects of the class, and can be accessed by invoking the class name instead of an object.",
What is a constant member function in C++?,"A constant member function is a member function that is marked as const, indicating that it does not modify the state of the object. A constant member function can be called on a const object, and it can also be called on a non-const object. Constant member functions are useful for ensuring that the state of the object is not modified accidentally.",
What are the different data types present in C++?,"The 4 data types in C++ are given below:Primitive Datatype(basic datatype). Example- char, short, int, float, long, double, bool, etc.Derived datatype. Example- array, pointer, etc.Enumeration. Example- enumUser-defined data types. Example- structure, class, etc.",
What is the difference between C and C++?,"The main difference between C and C++ are provided in the table below:C is a procedure-oriented programming language.C++ is an object-oriented programming language.C does not support data hiding.In C++ data is hidden by encapsulation to ensure that data structures and operators are used as intended.C is a subset of C++C++ is a superset of C.Function and operator overloading are not supported in C.Function and operator overloading is supported in C++.Namespace features are not present in C.Namespace is used by C++, which avoids name collisions.In C functions can not be defined inside structures.In C++ functions can be defined inside structures.In C, calloc() and malloc() functions are used for memory allocation and free() function is used for memory deallocation.In C++, new operator is used for memory allocation and deletes operator is used for memory deallocation.",
What are class and object in C++?,A class is a user-defined data type that has data members and member functions. Data members are the data variables and member functions are the functions that are used to perform operations on these variables.An object is an instance of a class. Since a class is a user-defined data type so an object can also be called a variable of that data type.,
What is the difference between struct and class?,"In C++ a structure is the same as a class except for a few differences like security. The difference between struct and class are given below:Members of the structure are public by default.Members of the class are private by default.When deriving a struct from a class/struct, default access specifiers for base class/struct are public.When deriving a class, default access specifiers are private.",
What is operator overloading?,"Operator Overloading is a very essential element to perform the operations on user-defined data types. By operator overloading we can modify the default meaning to the operators like +, -, *, /, <=, etc.Ã¯Â¿Â½",
What is polymorphism in C++?,"Polymorphism in simple means having many forms. Its behavior is different in different situations. And this occurs when we have multiple classes that are related to each other by inheritance.For example, think of a base class called a car that has a method called car brand(). Derived classes of cars could be Mercedes, BMW, Audi - And they also have their own implementation of a carsThe two types of polymorphism in c++ are:Compile Time Polymorphism.Runtime Polymorphism.",
Explain constructor in C++,The constructor is a member function that is executed automatically whenever an object is created. Constructors have the same name as the class of which they are members so that compiler knows that the member function is a constructor. And no return type is used for constructors.,
Tell me about virtual function,"Virtual function is a member function in the base class that you redefine in a derived class. A virtual function is declared using the virtual keyword. When the function is made virtual, C++ determines which function is to be invoked at the runtime based on the type of the object pointed by the base class pointer.",
Compare compile time polymorphism and Runtime polymorphism,"The main difference between compile-time and runtime polymorphism is provided below:In Compile-time polymorphism, we would come to know at compile time which method will be called. And the call is resolved by the compiler.In Run time polymorphism, we come to know at run time which method will be called. The call is not resolved by the compiler.Compile-time polymorphism provides fast execution because it is known at the compile time.Run time polymorphism provides slow execution compared to compile-time polymorphism because it is known at the run time.Compile-time polymorphism is achieved by function overloading and operator overloading.Run time polymorphism can be achieved by virtual functions and pointers.",
What do you know about friend class and friend function?,"A friend class can access private, protected, and public members of other classes in which it is declared as friends.Like friend class, friend function can also access private, protected, and public members. But, Friend functions are not member functions.",
What are the C++ access specifiers?,In C++ there are the following access specifiers:Public: All data members and member functions are accessible outside the class.Protected: All data members and member functions are accessible inside the class and to the derived class.Private: All data members and member functions are not accessible outside the class.,
Define inline function,"If a function is inline, the compiler places a copy of the code of that function at each point where the function is called at compile time. One of the important advantages of using an inline function is that it eliminates the function calling overhead of a traditional function.",
What is a reference in C++?,"A reference is like a pointer. It is another name of an already existing variable. Once a reference name is initialized with a variable, that variable can be accessed by the variable name or reference name both.If we change the value of ref it will be reflected in x. Once a reference variable is initialized it cannot refer to any other variable. We can declare an array of pointers but an array of references is not possible.",
What do you mean by abstraction in C++?,Abstraction is the process of showing the essential details to the user and hiding the details which we don't want to show to the user or hiding the details which are irrelevant to a particular user.,
Is deconstructor overloading possible? If yes then explain and if no then why?,"No destructor overloading is not possible. Destructors take no arguments, so there's only one way to destroy an object. That's the reason destructor overloading is not possible.",
What do you mean by call by value and call by reference?,"In call by value method, we pass a copy of the parameter is passed to the functions. For these copied values a new memory is assigned and changes made to these values do not reflect the variable in the main function.In call by reference method, we pass the address of the variable and the address is used to access the actual argument used in the function call. So changes made in the parameter alter the passing argument.",
What is an abstract class and when do you use it?,A class is called an abstract class whose objects can never be created. Such a class exists as a parent for the derived classes. We can make a class abstract by placing a pure virtual function in the class.,
What are destructors in C++?,A constructor is automatically called when an object is first created. Similarly when an object is destroyed a function called destructor automatically gets called. A destructor has the same name as the constructor (which is the same as the class name) but is preceded by a tilde.,
What are the static members and static member functions?,"When a variable in a class is declared static, space for it is allocated for the lifetime of the program. No matter how many objects of that class have been created, there is only one copy of the static member. So same static member can be accessed by all the objects of that class.A static member function can be called even if no objects of the class exist and the static function are accessed using only the class name and the scope resolution operator ::",
Explain inheritance,"Inheritance is the process of creating new classes, called derived classes, from existing classes. These existing classes are called base classes. The derived classes inherit all the capabilities of the base class but can add new features and refinements of their own.Class Bus, Class Car, and Class Truck inherit the properties of Class Vehicle.The most important thing about inheritance is that it permits code reusability.",
What is a copy constructor?,A copy constructor is a member function that initializes an object using another object of the same class.We can define our copy constructor. If we don't define a copy constructor then the default copy constructor is called.,
What is the difference between shallow copy and deep copy?,The difference between shallow copy and a deep copy is given below:Shallow copy stores the references of objects to the original memory address.Deep copy makes a new and separate copy of an entire object with its unique memory address.Shallow copy is faster.Deep copy is comparatively slower.Shallow copy reflects changes made to the new/copied object in the original object.Deep copy doesn't reflect changes made to the new/copied object in the original object,
What is the difference between virtual functions and pure virtual functions?,A virtual function is a member function in the base class that you redefine in a derived class. It is declared using the virtual keyword.A pure virtual function is a function that has no implementation and is declared by assigning 0. It has no body.,
If class D is derived from a base class B. When creating an object of type D in what order would the constructors of these classes get called?,"The derived class has two parts, a base part, and a derived part.When C++ constructs derived objects, it does so in phases. First, the most-base class(at the top of the inheritance tree) is constructed. Then each child class is constructed in order until the most-child class is constructed last.Ã¯Â¿Â½So the first Constructor of class B will be called and then the constructor of class D will be called.During the destruction exactly reverse order is followed. That is destructor starts at the most-derived class and works its way down to base class.So the first destructor of class D will be called and then the destructor of class B will be called.",
Can we call a virtual function from a constructor?,"Yes, we can call a virtual function from a constructor. But the behavior is a little different in this case. When a virtual function is called, the virtual call is resolved at runtime. It is always the member function of the current class that gets called. That is the virtual machine doesnÃ¯Â¿Â½t work within the constructor.",
What are void pointers?,A void pointer is a pointer which is having no datatype associated with it. It can hold addresses of any type.We can assign a pointer of any type to a void pointer but the reverse is not true unless you typecast it as,
What is this pointer in C++?,"The member functions of every object have a pointer named this, which points to the object itself. The value of this is set to the address of the object for which it is called. It can be used to access the data in the object it points to.",
How do you allocate and deallocate memory in C++?,The new operator is used for memory allocation and deletes operator is used for memory deallocation in C++.,
What is C++?,"C++ is a computer programming language that is a superset of C, with additional features.",
Does C++ make use of OOPS?,"Yes, it does. An Object-Oriented Programming System is a paradigm that includes concepts such as data binding, polymorphism, and inheritance, among others.",
What is a Class?,"A class is a user-defined data type that is at the center of OOP. It reflects different entities, attributes, and actions.",
What is an object?,"An object is an instance of the class. An object can have fields, methods, and constructors.",
What is encapsulation?,Encapsulation is the process of binding together the data and functions in a class. It is applied to prevent direct access to the data for security reasons. The functions of a class are applied for this purpose.,
What is abstraction?,"An abstraction in C++ is hiding the internal implementations and displaying only the required details.For example, when you send an important message through email, at that time, only writing and clicking the send option is used. This outcome is just the success message that is displayed to confirm that your email has been sent. However, the process followed in transferring the data through email is not displayed because it is of no use to you.",
What is inheritance?,C++ allows classes to inherit some of the commonly used state and behavior from other classes. This process is known as inheritance.,
What is the access specifier and what are the types?,"An access specifier determines how the class members, i.e., functions and variables, will be accessed outside the class's scope.There are three types of access specifiers in C++:Private: Such class members can't be accessed outside the class in which they are declared and are only accessible within the same class. Even child classes are disabled to access private members of its parent class.Protected: In addition to the class in which they are declared, the child classes can access its parent class's protected members.Public: Class members declared as public can be accessed throughout the program.",
What is a namespace?,"A namespace is used for resolving the name conflict of the identifier, which is accomplished by placing them under various namespaces.",
What is a class template?,A class template is a name given to the generic class. The use of the keyword template is made for defining a class template.,
What is the function of the keyword Volatile?,"""Volatile"" is a function that helps in declaring that the particular variable is volatile and thereby directs the compiler to change the variable externally- this way, the compiler optimization on the variable reference can be avoided.",
What is a storage class?,"A storage class in C++ specifically resembles the scope of symbols, including the variables, functions, etc. Some of the storage class names in C++ include mutable, auto, static, extern, register, etc.",
What is an Inline Function? Is it possible to ignore inlining?,"In order to reduce the function call overhead, C++ offers inline functions. As the name suggests, an inline function is expanded in line when it is called.As soon as the inline function is called, the whole code of the same gets either inserted or substituted at the particular point of the inline function call. The substitution is completed by the C++ compiler at compile time. Small inline functions might increase program efficiency.",
Can we have a recursive inline function in C++?,"Even though it is possible to call an inline function from within itself in C++, the compiler may not generate the inline code. This is so because the compiler won't determine the depth of the recursion at the compile time.Nonetheless, a compiler with a good optimizer is able to inline recursive calls until some depth is fixed at compile time and insert non-recursive calls at compile time for the cases when the actual depth exceeds run time.",
What is the this pointer?,"The this pointer is a constant pointer, and it holds the memory address of the current object. It passes as a hidden argument to all the nonstatic member function calls. It is available as a local variable within the body of all the nonstatic functions.As static member functions can be called even without any object, i.e., with the class name, the Ã¯Â¿Â½thisÃ¯Â¿Â½ pointer is not available for them.",
What are the most important differences between C and C++?,"C++ supports references while C doesn't.Features like friend functions, function overloading, inheritance, templates, and virtual functions are inherent to C++. These are not available in the C programming language.In C, exception handling is taken care of in the traditional if-else style. On the other hand, C++ offers support for exception handling at the language level.Mainly used input and output in C are scanf() and printf(), respectively. In C++, cin is the standard input stream while cout serves as the standard output stream.While C is a procedural programming language, C++ provides support for both procedural and object-oriented programming approaches.",
Why do we need the Friend class and function?,"Sometimes, there is a need for allowing a particular class to access private or protected members of a class. The solution is a friend class, which can access the protected and private members of the class in which it is declared as a friend.Similar to the friend class, a friend function is able to access private and protected class members. A friend function can either be a global function or a method of some class.Some important points about friend class and friend function:Friendship is not inherited.Friendship isn't mutual, i.e., if some class called riend is a friend of some other class called NotAFriend, then it doesn't automatically become a friend of the Friend class.The total number of friend classes and friend functions should be limited in a program as the overabundance of the same might lead to a depreciation of the concept of encapsulation of separate classes, which is an inherent and desirable quality of object-oriented programming.",
What is Operator Overloading?,Operating overloading is when operators have different implementations depending on the arguments passed. It is a type of polymorphism.,
What is Polymorphism?,"Polymorphism is the ability of a variable, function, or object to take on multiple forms.",
Explain vTable and vptr.,vTable is a table containing function pointers. Every class has a vTable. vptr is a pointer to vTable. Each object has a vptr. ,
How is function overloading different from operator overloading?,"Function overloading allows two or more functions with different types and number of parameters to have the same name. On the other hand, operator overloading allows for redefining the way an operator works for user-defined types.",
Is it possible for a C++ program to be compiled without the main() function?,"Yes, it is possible. However, as the main() function is essential for the execution of the program, the program will stop after compiling and will not execute.",
What is a destructor?,"A destructor is the member function of the class. It has the same name as the class name and is also prefixed with a tilde symbol. It can be executed automatically whenever an object loses its scope. A destructor cannot be overloaded, and it has the only form without the parameters.",
What is the default constructor?,The compiler provides a constructor to every class in case the provider does not offer the same. This is when the programmer provides the constructor with no specific parameters - this is called a default constructor. The code for default constructor can be displayed in the following example.,
Can we provide one default constructor for our class?,"No, we cannot provide one default constructor for our class. When a variable in the class type is set to null, it means that it was never initialized and the outcomes will be zero.",
What is the main difference between the keyword struct and class?,"The keyword struct is used for resembling public members by default, while the keyword class is used for resembling private members by default.",
Explain Virtual Functions and Runtime Polymorphism in C++ with an example.,"Any function when accompanying the virtual keyword exhibits the behavior of a virtual function. Unlike normal functions that are called in accordance with the type of pointer or reference used, virtual functions are called as per the type of the object pointed or referred.In simple terms, virtual functions resolve at runtime, not anytime sooner. Use of virtual functions could also be understood as writing a C++ program leveraging the concept of runtime polymorphism. Things essential to writing a virtual function in C++ are:A base classA derived classA function with the same name in both the classes i.e. the base class and the derived classA pointer or reference of base class type that points or refers, respectively to an object of the derived class",
What differences separate structure from a class in C++?,"There are two important distinctions between a class and a structure in C++. These are:When deriving a structure from a class or some other structure, the default access specifier for the base class or structure is public. On the contrary, the default access specifier is private when deriving a class.While the members of a structure are public by default, the members of a class are private by default",
What is a static member?,"Denoted by the static keyword, a static member is allocated storage, in the static storage area, only once during the program lifetime. Some important facts pertaining to the static members are:Any static member function can't be virtualStatic member functions don't have this pointerThe const, const volatile, and volatile declaration aren't available for static member functions",
What is the Reference variable?,"The reference variable in C++ is the name given to the existing variables. The variable name and reference variable point share the same memory location in C++, which helps in updating the original variable using the reference variable. The code can be displayed in the following example.",
Explain the Copy Constructor.,"A member function that initializes an object using another object of the same class is known as a copy constructor in C++. They can also be made private. A call to the copy constructor can happen in any of the following 4 scenarios when:The compiler generates a temporary objectAn object is constructed or based on some another object of the same classAn object of the class is returned by valueAn object of the class is passed (i.e., to a function) by value as an argument.",
What is a mutable storage class specifier? How can they be used?,A mutable storage class specifier is applied only to the class's non-static and non-constant member variable. It is used for altering the constant class object's member by declaring it. This can be done by using a storage class specifier.,
What are the differences between a shallow copy and a deep copy?,"The differences between a shallow copy and a deep copy are:Shallow Copy allows memory dumping on a bit-by-bit basis from one object to another.Deep Copy allows the copy field, which is done by field from one object to another.Shallow copy reflects changes made to the new/copied object in the original object.Deep copy doesn't reflect changes made to the new/copied object in the original object.",
What is an Abstract class?,"An abstract class in C++ is referred to as the base class, which has at least one pure virtual function. In such a function, a person cannot instantiate an abstract class. This way, a pure virtual function is defined by using a pure specifier which is equal to zero during the declaration of the virtual member function in the class declaration. The code sample can be displayed as follows in example.",
What are the functions of the scope resolution operator?,The functions of the scope resolution operator include the following.It helps resolve the scope of various global variables.It helps associate the function with the class when it is defined outside the class.,
What is a token?,"A token is a name given to the various functions in C++ programs. Examples of tokens include a keyword, symbol, string literal, identifier, constant, etc. ",
What is the diamond problem that occurs with multiple inheritance in C++?,The diamond problem in C++ represents the inability of the programming language to support hybrid inheritance using multiple and hierarchical inheritance.,
What is the full form of OOPS?,Object Oriented Programming System.,
 What is a class?,Class is a blue print which reflects the entities attributes and actions. Technically defining a class is designing an user defined data type.,
What is an object?,An instance of the class is called as object.,
 List the types of inheritance supported in C++.,"Single, Multilevel, Multiple, Hierarchical and Hybrid.",
 What is the role of protected access specifier?,"If a class member is protected then it is accessible in the inherited class. However, outside the both the private and protected members are not accessible.",
 What is encapsulation?,The process of binding the data and the functions acting on the data together in an entity (class) called as encapsulation.,
 What is abstraction?,Abstraction refers to hiding the internal implementation and exhibiting only the necessary details.,
 What is inheritance?,Inheritance is the process of acquiring the properties of the exiting class into the new class. The existing class is called as base/parent class and the inherited class is called as derived/child class.,
 Explain the purpose of the keyword volatile.,Declaring a variable volatile directs the compiler that the variable can be changed externally. Hence avoiding compiler optimization on the variable reference.,
 What is an inline function?,A function prefixed with the keyword inline before the function definition is called as inline function. The inline functions are faster in execution when compared to normal functions as the compiler treats inline functions as macros.,
 What is a storage class?,Storage class specifies the life or scope of symbols such as variable or functions.,
 Mention the storage classes names in C++.,"The following are storage classes supported in C++:auto, static, extern, register and mutable",
 What is the role of mutable storage class specifier?,A constant class objects member variable can be altered by declaring it using mutable storage class specifier. Applicable only for non-static and non-constant member variable of the class.,
 Distinguish between shallow copy and deep copy.,Shallow copy does memory dumping bit-by-bit from one object to another. Deep copy is copy field by field from object to another. Deep copy is achieved using copy constructor and or overloading assignment operator.,
 What is a pure virtual function?,A virtual function with no function body and assigned with a value zero is called as pure virtual function.,
 What is an abstract class in C++?,A class with at least one pure virtual function is called as abstract class. We cannot instantiate an abstract class.,
 What is a reference variable in C++?,A reference variable is an alias name for the existing variable. Which mean both the variable name and reference variable point to the same memory location. Therefore updation on the original variable can be achieved using reference variable too.,
 What is role of static keyword on class member variable?,A static variable does exit though the objects for the respective class are not created. Static member variable share a common memory across all the objects created for the respective class. A static member variable can be referred using the class name itself.,
 Explain the static member function.,A static member function can be invoked using the class name as it exits before class objects comes into existence. It can access only static members of the class.,
 Name the data type which can be used to store wide characters in C++.,wchar_t,
 What are/is the operator/operators used to access the class members?,Dot (.) and Arrow ( -> ),
 Can we initialize a class/structure member variable as soon as the same is defined?,"No, Defining a class/structure is just a type definition and will not allocated memory for the same.",
 What is the data type to store the Boolean value?,"bool, is the new primitive data type introduced in C++ language.",
 What is function overloading?,Defining several functions with the same name with unique list of parameters is called as function overloading.,
 What is operator overloading?,Defining a new job for the existing operator w.r.t the class objects is called as operator overloading.,
 Do we have a String primitive data type in C++?,"No, its a class from STL (Standard template library).",
 Name the default standard streams in C++.,"cin, cout, cerr and clog.",
 Which access specifier/s can help to achive data hiding in C++?,Private & Protected.,
" When a class member is defined outside the class, which operator can be used to associate the function definition to a particular class?",Scope resolution operator (::),
 What is a destructor? Can it be overloaded?,A destructor is the member function of the class which is having the same name as the class name and prefixed with tilde (~) symbol. It gets executed automatically w.r.t the object as soon as the object loses its scope. It cannot be overloaded and the only form is without the parameters.,
 What is a constructor?,A constructor is the member function of the class which is having the same as the class name and gets executed automatically as soon as the object for the respective class is created.,
 What is a default constructor? Can we provide one for our class?,Every class does have a constructor provided by the compiler if the programmer doesnt provides one and known as default constructor. A programmer provided constructor with no parameters is called as default constructor. In such case compiler doesnt provides the constructor.,
 Which operator can be used in C++ to allocate dynamic memory?,new is the operator can be used for the same.,
 What is the purpose of delete operator?,delete operator is used to release the dynamic memory which was created using new operator.,
 Can I use malloc() function of C language to allocate dynamic memory in C++?,"Yes, as C is the subset of C++, we can all the functions of C in C++ too.",
 Can I use delete operator to release the memory which was allocated using malloc() function of C language?,"No, we need to use free() of C language for the same.",
 What is a friend function?,A function which is not a member of the class but still can access all the member of the class is called so. To make it happen we need to declare within the required class following the keyword friend.,
 What is a copy constructor?,A copy constructor is the constructor which take same class object reference as the parameter. It gets automatically invoked as soon as the object is initialized with another object of the same class at the time of its creation.,
 Does C++ supports exception handling? If so what are the keywords involved in achieving the same.,"C++ does supports exception handling. try, catch & throw are keyword used for the same.",
 Explain the pointer  this.,"This, is the pointer variable of the compiler which always holds the current active objects address.",
 What is the difference between the keywords struct and class in C++?,By default the members of struct are public and by default the members of the class are private.,
 Can we implement all the concepts of OOPS using the keyword struct?,Yes.,
 What is the block scope variable in C++?,A variable whose scope is applicable only within a block is said so. Also a variable in C++ can be declared anywhere within the block.,
 What is the role of the file opening mode ios::trunk?,"If the file already exists, its content will be truncated before opening the file.",
What is the scope resolution operator?,The scope resolution operator is used to: Resolve the scope of global variables. To associate function defination to a class if the function is defined outside the class.,
 What is a namespace?,A namespace is the logical division of the code which can be used to resolve the name conflict of the identifiers by placing them under different name space.,
 What are command line arguments?,The arguments/parameters which are sent to the main() function while executing from the command line/console are called so. All the arguments sent are the strings only.,
 What is a class template?,A template class is a generic class. The keyword template can be used to define a class template.,
 What is keyword auto for?,By default every local variable of the function is automatic (auto). In the below function both the variables i and j are automatic variables.,
 What is a static variable?,A static local variables retains its value between the function call and the default value is 0. The following function will print 1 2 3 if called thrice.,
 What is the purpose of extern storage specifier.,Used to resolve the scope of global symbol,
 What is the meaning of base address of the array?,The starting address of the array is called as the base address of the array.,
 When should we use the register storage specifier?,"If a variable is used most frequently then it should be declared using register storage specifier, then possibly the compiler gives CPU register for its storage to speed up the look up of the variable.",
 Can a program be compiled without main() function?,"Yes, it can be but cannot be executed, as the execution requires main() function definition.",
 Where an automatic variable is stored?,Every local variable by default being an auto variable is stored in stack memory,
 What is a container class?,A class containing at least one member variable of another class type in it is called so.,
 What is a token?,"A C++ program consists of various tokens and a token is either a keyword, an identifier, a constant, a string literal, or a symbol.",
 What is a preprocessor?,Preprocessor is a directive to the compiler to perform certain things before the actual compilation process begins.,
 What are command line arguments?,The arguments which we pass to the main() function while executing the program are called as command line arguments. The parameters are always strings held in the second argument (below in args) of the function which is array of character pointers. First argument represents the count of arguments (below in count) and updated automatically by operating system.,
 What are the different ways of passing parameters to the functions? Which to use when?,Call by value  We send only values to the function as parameters. We choose this if we do not want the actual parameters to be modified with formal parameters but just used.Call by address  We send address of the actual parameters instead of values. We choose this if we do want the actual parameters to be modified with formal parameters.Call by reference  The actual parameters are received with the C++ new reference variables as formal parameters. We choose this if we do want the actual parameters to be modified with formal parameters.,
 What is reminder for 5.0 % 2?,"Error, It is invalid that either of the operands for the modulus operator (%) is a real number.",
 Can we resize the allocated memory which was allocated using new operator?,"No, there is no such provision available.",
 Who designed C++ programming language?,Bjarne Stroustrup.,
 Which operator can be used to determine the size of a data type/class or variable/object?,sizeof,
 How can we refer to the global variable if the local and the global variable names are same?,We can apply scope resolution operator (::) to the for the scope of global variable.,
 What are valid operations on pointers?,The only two permitted operations on pointers are: Comparision ii) Addition/Substraction (excluding void pointers),
 What is recursion?,Function calling itself is called as recursion.,
 What is the first string in the argument vector w.r.t command line arguments?,Program name.,
 What is the maximum length of an identifier?,Ideally it is 32 characters and also implementation dependent.,
 What is the default function call method?,By default the functions are called by value.,
 What are available mode of inheritance to inherit one class from another?,"Public, private & protected",
 What is the difference between delete and delete[]?,Delete[] is used to release the array allocated memory which was allocated using new[] and delete is used to release one chunk of memory which was allocated using new.,
 Does an abstract class in C++ need to hold all pure virtual functions?,"Not necessarily, a class having at least one pure virtual function is abstract class too.",
 Is it legal to assign a base class object to a derived class pointer?,"No, it will be error as the compiler fails to do conversion.",
 What happens if an exception is thrown outside a try block?,The program shall quit abruptly.,
 Are the exceptions and error same?,"No, exceptions can be handled whereas program cannot resolve errors.",
 What is function overriding?,Defining the functions within the base and derived class with the same signature and name where the base classs function is virtual.,
 Which function is used to move the stream pointer for the purpose of reading data from stream?,seekg(),
 Which function is used to move the stream pointer for the purpose of writing data from stream?,seekp(),
 Are class functions taken into consideration as part of the object size?,"No, only the class member variables determines the size of the respective class object.",
 Can we create and empty class? If so what would be the size of such object.,We can create an empty class and the object size will be 1.,
 What is std?,Default namespace defined by C++.,
 What is the full form of STL?,Standard template library,
 What is cout?,cout is the object of ostream class. The stream cout is by default connected to console output device.,
 What is cin?,cin is the object of istream class. The stream cin is by default connected to console input device.,
 What is the use of the keyword using?,It is used to specify the namespace being used in.,
" If a pointer declared for a class, which operator can be used to access its class members?",Arrow (->) operator can be used for the same,
 What is difference between including the header file with-in angular braces < > and double quotes  ,"If a header file is included with in < > then the compiler searches for the particular header file only with in the built in include path. If a header file is included with in \xe2\x80\x9c \xe2\x80\x9c, then the compiler searches for the particular header file first in the current working directory, if not found then in the built in include path",
" S++ or S = S+1, which can be recommended to increment the value by 1 and why?","S++, as it is single machine instruction (INC) internally.",
 What is the difference between actual and formal parameters?,The parameters sent to the function at calling end are called as actual parameters while at the receiving of the function definition called as formal parameters.,
 What is the difference between variable declaration and variable definition?,Declaration associates type to the variable whereas definition gives the value to the variable.,
 Which key word is used to perform unconditional branching?,goto.,
 Is 068 a valid octal number?,"No, it contains invalid octal digits.",
 What is the purpose of #undef preprocessor?,It will be used to undefine an existing macro definition.,
 Can we nest multi line comments in a C++ code?,"No, we cannot.",
 What is a virtual destructor?,A virtual destructor ensures that the objects resources are released in the reverse order of the object being constructed w.r.t inherited object.,
 What is the order of objects destroyed in the memory?,The objects are destroyed in the reverse order of their creation.,
 What is a friend class?,A class members can gain accessibility over other class member by placing the class declaration prefixed with the keyword friend in the destination class.,
What is C++? What are the advantages of C++?,"C++ is an object-oriented programming language that was introduced to overcome the jurisdictions where C was lacking. By object-oriented we mean that it works with the concept of polymorphism, inheritance, abstraction, encapsulation, object, and class.Advantages of C++:C++ is an OOPs language that means the data is considered as objects.C++ is a multi-paradigm language; In simple terms, it means that we can program the logic, structure, and procedure of the program.Memory management is a key feature in C++ as it enables dynamic memory allocationIt is a Mid-Level programming language which means it can develop games, desktop applications, drivers, and kernels",
Define std?,std is also known as Standard or it can be interpreted as a namespace. The command using namespace std informs the compiler to add everything under the std namespace and inculcate them in the global namespace. This all inculcation of global namespace benefits us to use cout and cin without using std::_operator_.,
What are references in C++?,"When a variable is described as a reference it becomes an alias of the already existing variable. In simple terms, a referenced variable is another named variable of an existing variable keeping in mind that changes made in the reference variable will be reflected in the already existing variable. A reference variable is preceded with a & symbol.",
What do you mean by Call by Value and Call by Reference?,"In this programming language to call a function we have 2 methods: Call by Value and Call by ReferenceCall by Value and Call by Reference.In Call by Value a copy of a variable is passed.In Call by reference a variable itself is passed fundamentally.In Call by Value The changes made in the function are never reflected outside the function on the variable. In short, the original value is never altered in Call by Value.In Call by Reference The changes made in the functions can be seen outside the function on the passed function. In short, the original value is altered in Call by reference. In Call by Value Passed actual and formal parameters are stored in different memory locations. Therefore, making Call by Value a little memory insufficient.In Call by reference Passed actual and formal parameters are stored in the same memory location. Therefore, making Call by Reference a little more memory efficient.",
Define token in C++,"A token is the smallest individual element of a program that is understood by a compiler. A token comprises the following:Keywords:That contain a special meaning to the compiler.Identifiers:That hold a unique value/identity.Constants:That never change their value throughout the program.Strings:That contains the homogenous sequence of data.Special Symbols:They have some special meaning and cannot be used for another purpose; eg: [] () {}, ; * = #.Operators:Who perform operations on the operand.",
What is the difference between C and C++?,"C is a procedural programming language. In simple words, it does not support classes and objects.C++ is a mixture of both procedural and object-oriented programming languages. In simple words, it supports classes and objects.C does not support any OOPs concepts like polymorphism, data abstraction, encapsulation, classes, and objects.C++ supports all concepts of data.C does not support Function and Operator Overloading.C++ supports Function and Operator Overloading respectively.C is a function-driven language.C++ is an object-driven language.",
What is the difference between struct and class?,"Members of the struct are always by default public mode.Members of the class can be in private, protected, and public modes.Structure does not support inheritance.Classes do support the concept of inheritance.Structures are of the value type. They only hold value in memory.Classes are of reference type. It holds a reference of an object in memory.The memory in structures is stored as stacks.The memory in classes is stored as heaps.",
What is the difference between reference and pointer?,The value of a reference cannot be reassigned.The value of a pointer can be reassigned.Reference can never hold a null value as it needs an existing value to become an alias of.Pointer can hold or point at a null value and be termed as a nullptr or null pointer.Reference cannot work with arrays.Pointer can work with arrays.To access the members of class/struct reference uses a dot.To access the members of class/struct pointer uses a  ->.The memory location of reference can be accessed easily or it can be used directly.The memory location of a pointer cannot be accessed easily as we have to use a dereference *.,
What is the difference between an array and a list?,Array are contiguous memory locations of homogenous data types stored in a fixed location or size.  Lists are classic individual elements that are linked or connected to each other with the help of pointers and do not have a fixed size.Arrays are static in nature.Lists are dynamic in nature.Array uses less memory than linked lists.List uses more memory as it has to store the value and the pointer memory location.,
What is the difference between a while loop and a dowhile loop?,"While loop is also termed an entry-controlled loop.The do-while loop is termed an exit control loop.In while loop,If the condition is not satisfied the statements inside the loop will not execute. In do-while loop, even if the condition is not satisfied the statements inside the loop will execute for at least one time.",
Discuss the difference between prefix and postfix?,prefix simply means putting the operator before the operand.postfix simply means putting the operator after the operand.prefix executes itself before ;.postfix executes itself after ;.Associativity of prefix ++ is right to left.Associativity of postfix ++ is left to right.,
What is the difference between new and malloc()?,new is an operator which performs an operation. malloc is a function that returns and accepts values.new calls the constructors.malloc cannot call a constructor.new is faster than malloc as it is an operator.malloc is slower than new as it is a function.new returns the exact data type.malloc returns void*.,
What is the difference between virtual functions and pure virtual functions?,"A Virtual Function is a member function of a base class that can be redefined in another derived class.A Pure Virtual Function is a member function of a base class that is only declared in a base class and defined in a derived class to prevent it from becoming an abstract class.A virtual Function has its definition in its respective base class.       There is no definition in Pure Virtual Function and is initialized with a pure specifier(= 0).The base class has a virtual function that can be represented or instanced; In simple words, its object can be made.A base class having pure virtual function becomes abstract that cannot be represented or instanced; In simple words, it means its object cannot be made.",
What are classes and objects in C++?,"A class is a user-defined data type where all the member functions and data members are tailor-made according to demands and requirements in addition to which these all can be accessed with the help of an object. To declare a user-defined data type we use a keyword class.An object is an instance of a class and an entity with value and state; In simple terms, it is used as a catalyst or to represent a class member. It may contain different parameters or none.",
What is Function Overriding?,"When a function of the same name, same arguments or parameters, and same return type already present/declared in the base class is used in a derived class is known as Function Overriding. It is an example of Runtime Polymorphism or Late Binding which means the overridden function will be executed at the run time of the execution.",
What are the various OOPs concepts in C++?,Classes: It is a user-defined datatypeObjects: It is an instance of a classAbstraction: It is a technique of showing only necessary detailsEncapsulation: Wrapping of data in a single unitInheritance: The capability of a class to derive properties and characteristics from another classPolymorphism: Polymorphism is known as many forms of the same thing,
Explain inheritance,"The capability or ability of a class to derive properties and characteristics from another class is known as inheritance. In simple terms, it is a system or technique of reusing and extending existing classes without modifying them.",
When should we use multiple inheritance?,"Multiple inheritances mean that a derived class can inherit two or more base/parent classes. It is useful when a derived class needs to combine numerous attributes/contracts and inherit some, or all, of the implementation from these attributes/contracts. To take a real-life example consider your Parents where Parent A is your DAD Parent B is your MOM and Chid C is you.",
What is virtual inheritance?,"Virtual inheritance is a technique that ensures only one copy of a base classs member variables is inherited by grandchild-derived classes. Or in simple terms, virtual inheritance is used when we are dealing with a situation of multiple inheritances but want to prevent multiple instances of the same class from appearing in the inheritance hierarchy.",
What is polymorphism in C++?,"Polymorphism is known as many forms of the same thing. In simple terms, we can say that Polymorphism is the ability to display a member function in multiple forms depending on the type of object that calls them.In other words, we can also say that a man can be an employee to someone, a son of someone, a father of someone, and a husband of someone; this is how polymorphism can be projected in real life.There is 2 type of polymorphism:Compile Time Polymorphism:Function Overloading and Operator Overloading.Run Time Polymorphism:Function Overriding and Virtual Function.",
What are the different types of polymorphism in C++?,"There is 2 type of polymorphism:Compile Time Polymorphism or Static Binding:This type of polymorphism is achieved during the compile time of the program which results in it making a bit faster than Run time. Also, Inheritance is not involved in it. It is comprised of 2 further techniques:Function Overloading: When there are multiple functions with the same name but different parameters then this is known as function overloading.Operator Overloading: It is basically giving practice of giving a special meaning to the existing meaning of an operator or in simple terms redefining the pre-redefined meaningRun-Time Polymorphism or Late Binding:Run-time polymorphism takes place when functions are invoked during run time.Function Overriding: Function overriding occurs when a base class member function is redefined in a derived class with the same arguments and return type.",
Compare compiletime polymorphism and Runtime polymorphism,Compile-Time Polymorphism is also termed static binding and early binding.Runtime Polymorphism is also termed Dynamic binding and Late binding.Compile-Time Polymorphism is fast because execution is known early at compile time.Runtime Polymorphism is slow as compared to compile-time because execution is known at runtime.Compile-Time Polymorphism is achieved by function overloading and operator overloading.Runtime Polymorphism is achieved by virtual functions and function overriding.,
Explain the constructor in C++.,"A constructor is a special type of member function of a class, whose name is the same as that of the class by whom it is invoked and initializes value to the object of a class.There are 3 types of constructors:A. Default constructor: It is the most basic type of constructor which accepts no arguments or parameters. Even if it is not called the compiler calls it automatically when an object is created.B. Parameterized constructor: It is a type of constructor which accepts arguments or parameters. It has to be called explicitly by passing values in the arguments as these arguments help initialize an object when it is created. It also has the same name as that of the class.Also, It is used to overload constructorsC. Copy Constructor: A copy constructor is a member function that initializes an object using another object of the same class. Also, the Copy constructor takes a reference to an object of the same class as an argument.",
What are destructors in C++?,"Destructors are members of functions in a class that delete an object when an object of the class goes out of scope. Destructors have the same name as the class preceded by a tilde (~)sign. Also, destructors follow a down-to-top approach, unlike constructors which follow a top-to-down.",
What is a virtual destructor?,"When destroying instances or objects of a derived class using a base class pointer object, a virtual destructor is invoked to free up memory space allocated by the derived class object or instance.Virtual destructor guarantees that first the derived class destructor is called. Then the base classs destructor is called to release the space occupied by both destructors in the inheritance class which saves us from the memory leak. It is advised to make your destructor virtual whenever your class is polymorphic.",
Is destructor overloading possible? If yes then explain and if no then why?,"The simple answer is NO we cannot overload a destructor. It is mandatory to only destructor per class in C++. Also to mention, Destructor neither take arguments nor they have a parameter that might help to overload.",
Which operations are permitted on pointers?,Pointers are the variables that are used to store the address location of another variable. Operations that are permitted to a pointer are:Increment/Decrement of a Pointer.Addition and Subtraction of integer to a pointer.Comparison of pointers of the same type.,
What is the purpose of the delete operator?,"The delete operator is used to delete/remove all the characteristics/properties from an object by deallocating its memory; furthermore, it returns true or false in the end. In simple terms, it destroys or deallocates array and non-array(pointer) objects which are created by new expressions.",
How delete [] is different from delete?,"delete[] is used for deleting a whole array.delete is used to delete only one single pointer.delete[] is used for deleting the objects of new[]; By this, we can say that delete[] is used to delete an array of objects.delete is used for deleting the objects of new; By this, we can say that delete is used to delete a single object.delete[] can call as many destructors it wants.delete can only call the destructor of a class once",
What do you know about friend class and friend function?,"A friend class is a class that can access both the protected and private variables of the classes where it is declared as a friend.A friend function is a function used to access the private, protected, and public data members or member functions of other classes. It is declared with a friend keyword. The advantage of a friend function is that it is not bound to the scope of the class and once it is declared in a class, furthermore to that, it cannot be called by an object of the class; therefore it can be called by other functions. Considering all the mentioned points we can say that a friend function is a global function.",
What is an Overflow Error?,"Overflow Error occurs when the number is too large for the data type to handle. In simple terms, it is a type of error that is valid for the defined but exceeds used the defined range where it should coincide/lie.For example, the range of int data type is 2,147,483,648 to 2,147,483,647 and if we declare a variable of size 2,247,483,648 it will generate a overflow error.",
What does the Scope Resolution operator do?,A scope resolution operator is denoted by a :: symbol. Just like its name this operator resolves the barrier of scope in a program. A scope resolution operator is used to reference a member function or a global variable out of their scope furthermore to which it can also access the concealed variable or function in a program.Scope Resolution is used for numerous amounts of tasks:To access a global variable when there is a local variable with the same nameTo define the function outside the classIn case of multiple inheritancesFor namespace,
What are the C++ access modifiers?,The access restriction specified to the class members( whether it is member function or data member) is known as access modifiers/specifiers.Access Modifiers are of 3 types:Private  It can neither be accessed nor be viewed from outside the classProtected  It can be accessed if and only if the accessor is the derived classPublic  It can be accessed or be viewed from outside the class,
Can you compile a program without the main function?,"Yes, it is absolutely possible to compile a program without a main(). For example Use Macros that defines the main",
What is STL?,"STL is known as Standard Template Library, it is a library that provides 4 components like container, algorithms, and iterators.",
Define inline function. Can we have a recursive inline function in C++?,An inline function is a form of request not an order to a compiler which results in the inlining of our function to the main function body. An inline function can become overhead if the execution time of the function is less than the switching time from the caller function to called function. To make a function inline use the keyword inline before and define the function before any calls are made to the function.,
What is an abstract class and when do you use it?,"An abstract class is a class that is specifically designed to be used as a base class. An abstract class contains at least one pure virtual function. You declare a pure virtual function by using a pure specifier(= 0) in the declaration of a virtual member function in the class declarationYou cannot use an abstract class as a parameter type, a function return type, or the type of an explicit conversion, nor can you declare an object of an abstract class. However, it can be used to declare pointers and references to an abstract class.An abstract class is used if you want to provide a common, implemented functionality among all the implementations of the component. Abstract classes will allow you to partially implement your class, whereas interfaces would have no implementation for any members whatsoever. In simple words, Abstract Classes are a good fit if you want to provide implementation details to your children but dont want to allow an instance of your class to be directly instantiated.",
What are the static data members and static member functions?,The static data member of a class is a normal data member but preceded with a static keyword. It executes before main() in a program and is initialized to 0 when the first object of the class is created. It is only visible to a defined class but its scope is of a lifetime.The static member function is the member function that is used to access other static data members or other static member functions. It is also defined with a static keyword. We can access the static member function using the class name or class objects.,
What is the main use of the keyword Volatile?,"Just like its name, things can change suddenly and unexpectantly; So it is used to inform the compiler that the value may change anytime. Also, the volatile keyword prevents the compiler from performing optimization on the code. It was intended to be used when interfacing with memory-mapped hardware, signal handlers, and machine code instruction.",
Define storage class in C++ and name some,Storage class is used to define the features(lifetime and visibility) of a variable or function. These features usually help in tracing the existence of a variable during the runtime of a program.,
What is a mutable storage class specifier? How can they be used?,"Just like its name, the mutable storage class specifier is used only on a class data member to make it modifiable even though the member is part of an object declared as const. Static or const, or reference members cannot use the mutable specifier. When we declare a function as const, this pointer passed to the function becomes const.",
Define the Block scope variable.,"So the scope of a variable is a region where a variable is accessible. There are two scope regions, A global and block or local.A block scope variable is also known as a local scope variable. A variable that is defined inside a function (like main) or inside a block (like loops and if blocks) is a local variable. It can be used ONLY inside that particular function/block in which it is declared. a block-scoped variable will not be available outside the block even if the block is inside a function.",
What is the function of the keyword Auto?,"The auto keyword may be used to declare a variable with a complex type in a straightforward fashion. You can use auto to declare a variable if the initialization phrase contains templates, pointers to functions, references to members, etc. With type inference capabilities, we can spend less time having to write out things the compiler already knows. As all the types are deduced in the compiler phase only, the time for compilation increases slightly but it does not affect the runtime of the program.",
Define namespace in C++.,"Namespaces enable us to organize named items that would otherwise have global scope into smaller scopes, allowing us to give them namespace scope. This permits program parts to be organized into distinct logical scopes with names. The namespace provides a place to define or declare identifiers such as variables, methods, and classes.Or we could say that A namespace is a declarative zone that gives the identifiers (names of types, functions, variables, and so on) within it a scope. Namespaces are used to arrange code into logical categories and to avoid name clashes, which might happen when you have many libraries in your code base.",
When is void() return type used?,"The void keyword, when used as a function return type, indicates that the function does not return a value. When used as a parameter list for a function, void indicates that the function takes no parameters. Non-Value Returning functions are also known as void functions. Theyre called void since theyre not designed to return anything. True, but only partially. We cant return values from void functions, but we can certainly return something. Although void functions have no return type, they can return values.",
What is the difference between shallow copy and deep copy?,"In Shallow copy, a copy of the original object is stored and only the reference address is finally copied. In simple terms, Shallow copy duplicates as little as possibleIn Deep copy, the copy of the original object and the repetitive copies both are stored. In simple terms, Deep copy duplicates everythingA shallow copy of a collection is a copy of the collection structure, not the elements. With a shallow copy, two collections now share individual elements.A deep copy of a collection is two collections with all of the elements in the original collection duplicated.A shallow copy is fasterDeep copy is comparatively slower.",
Can we call a virtual function from a constructor?,"Yes, we can call a virtual function from a constructor. But it can throw an exception of overriding.",
What are void pointers?,"Just like its name a void pointer is a pointer that is not associated with anything or with any data type. Nevertheless, a void pointer can hold the address value of any type and can be converted from one data type to another.",
What is this pointer in C++?,this pointer enables every object to have access to its own address through an essential pointer. All member functions take this pointer as an implicit argument. this pointer may be used to refer to the calling object within a member function.this pointer is used to pass an object as a parameter to another method.Each object gets its own copy of the data member.this pointer is used to declare indexers.,
What is a Class in C++?,A Class in C++ is a data type defined by the user. It is a fundamental data type in C++ that defines the behavior and attributes of the entity.,
Define and Object in C++,"An Object in C++ is an instance of a class. It is an entity that exhibits behavior and state, defined by the Class that it is part of.",
What are the various data types available in C++?,"There are four different data types in C++. They are:Enumeration. E.g., enum.Primitive Datatype(basic datatype). E.g., float, char, short, int, long, bool, double, etc.User-defined data types. E.g., structure, union, class, etc.Derived datatype. E.g., pointer, array, reference, pointers, etc.",
What are some advantages of using C++ to build software programs and applications?,"The advantages of C++ are:The programming language is general-purpose and can perform various functions and activities.Code developed using C++ can be used in any platform and OS.C++ comprises an extensive library of functions that help perform a wide array of tasks.C++ allows for data hiding, a feature that enables programmers to secure data and programs.",
What concepts of OPPs does C++ exhibit?,"This is another popular C++ interview question asked at software engineering interviews. C++ is fundamentally Object-Oriented Programming (OOP). The OOP concepts that C++ exhibits include are:Objects, Classes, Inheritance, Polymorphism, Encapsulation, Abstraction and Data Binding.",
What do you understand by Inheritance in C++?,"Inheritance is a feature in C++ that allows the reusability of functions in a class, thereby preventing code redundancy. It is a core feature of the Object-Oriented Programming model. Through inheritance, a new class is enabled to inherit the characteristics of an older class. When this happens, the new class is called the Derived Class, while the new class is called the Base class.",
What is encapsulation in C++?,This is a standard C++ interview question in C++ software developer interviews and FAANG+ software engineer interviews. Encapsulation is a core feature in C++ that binds the data members and functions in a single unit. Data and information within the class are wrapped and made visible when a request is sent. External methods are prevented from accessing the data within the class through encapsulation.,
What is abstraction in C++?,"Abstraction is a core feature in C++ that allows developers only to show the required details while hiding the details on the implementation. If the members of a class are public, they are visible and accessible by external methods and functions.",
Explain Polymorphism in C++,Polymorphism is a feature in which multiple functions have the same definition but can perform different functionalities. Static polymorphism and dynamic polymorphism are the two types of polymorphism in C++.,
State the basis by which Method Overloading can be performed in C++?,"In C++, method overloading is a technique through which multiple functions can have the same name but perform different actions. Method overloading in C++ is dependent on the following aspects:The number of parameters that are used to pass the function.The different types of parameters that are passed.The return type of the function",
What do you understand about Namespace in C++?,"A namespace is a provision in C++ to prevent naming conflicts while running batches of code. Namespace removes the ambiguity in task execution, where different tasks can sometimes run with the same name.C++ has a standard Namespace called \xe2\x80\x9cstd,\xe2\x80\x9d and various classes, functions, and methods are contained within the Namespace.",
What is the difference between the commands delete and delete[],"The difference between delete and delete[] commands in C++ is that delete is used to remove a unit of memory in a class, delete[] is used to remove an entire array.",
What are access specifiers in C++,"This gain is a common C++ interview question asked in developer interviews. Access specifiers in C++ declare how functions and class variables contained within a class are accessed. There are three fundamental access specifiers in C++. They are:Private: In this type of access specifier, functions and variables can only be accessed by methods within the class.Public: In this type of access specifier, functions and variables can be accessed by outside classes.Protected: In this type, the child class can only access variables and functions, which is a subset of the parent class. This type of class is relevant while employing the concept of inheritance in OOP.",
Name the ways by which you can export a function from DLL,You can export a function from DLL by:Taking a function reference from the DLL instance. Employing DLL Type Library,
What is a friend function in C++?,"A friend function in C++ is a function type that behaves as a friend of a given class and can access the protected and private members (functions and variables) of the class. A friend function isn't a member of the class in question, but it needs to be specified in the class definition.",
What are some characteristics of the friend function in C++?,"This is another common C++ interview question asked in technical interviews. Some characteristics of the friend function include:It uses objects in the class as arguments.Friend functions cannot be called by objects within the class, as these functions aren't contained within the class.The friend function cannot directly access private members of a class. The function has to use the object name and a dot operator every time a member from the class needs to be accessed.",
What is Data Binding in C++ and OPP models?,"Data Binding is a core feature in C++ that allows developers to bind the business logic and application UI. If any changes are made to the program business logic, the same will reflect in the application UI.",
What is the fundamental difference between arrays and lists in the OOP model?,"Arrays and lists are common data types used in Object-Oriented Programming to build software programs and applications. The fundamental difference between the two Arrays is a collection of homogeneous elements, while lists are a collection of heterogeneous elements.Additionally, the memory allocation for arrays is continuous and static, while the memory allocation for lists is random and dynamic.",
What is a Virtual Function in C++?,"A Virtual Function in C++ is fundamentally a member function present in the base class and defined by the derived class. When a function in C++ is virtual, the program decides when the function must be called, depending on the type of the object pointed by the base pointer. C++ can execute different versions of a virtual function.",
What are some rules to be followed when working with virtual functions in C++?,A virtual function can be a friend function of another class.Virtual functions cannot be static members of the class.Virtual functions need to be members of the same class and need to be contained within the class.These functions are called by using Object Pointers,
What is overloading in C++? What are the types of overloading in C++?,"Overloading in C++ is when a particular object of a class exhibits multiple behavioral features. The object, during overloading, returns different versions of the function.The two types of overloading are Function Overloading and Operator Overloading.",
Is it possible to have a recursive inline function in C++?,"While it is possible to call an inline function in C++, the compiler won't generate the code without a good optimizer. That way, you're able to execute both recursive and non-recursive functions depending on the depth of recursion.",
What is the function of the this pointer in C++?,"This again is one of the most popular C++ interview questions asked at technical interviews. The pointer contains the memory address of the given object. Passed in the form of a hidden argument, the ' pointer is a constant pointer available as a local variable in the body of nonstatic functions.",
What is the difference between Function Overloading and Operator Overloading?,Operator Overloading is a feature that allows developers to redefine the way an operator functions for user-defined data types. Function Overloading is a feature that enables different functions that exhibit different parameters and behaviors to possess the same name.,
What is a destructor in C++?,"Another popular C++ interview question asked at technical interviews pertains to destructors and constructors. In C++, destructors are member functions within the class and possess the same name as the class. Destructors are exhibited automatically when objects lose their scope.",
What is a constructor in C++?,Constructors are special member functions within a class that doesn't have return types. They are used to initialize new objects of a class. Constructors in C++ are called automatically when objects are created in a class.,
What do you understand about Static members in C++?,"Static member functions and static member data are contained within a class and must be declared. When a function is declared static, only a single copy of the data is maintained for the class. Static functions in the class don't contain the ' pointer.",
What is a pure virtual function in C++?,"In C++, a pure virtual function does not have a formal definition in a class. Pure virtual functions in C++ are succeeded by a 0.",
What is the function of the Scope Resolution operator in C++?,"Scope Resolution operators, specified by the symbol - (::), are fundamentally used to define member functions outside of the class. They come into use when creating protected and private classes in C++.",
What do you mean by class templates in C++?,"Class templates are generally used while creating a family of classes and functions. For instance, while creating an array class, you can create a template to help create various array types such as float, int, etc. Similarly, you can create function templates to define similar functions.",
Why would you choose C++ over other programming languages?,"The following prominent advantages of C++ make it software developers' choice:It is a portable language and can allow developers to run it on any platform and operating system.It has abundant function libraries.C++ supports inheritance, polymorphism, and friend functions.Data hiding in C++ language provides additional data security.",
What do you understand about scopes in C++?,"The area wherein the variable is active is referred to as scope. Thus, you can declare, define, and use the variable in scope. C++ has the following two types of scopes:Local scope: When a variable is declared inside the block of code and remains active only inside that block, it is said to be in a local scope and is accessible outside the block.Global scope: When a variable is declared at the top of the program, it is in a global scope and is accessible throughout the program.",
What tokens does the C++ language support?Ã¯Â¿Â½,"C++ supports the following types of tokens:keyword,constant,identifier,literal and symbol",
How is the assignment operator ( = ) different from the equal to operator ( == )?,"The assignment operator ( = ) assigns the value to the variable and is sometimes used in complex equations.The 'equal to' operator ( == ) is an equality operator used to compare two values. It returns true if they are equal; else, it returns false.",
Explain comments in context with C++?,"Comments are the source code that the compiler ignores, and they are not a part of programs. The purpose of comments is to inform the programmer about additional information. It provides details about the source code. There are two types of comments in C++:Single line comment: It uses ""//""for commenting, and the compiler ignores everything after ""//""in the line.Multiline comment or block comment: It uses Ã¯Â¿Â½ /* Ã¯Â¿Â½ Ã¯Â¿Â½ */ Ã¯Â¿Â½ for commenting and the compiler ignores everything between Ã¯Â¿Â½ /* Ã¯Â¿Â½ Ã¯Â¿Â½ */ Ã¯Â¿Â½.",
What is containership?,"It is one of the most important C++ interview questions and answers concepts. You can contain an object of one class into another, and that object will be a member of the other class. This relationship between classes wherein one class contains the object of another class is referred to as containership.",
What is data hiding?,The process of hiding elements of a program's code from object members is called data hiding. It ensures controlled data access and objects integrity. It also prevents unintentional or intended changes to the program.,
What is the use of getline in C++?,The C++ getline() is a standard library in-built function and it is defined in the <string.h> header file. It allows accepting and reading single and multiple lines.,
What is a singleton design pattern?,Design patterns are reusable solutions that you can apply to recurring Object-Oriented Design problems. Singleton design patterns fall under the category of Creational Design Patterns. This pattern helps design a class with a maximum of a single instance at any time. It cannot be instantiated further.The concept of a singleton design pattern can be applied to creating a logger or hardware interface class.Ã¯Â¿Â½,
What operators cannot be overloaded?,"The following operators cannot be overloaded:conditional operator,dereferencing operator,sizeof operator, scope resolution operator, dot operator and member dereferencing operator.",
What do you understand about RTTI?,RTTI stands for Run-time type information. This mechanism gives information about an object's data type at runtime. It is available only for classes that have at least one virtual function. You can determine the type of an object during program runtime execution.,
What is the sparse matrix?,"An array of elements wherein many elements have a value of zero is called a sparse matrix. For instance, if you are given a matrix with several elements and the number of zeroes is more than half the elements of the matrix, then it is a sparse matrix.",
What do you understand about smart pointers in C++?,"Smart pointers are employed in garbage collection to ensure no memory leaks. If you use smart pointers, you need not call delete for any memory allocated dynamically as it is automatically deallocated. You can implement smart pointers in C++11 and higher versions. C++11 has the following four kinds of smart pointers:auto_ptr, unique_ptr, shared_ptr and weak_ptr.",
What is the role of this pointer and void pointer?,"This pointer: The 'this pointer' is present in the member functions of every object. It points to the object itself and can be used to access the object's data.Void pointer: A pointer that has no data type associated with it is called a void pointer. You can assign any type of pointer to a void pointer, but the reverse isn't true unless you use it as followsstr=(char*) ptr;.",
What do you understand about pure virtual functions?,"A virtual function is a member function in the base class that can be redefined in a derived class. It can be declared using the virtual keyword. On the contrary, a pure virtual function has no implementation. It has no body and is declared by assigning 0.",
Is it possible to call a virtual function from a constructor?,"Yes, you can call a virtual function from a constructor. However, the behavior differs in that case. When you call a virtual function, the virtual call is resolved at runtime. The virtual machine does not work within the constructor.",
What is difference between C and C++ ?,"C++ is Multi-Paradigm( not pure OOP, supports both procedural and object oriented) while C follows procedural style programming.In C data security is less, but in C++ you can use modifiers for your class members to make it inaccessible from outside.C follows top-down approach ( solution is created in step by step manner, like each step is processed into details as we proceed ) but C++ follows a bottom-up approach ( where base elements are established first and are linked to make complex solutions ).C++ supports function overloading while C does not support it.C++ allows use of functions in structures, but C does not permit that.C++ supports reference variables( two variables can point to same memory location ). C does not support this.C does not have a built in exception handling framework, though we can emulate it with other mechanism.0C++ directly supports exception handling, which makes life of developer easy.",
 What is a class?,"Class defines a datatype, its type definition of category of thing(s). But a class actually does not define the data, it just specifies the structure of data. To use them you need to create objects out of the class. Class can be considered as a blueprint of a building, you can not stay inside blueprint of building, you need to construct building(s) out of that plan. You can create any number of buildings from the blueprint, similarly you can create any number of objects from a class.",
 What is an Object/Instance?,"Object is the instance of a class, which is concrete. From the above example, we can create instance of class Vehicle as given belowVehicle vehicleObject;.We can have different objects of the class Vehicle, for example we can have0Vehicle0objects with 2 tyres, 4tyres etc. Similarly different engine capacities as well.",
 What do you mean by C++ access specifiers ?,"Access specifiers are used to define how the members (functions and variables) can be accessed outside the class. There are three access specifiers defined which are0public, private, and protectedprivate:Members declared as private are accessible only with in the same class and they cannot be accessed outside the class they are declared.public:Members declared as public are accessible from any where.protected:Members declared as protected can not be accessed from outside the class except a child class. This access specifier has significance in the context of inheritance.",
 What are the basics concepts of OOPS?,"Classes and Objects.Encapsulation is the mechanism by which data and associated operations/methods are bound together and thus hide the data from outside world. Its also called data hiding. In c++, encapsulation achieved using the access specifiers (private, public and protected). Data members will be declared as private (thus protecting from direct access from outside) and public methods will be provided to access these data. Consider the below classData abstraction refers to hiding the internal implementations and show only the necessary details to the outside world. In C++ data abstraction is implemented using interfaces and abstract classes.Inheritance allows one class to inherit properties of another class. In other words, inheritance allows one class to be defined in terms of another class.",
 In how many ways we can initialize an int variable in C++?,"In c++, variables can be initialized in two ways, the traditional C++ initialization using = operator and second using the constructor notation.int i = 10;.variable i will get initialized to 10.Using C++ constructor notation.int i(10);",
 What is implicit conversion/coercion in c++?,Implicit conversions are performed when a type (say T) is used in a context where a compatible type (Say F) is expected so that the type T will be promoted to type F.,
 What are C++ inline functions?,"C++ inline functions are special functions, for which the compiler replaces the function call with body/definition of function. Inline functions makes the program execute faster than the normal functions, since the overhead involved in saving current state to stack on the function call is avoided. By giving developer the control of making a function as inline, he can further optimize the code based on application logic. But actually, its the compiler that decides whether to make a function inline or not regardless of its declaration. Compiler may choose to make a non inline function inline and vice versa. Declaring a function as inline is in effect a re So, please note this point for the interview that, it is upto the compiler to make a function inline or not.",
 What do you mean by translation unit in c++?,"We organize our C++ programs into different source files (.cpp, .cxx etc). When you consider a source file, at the preprocessing stage, some extra content may get added to the source code ( for example, the contents of header files included) and some content may get removed ( for example, the part of the code in the #ifdef of #ifndef block which resolve to false/0 based on the symbols defined). This effective content is called a translation unit.",
 What do you mean by internal linking and external linking in c++?,A symbol is said to be linked internally when it can be accessed only from with-in the scope of a single translation unit. By external linking a symbol can be accessed from other translation units as well. This linkage can be controlled by using static and extern keywords.,
 What do you mean by storage classes?,"Storage class are used to specify the visibility/scope and life time of symbols(functions and variables). That means, storage classes specify where all a variable or function can be accessed and till what time those variables will be available during the execution of program.",
 How many storage classes are available in C++?,"Storage class are used to specify the visibility/scope and life time of symbols(functions and variables). That means, storage classes specify where all a variable or function can be accessed and till what time those variables will be available during the execution of program.",
 What is 'Copy Constructor' and when it is called?,"Copy constructor is a special constructor of a class which is used to create copy of an object. Compiler will give a default copy constructor if you dont define one. This implicit constructor will copy all the members of source object to target object.Implicit copy constructors are not recommended, because if the source object contains pointers they will be copied to target object, and it may cause heap corruption when both the objects with pointers referring to the same location does an update to the memory location. In this case its better to define a custom copy constructor and do a deep copy of the object.",
 What is difference between shallow copy and deep copy? Which is default?,"When you do a shallow copy, all the fields of the source object is copied to target object as it is. That means, if there is a dynamically created field in the source object, shallow copy will copy the same pointer to target object. So you will have two objects with fields that are pointing to same memory location which is not what you usually want.In case of deep copy, instead of copying the pointer, the object itself is copied to target. In this case if you modify the target object, it will not affect the source. By default copy constructors and assignment operators do shallow copy. To make it as deep copy, you need to create a custom copy constructor and override assignment operator.",
 What do you mean by persistent and non persistent objects?,"Persistent objects are the ones which we can be serialized and written to disk, or any other stream. So before stopping your application, you can serialize the object and on restart you can deserialize it. [ Drawing applications usually use serializations.]Objects that can not be serialized are called non persistent objects. [ Usually database objects are not serialized because connection and session will not be existing when you restart the application. ]",
 Is it possible to get the source code back from binary file?,"Technically it is possible to generate the source code from binary. It is called reverse engineering. There are lot of reverse engineering tools available. But, in actual case most of them will not re generate the exact source code back because many information will be lost due to compiler optimization and other interpretations.",
 What are virtual functions and what is its use?,"Virtual functions are member functions of class which is declared using keyword virtual. When a base class type reference is initialized using object of sub class type and an overridden method which is declared as virtual is invoked using the base reference, the method in child class object will get invoked.",
 What do you mean by pure virtual functions in C++? Give an example?,Pure virtual function is a function which doesnt have an implementation and the same needs to be implemented by the the next immediate non-abstract class. (A class will become an abstract class if there is at-least a single pure virtual function and thus pure virtual functions are used to create interfaces in c++).,
 How to create a pure virtual function?,"A function is made as pure virtual function by the using a specific signature,'=0' appended to the function declaration.",
 Why pure virtual functions are used if they don't have implementation / When does a pure virtual function become useful?,"Pure virtual functions are used when it doesnt make sense to provide definition of a virtual function in the base class or a proper definition does not exists in the context of base class. Consider the above example, class0SymmetricShape0is used as base class for shapes with symmetric structure(Circle, s In this case, there exists no proper definition for function0draw()0in the base class0SymmetricShape0instead the child classes of0SymmetricShape0(Cirlce, S",
 What is virtual destructors? Why they are used?,"Virtual destructors are used for the same purpose as virtual functions. When you remove an object of subclass, which is referenced by a parent class pointer, only destructor of base class will get executed. But if the destructor is defined using virtual keyword, both the destructors [ of parent and sub class ] will get invoked.",
 What you mean by early binding and late binding? How it is related to dynamic binding?,"Binding is the process of linking actual address of functions or identifiers to their reference. This happens mainly two times.During compilation : This is called early bindingFor all the direct function references compiler will replace the reference with actual address of the method.At runtime : This is called late binding.In case of virtual function calls using a Base reference, as in shown in the example of  In this case compiler will replace the reference with code to get the address of function at runtime.Dynamic binding is another name for late binding.",
 What is meant by reference variable in C++?,"In C++, reference variable allows you create an alias (second name) for an already existing variable. A reference variable can be used to access (read/write) the original data. That means, both the variable and reference variable are attached to same memory location. In effect, if you change the value of a variable using reference variable, both will get changed (because both are attached to same memory location).",
Explain abstraction.,"Simplified view of an object in user's language is called abstraction. - It is the simplest, well-defined interface to an object in OO and C++ that provides all the expected features and services to the user in a safe and predictable manner. - It provides all the information that the user requires.- Good domain knowledge is important for effective abstraction. - It separates specifications from implementation & keeps the code simpler and more stable.",
What is the real purpose of class-to export data?,"No, the real purpose of a class is not to export data. Rather, it is to provide services. Class provides a way to abstract behaviour rather than just encapsulating the bits.What things would you remember while making an interface?",
What things would you remember while making an interface?,A class's interface should be sensible enough. It should behave the way user expects it to. - It should be designed from the outside in.,
Explain the benefits of proper inheritance.,The biggest benefits of proper inheritance are : 1. Substitutability 2. Extensibility. 1. Substitutability : The objects of a properly derived class can be easily and safely substituted for an object of its base class. 2. Extensibility : The properly derived class can be freely and safely used in place of its base class even if the properly derived class is created a lot later than defining the user code. Extending the functionalities of a system is much easier when you add a properly derived class containing enhanced functionalities.,
Does improper inheritance have a potential to wreck a project?,"Many projects meet a dead end because of bad inheritance. So, it certainly has the potential to wreck a project. - Small projects still have a scope to avoid the complete consequence of bad inheritance if the developers communicate and co-ordinate with an easy system design. This kind of a luxury is not possible in big projects, which means that the code breaks in a way difficult and at times impossible way to fix it.",
How should runtime errors be handled in C++?,"The runtime errors in C++ can be handled using exceptions. - This exception handling mechanism in C++ is developed to handle the errors in software made up of independently developed components operating in one process and under synchronous control. - According to C++, any routine that does not fulfil its promise throws an exception. The caller who knows the way to handle these exceptions can catch it.",
When should a function throw an exception?,"A function should throw an exception when it is not able to fulfil its promise. - As soon as the function detects a problem that prevents it from fulfilling its promise, it should throw an exception. - If the function is able to handle the problem, recover itself and deliver the promise, then the exception should not be thrown. - If an event happens very frequently then exception handling is not the best way to deal with it. It requires proper fixation.",
Where are setjmp and longjmp used in C++?,Setjmp and longjmp should not be used in C++. - Longjmp jumps out of the function without unwinding the stack. This means that the local objects generated are not destructed properly. - The better option is to use try/catch/throw instead. They properly destruct the local objects.,
Are there any special rules about inlining?,"Yes, there are a few rules about inlining :1. Any source files that used the inline function must contain the function's definition. 2. An inline function must be defined everywhere. The easier way to deal with this to define the function once in the class header file and include the definition as required. The harder way is to redefine the function everywhere and learn the one-definition rule. 3. Main() can not be inline.",
Explain One-Definition Rule (ODR).,"According to one-definition rule, C++ constructs must be identically defined in every compilation unit they are used in. - As per ODR, two definitions contained in different source files are called to be identically defined if they token-for-token identical. The tokens should have same meaning in both source files. - Identically defined doesn't mean character-by-character equivalence. Two definitions can have different whitespace or comments and yet be identical.What are the advantages of using friend classes?",
What are the advantages of using friend classes?,"Friend classes are useful when a class wants to hide features from users which are needed only by another, tightly coupled class. - Implementation details can be kept safe by providing friend status to a tightly cohesive class.",
What is the use of default constructor?,"It is a constructor that does not accept any parameters. - If there is no user-defined constructor for a class, the compiler declares a default parameterless constructor called default constructor. - It is an inline public member of its class. - When the compiler uses this constructor to create an object the constructor will have no constructor initializer and a null body.",
Differentiate between class and structure.,The members of structures are public while those of a class are private.- Classes provide data hiding while structures don't. - Class bind both data as well as member functions while structures contain only data.,
Explain container class.,Class to hold objects in memory or external storage. It acts as a generic holder.- It has a predefined behaviour and a known interface.- It is used to hide the topology used for maintaining the list of objects in memory.- The container class can be of two types: 1. Heterogeneous container : Here the container class contains a group of mixed objects2. Homogeneous container : Here the container contains all the same objects.,
What is namespace?,"Namespaces are used to group entities like classes, objects and functions under a name.",
Explain explicit container.,These are constructors that cannot take part in an implicit conversion.- These are conversion constructors declared with explicit keyword. - Explicit container is reserved explicitly for construction. It is not used by the compiler to implement an implied conversion of types.,
Explain class invariant.,It is a condition that ensures correct working of a class and defines all the valid states for an object.- When an object is created class invariants must hold. - It is necessary for them to be preserved under all operations of the class.- All class invariants are both preconditions as well as post-conditions for all operations or member functions of the class.,
Differentiate between late binding and early binding. What are the advantages of early binding?,"Late binding refers to function calls that are not resolved until run time while early binding refers to the events that occur at compile time. - Late binding occurs through virtual functions while early binding takes place when all the information needed to call a function is known at the time of compiling. - Early binding increases the efficiency. Some of the examples of early binding are normal function calls, overloaded function calls, and overloaded operators etc.",
"Explain public, protected, private in C++?",These are three access specifiers in C++. 1. Public : Here the data members and functions are accessible outside the class.2. Protected : Data members and functions are available to derived classes only.3. Private : Data members and functions are not accessible outside the class.,
Explain Copy Constructor.,"It is a constructor which initializes it's object member variable with another object of the same class. If you don't implement a copy constructor in your class, the compiler automatically does it.",
When do you call copy constructors?,Copy constructors are called in these situations : 1. When compiler generates a temporary object. 2. When a function returns an object of that class by value .3. When the object of that class is passed by value as an argument to a function .4. When you construct an object based on another object of the same class.,
Name the implicit member functions of a class.,1. default constructor 2. copy constructor 3. assignment operator 4. default destructor 5. address operator,
Explain storage qualifiers in C++.,"1. Const : This variable means that if the memory is initialised once, it should not be altered by a program. 2. Volatile : This variable means that the value in the memory location can be altered even though nothing in the program code modifies the contents. 3. Mutable : This variable means that a particular member of a structure or class can be altered even if a particular structure variable, class or class member function is constant.",
Explain dangling pointer.,"When the address of an object is used after its lifetime is over, dangling pointer comes into existence.- Some examples of such situations are : Returning the addresses of the automatic variables from a function or using the address of the memory block after it is freed.",
In what situations do you have to use initialization list rather than assignment in constructors?,When you want to use non-static const data members and reference data members you should use initialization list to initialize them.,
When does a class need a virtual destructor?,"If your class has at least one virtual function, you should have a virtual destructor. This allows you to delete a dynamic object through a baller to a base class object. In absence of this, the wrong destructor will be invoked during deletion of the dynamic object.",
What is the type of this pointer? When does it get created?,It is a constant pointer type. It gets created when a non-static member function of a class is called. ,
How would you differentiate between a pre and post increment operators while overloading?,Mentioning the keyword int as the second parameter in the post increment form of the operator++() helps distinguish between the two forms.,
What is a pdb file?,A program database (PDB) file contains debugging and project state information that allows incremental linking of a Debug configuration of the program. This file is created when you compile a C/C++ program with /ZI or /Zi or a Visual Basic/C#/JScript .NET program with /debug.,
You run a shell on UNIX system. How would you tell which shell are you running?,"To check this you can simply do the Echo $RANDOM.- The results will be :1. Undefined variable if you are from the C-Shell, 2. A return prompts if you are from the Bourne shell, 3. A 5 digit random number if you are from the Korn shell. You could also do a ps -l and look for the shell with the highest PID.",
What are Stacks? Give an example where they are useful.,A Stack is a linear structure in which insertions and deletions are always made at one end i.e the top - this is termed as Last in First out (LIFO). Stacks are useful when we need to check some syntax errors like missing parentheses.,
Differentiate between an external iterator and an internal iterator? What is the advantage of an external iterator.,"An external iterator is implemented as a separate class that can be ""attach"" to the object that has items to step through while an internal iterator is implemented with member functions of the class that has items to step through. With an external iterator many different iterators can be active simultaneously on the same object - this is its basic advantage. ",
"In a function declaration, what does extern mean?","Here, the extern tells the compiler about the existence of a variable or a function, even though the compiler hasn't yet seen it in the file currently being compiled. This variable or function may be defined in another file or further down in the current file.",
You want to link a C++ program to C functions. How would you do it?,"This can be done by using the extern ""C"" linkage specification around the C function declarations.",
Explain STL.,STL stands for Standard Template Library. It is a library of container templates approved by the ANSI committee for inclusion in the standard C++ specification.,
What are the different types of STL containers?,"Following are the 3 types of STL containers :1. Adaptive containers : For e.g. queue, stack 2. Associative containers : For e.g. set, map 3. Sequence containers : For e.g. vector, deque",
Explain Stack unwinding.,Stack unwinding is a process during exception handling when the destructor is called for all local objects between the place where the exception was thrown and where it is caught.,
How would you find out if a linked-list is a cycle or not?,"We can find out if the linked-list is not a cycle by using two pointers. One of them goes 2 nodes every time while the second one goes at 1 node each time. If there is a cycle, the one that goes 2 nodes each time will meet the one that goes slower. If this happens, you can say that the linked-list is a cycle else not.",
How does code-bloating occur in C++?,Improper use of Inline functions and templates may lead to code bloating. - Multiple Inheritance may also lead to code bloating.,
Differentiate between realloc() and free().,"Free() : A block of memory previously allocated by the malloc subroutine is freed by free subroutine. Undefined results come out if the Pointer parameter is not a valid pointer. If the Pointer parameter is a null value, no action will take place.- Realloc() : This subroutine changes the size of the block of memory pointed to by the Pointer parameter to the number of bytes specified by the Size parameter and returns a new pointer to the block. The pointer specified by the Pointer parameter must be created with the malloc, calloc or realloc subroutines and should not be deallocated with the free or realloc subroutines. Undefined results show up if the Pointer parameter is not a valid pointer.",
Explain Function overloading and Operator overloading.,"a. Function overloading :- The capability of C++ to define several functions of the same name with different sets of parameters is called function overloading. While calling an overloaded function, the C++ compiler selects the proper function by examining the number, types and order of the arguments.- Function overloading is commonly used to create several functions of the same name that perform similar tasks but on different data types.b. Operator overloading :- When the existing C++ operators are redefined to work on objects of user-defined classes, it is called operator overloading.- Overloaded operators form a pleasant facade which improves the understandability and reduces maintenance costs without adding anything fundamental to the language.",
Explain following storage classes in C++.,a. Auto :- This is the default storage class. - Variables in this class are automatically created and initialized when they are defined. - These variable are then destroyed at the end of the block containing their definition. They are not visible outside that block.b. Register :- This is a type of auto variable.- It gives a suggestion to the compiler to use a CPU register for performance.c. Static :- A variable that is known only in the function that contains its definition. - It is never destroyed and retains its value between calls to that function.d. Extern :- This is a static variable. - Its definition and placement is determined when all object and library modules are combined (linked) to form the executable code file. - It can be visible outside the file where it is defined.,
"Explain ""const"" reference arguments in function?",It protects you against programming errors that can alter data. - It allows function to process both const and non-const actual arguments. - A function without const in the prototype can only accept non constant arguments. - Using a const reference allows the function to generate and use a temporary variable appropriately.,
Why do you use the namespace feature?,Multiple providers of libraries might use common global identifiers causing a name collision when an application tries to link with two or more such libraries. - The namespace feature surrounds a library's external declaration with a unique namespace that eliminates the potential for those collisions.- It identifies and assigns a name to a declarative region.- The identifier in a namespace declaration must be unique in the declarative region in which it is used.- The identifier is the name of the namespace and is used to reference its members.,
Explain Overriding.,"Overriding a method means that replacing a method functionality in child class. To imply overriding functionality we need parent and child classes. In the child class you define the same method signature as one defined in the parent class.- To override a method, a subclass of the class that originally declared the method must declare a method with the same name, return type (or a subclass of that return type), and same parameter list.- Method overriding must have same : method name, data type, argument list.",
How are virtual functions implemented in C++?,"Virtual functions are implemented using a table of function pointers. It is called the vtable. - There exists one entry in the table per virtual function in the class. - The table is created by the constructor of the class. - When a derived class is constructed, its base class is constructed first. This creates the vtable. - The derived class may override some of the base classes virtual functions. Such entries in the vtable are overwritten by the derived class constructor. For this reason, the virtual functions should not be called from a constructor. ",
What happens when you make call delete this;?,"The two pit-falls exist here, 1. If it executes in a member function for an extern, static, or automatic object, the program will probably crash as soon as the delete statement gets executed. 2. When an object finishes like this, the using program might not know about this end. As far as the instantiating program is concerned, the object remains in scope and continues to exist even though the object is finished. Subsequent dereferencing of the pointer can lead to disaster.  ",
Differentiate between a copy constructor and an overloaded assignment operator.,"A copy constructor constructs a new object by using the content of the argument object while an overloaded assignment operator assigns the contents of an existing object to another existing object of the same class.- Copy Constructor invoke in cases, such as:i. Creation and initialization of an object simultaneously. ii. When an object is passed to a function by value. iii. When an object is returned from a function by value.",
Explain Stack & Heap Objects.,The memory a program uses is divided into four areas :1. The code area : This is where the compiled program sits in memory. 2. The global area : The place where global variables are stored. 3. The heap : The place where dynamically allocated variables are allocated from. 4. The stack :The place where parameters and local variables are allocated from.,
Explain deep copy and a shallow copy.,"a. Deep copy : It involves using the contents of one object to create another instance of the same class. Here, the two objects may contain the same information but the target object will have its own buffers and resources. The destruction of either object will not affect the remaining objects.b. Shallow copy :It involves copying the contents of one object into another instance of the same class. This creates a mirror image. The two objects share the same externally contained contents of the other object to be unpredictable.This happens because of the straight copying of references and pointers.",
Explain virtual class and friend class.,"Virtual Base Class : - It is used in context of multiple inheritance in C++. - If you want to derive two classes from a class, and further derive one class from the two classes in the second level, you need to declare the uppermost base class as 'virtual' in the inherited classes. - This prevents multiple copies of the uppermost base class data members when an object of the class at the third level of hierarchy is created.b.) Friend class:- When a class declares another class as its friend, it is giving complete access to all its data and methods including private and protected data and methods to the friend class member methods.- Friendship is not necessarily bi-directional. If A declares B as its friend it does not imply that A can access private data of B. It only means that B can access all data of A.",
Explain the scope of resolution operator.,"A scope resolution operator (::) is used to define the member functions of a class outside the class.- Mostly, a scope resolution operator is required when a data member is redefined by a derived class or an overriden method of the derived class wants to call the base class version of the same method.",
List the advantages of inheritance.,Inheritence permits code reusability. - Reusability saves time in program development. - It encourages the reuse of proven and debugged high-quality software which reduces the problems after a system becomes functional.,
Differentiate between declaration and definition.,The declaration informs the compiler that at some later point we plan to present the definition of this declaration.,
What do you mean by a template?,Templates enable creation of generic functions that admit any data type as parameters and return value without having to overload the function with all the possible data types unless they fulfill the functionality of a macro. - Its prototype can be one of the following :template function_declaration; template function_declaration;- The only difference between both prototypes is the use of keyword class or typename. It's use is indistinct since both expressions have exactly the same meaning and behave exactly the same way.,
Explain RTTI.,RTTI - Runtime type identification - It lets you find the dynamic type of an object when you have only a pointer or a reference to the base type. - RTTI is the official way in standard C++ to discover the type of an object and to convert the type of a pointer or reference.,
Difference between a copy constructor and an assignment operator.,"A copy constructor is used to declare and initialize an object from another object. - For Example : integer I2(I1);- An assignment operator doesnot invoke the copy constructor. It simply assigns the values of an object to another, member by member.",
Difference between struct and class in terms of Access Modifier.,"Classes and structures are syntactically similar. In C++, the role of the structure was expanded, making it an alternative way to specify a class. In C, the structures include data members, in C++ they are expanded to have function members as well. This makes structures in C++ and classes to be virtually same. The only difference between a C++ struct and a class is that, by default all the struct members are public while by default class members are private.",
What are virtual functions?,"Polymorphism is also achieved in C++ using virtual functions. If a function with same name exists in base as well as parent class, then the pointer to the base class would call the functions associated only with the base class. However, if the function is made virtual and the base pointer is initialized with the address of the derived class, then the function in the child class would be called.",
What is a stack? How it can be implemented?,"A Stack is a linear data structure which is a collection of homogenous elements but where insertion and deletion operations take place at one end only, called TOP of the stack. Stack is also known as LIFO (Last In First Out) structure as the element which is inserted in the last will be the first element to come out from the stack.It can be implemented by using a linear array say S [] containing stksize locations along with an integer variable TOP storing the index of the top most element in the stack.",
How a modifier is similar to mutator?,A modifier is also known as mutator where the change in the member function value will change the value of a data member that is associated with the function. It modifies the state of an object that is why mutator as it mutates or makes duplicate copies of itself to be used so that by one function many things can be changed at a time.,
What are the various operations performed on stack?,Various operations which can be performed on stack are as follows :creatempty() : It creates an empty stack by initializing TOP to -1.Isempty() : It determines whether stack is empty or not. It returns value 1 if stack is empty otherwise return 0.Push() : Adding a new element at the top of the stack is called Push.Pop() : Removing an element from the top of the stack is called Pop.,
How a new element can be added or pushed in a stack?,"Pushing an element into stack :Whenever an element is to be pushed into stack, TOP is increased by 1 and then the element is inserted in the linear array denoted by S[ ] at the location with index TOP i.e. at S[TOP]. During push() operation, a stage may come when TOP points to the last location in array S[ ] i.e. it becomes equal to stksize-1, then no more element can be pushed into stack and we say that Stack Overflow.Algo Push(S,Top, Item)Step 1 : If (Top == stksize-1)then (i) Write ""Stack Overflow ""(ii) Exitstep 2 : top = top + 1step 3 : S[top] = Itemstep 4 : Exit",
Explain Queue. How it can be implemented?,A queue is a linear data structure which is a collection of homogeneous elements where insertion and deletion occurs at different ends. - The end where insertion takes place is called REAR and the end where deletion takes place is called FRONT. - Queue is also known as FIFO (FIRST IN FIRST OUT) because the element which is inserted first last will be the first element to come out from the queue.- Queue can be implemented by :1. Array Implementation of Stack2. Linked List Implementation of Stack,
What are the four partitions in which C++ compiler divides the RAM?,"Stack Area : This part of memory is used to store formal parameters, local variables, return addresses of function call etc.2. Program Code Area : This part of memory is used to store the object code of the program.3. Global Variable Section : This part of memory is used to store global variables defined in the program.4. Heap Area or Free Storage Pool : It consists of unallocated memory locations which are allocated dynamically during program execution using new operator.",
Explain static and dynamic memory allocation with an example each.,"When amount of memory to be allocated is known beforehand i.e. at the time of compilation, it is known as Static Memory Allocation. Once the memory is allocated statically, it cannot be deallocated during program run. So it leads to wastage of storage space.- Example : int A[100];- When amount of memory to be allocated is not known beforehand, rather it is determined at the time of program run, it is called Dynamic Memory Allocation. It leads to efficient utilization of storage space.- Example :cout << "" Enter number of elements: "";cin >> N;int *A = new int[N]; // dynamic memory allocation",
What is function prototyping? What are its advantages?,"What are its advantages?- Function prototyping is a function declaration statement that tells the compiler about the return type of the function and the number as well as type of arguments required by the function at the time of calling it.- Syntax :return_type function_name( type1 arg1, type 2 arg2, ... );Advantages of function prototype :- It helps the compiler in determining whether a function is called correctly or not. Each time when a function is called, its calling statement is compared with its prototype. In case of any mismatch, compiler reports an error.- A function must be defined before calling it. But prototyping allows a function to be called before defining it.",
What is searching? Explain linear and binary search.,"Explain linear and binary search.- Finding the location of a given element in a given data structure is called searching.- There are two types of search :1. Linear Search :In this, the element to be searched is compared one by one with each element of given list, starting with first element. The process of comparisons remain continue until the element is not found or list gets exhausted.2. Binary Search : It is another technique of searching an element in a given list in minimum possible comparisons. But for applying binary search on a list, there are two pre-conditions :i. The elements of list must be arranged either in ascending or descending order.ii. The list must be of finite size and should be in form of linear array.",
Explain Selection sorting. Also write an example.,"Also write an example.- In selection Sorting, one has to perform N-1 iterations or steps to sort a linear array containing N elements. - In first iteration, we select the first minimum value and interchange it with the element present at first position. - In Second iteration, we select the Second minimum value and interchange it with the element present at second position and so on.",
Explain Bubble sorting.,"In Bubble Sorting, we have to perform N-1 steps to sort a linear array.1. In first iteration, we compare A[0] with A[1], A[1] with A[2],..........A[N-2] with A[N-1] and interchange them if they are not in desired order.2. In Second iteration, we compare A[0] with A[1], A[1] with A[2],..........A[N-3] with A[N-2] and interchange them if they are not in desired order.3. In Third iteration, we compare A[0] with A[1], A[1] with A[2],..........A[N-4] with A[N-3]and interchange them if they are not in desired order.4. In last iteration , we compare A[0] with A[1].",
What is Insertion sorting?,"In insertion sorting, an array is divided into two parts : 1. Sorted part 2. Unsorted part- Initially, sorted part contains only one element i.e. A[0] and unsorted part contains remaining N-1 elements i.e. A[1], A[2], ... A[N-1]. We pick elements form unsorted part one by one and insert them in the sorted part. Thus, we have to perform N-1 iterations to sort a linear array.",
What are the various situations where a copy constructor is invoked?,"Various situations where a copy constructor is invoked are as follows :- When an object is defined and initializes with the values of another object of the same type, then copy constructor is invoked.- When an object is passed by value method, then copy constructor is invoked to create the copy of the passed object for the function.- When a function returns an object, then copy constructor is invoked to create a temporary object to hold the return value in the memory.",
What is the need of a destructor? Explain with the help of an example.,"During construction of an object, resources may be allocated for use. - For example, a constructor may have opened a file and memory area may be allocated to it. These allocated resources must be deallocated before the object is destroyed. - A destructor performs all clean-up tasks like closing a file, deallocating and releasing memory area etc. automatically.",
List the special characteristics of constructor.,"A constructor has the same name as that of class.- It is automatically invoked when an object of the class is declared.- Constructor obeys the usual access rule. Private & protected constructor can only be accessed by the member function and friend function of the class, Public constructor is available for all the function. Only that function can create the object that has access to the constructor.- No return type is specified for the constructor.- These cannot be inherited but a derived class can invoke base class constructor.- A constructor can also have default arguments.- A constructor can invoke the member functions.- The default constructor and copy constructor are provided by the compiler only if these are not defined by the programmer.",
What are the rules for naming an identifier?,"An identifier is the user defined name given to different elements in a program via: - variable name, class name, function name, array name etc.- Example: M1, M2, M3, Rad. Ht, Vol, A, Calculate- Identifiers are infinite in numbers.- An identifier can be named in following ways :1. An identifier's name must begin with an alphabet or underscore(_).2. It should not contain special symbol except underscore.3. It should not be a keyword.",
What are the different types of comments allowed in C++?,Comments are the text which is inserted in the source code (program written in C++ language) to make it more readable and understandable.- There are two types of comments allowed in C++ :1. Single line comment : A line of text beginning with symbol double slash (//) up to the end of line is called single line comment. Comments are ignored by compiler during compilation.2. Multiple line comments : The text which is enclosed between a pair of symbols (/* and */) is called Multiple line comments.,
What is the difference between a copy constructor and an overloaded assignment operator?,"A copy constructor is used within the class to copy one object in a new object. This can be done by using the argument object in it, whereas an overloaded assignment operator link an existing object to another object which is existing but in the same class.",
How to implement is-A and has-A class relationships?,"Is-a is a class relationship which is specialization of another class. It is used to describe the relationship with other classes. This relationship can be seen implemented in inheritance. For example if an employee class is there with a person then the employee is-A person. Has-A shows the relationship between classes. In this, class can contain instances of another class. For example, employee ""has"" income, so the employee class is having has-A relationship with the Salary class.",
Why use of template is better than a base class?,Templates are used for generic classes that contain objects of other types. It also allows you to manage the objects with their format and behavior intact. Templates are used when more than one class type has to be used and it also defines the classes at the run time. It is used when the type of the class is unknown to the user or manager of the class.,
What are the advantages of using a pointer? Define the operators that can be used with a pointer.,"Advantages of pointer :- Through pointer, one can access a memory location directly and manipulate it. - Pointers support dynamic memory allocation using new & delete operator.- A pointer makes execution of certain routines faster. - The operators that can be used with a pointer:At Address operator (*) : This operator gives the rvalue of the memory location whose address is stored in its operand.For example: If P is a pointer that hold the address of variable A, then *P gives the rvalue of the variable A. ADDRESS operator (&) : This operator gives the address of its operand. For Example: &A gives the address of variable A.",
Define linked lists,It is a linear data structure which is a collection of homogeneous elements called Nodes where linear relationship is maintained by using Pointers.,
Explain the virtual inheritance in C++.,"Virtual inheritance is used when a single base class is inherited with virtual methods. It can be achieved by the virtual keyword in the program. In this, the object that belongs to virtual class becomes common to the base class. It is used for multiple inheritance, as it creates multiple sub objects and gives the feature where a class can inherit from more than one classes. ",
Why is Standard Template Library used?,The Standard template library is used as a container to the templates which have been approved by the ANSI. It includes the standard C++ specification. It helps to construct programming in object oriented manner. It allows the use of pre-defined libraries for generic programming model. It allows faster execution of the programs and allow the user to use functions without even writing them.,
What problem does the namespace feature solve?,Namespace is an identifier that provides multiple libraries. This is used to remove the name collision when a name is linked with two or more libraries. It includes the external declarations of the library with unique namespaces so it eliminates the potential of the collision.,
What is C++?,"C++ is an object-oriented programming language created by Bjarne Stroustrup. It was released in 1985.C++ is a superset of C with the major addition of classes in C language.Initially, Stroustrup called the new language ""C with classes"". However, after sometime the name was changed to C++. The idea of C++ comes from the C increment operator ++. ",
What are the advantages of C++?,"C++ doesn't only maintains all aspects from C language, it also simplifies memory management and adds several features like:C++ is a highly portable language means that the software developed using C++ language can run on any platform.C++ is an object-oriented programming language which includes the concepts such as classes, objects, inheritance, polymorphism, abstraction.C++ has the concept of inheritance. Through inheritance, one can eliminate the redundant code and can reuse the existing classes.Data hiding helps the programmer to build secure programs so that the program cannot be attacked by the invaders.Message passing is a technique used for communication between the objects.C++ contains a rich function library.",
What is the difference between C and C++?,"Following are the differences between C and C++:C language was developed by Dennis Ritchie.C++ language was developed by Bjarne Stroustrup.C is a structured programming language.C++ supports both structural and object-oriented programming language.C is a subset of C++.C++ is a superset of C. In C language, data and functions are the free entities.In the C++ language, both data and functions are encapsulated together in the form of a project.C does not support the data hiding. Therefore, the data can be used by the outside world.C++ supports data hiding. Therefore, the data cannot be accessed by the outside world.C supports neither function nor operator overloading.C++ supports both function and operator overloading. In C, the function cannot be implemented inside the structures.In the C++, the function can be implemented inside the structures.Reference variables are not supported in C language.C++ supports the reference variables.C language does not support the virtual and friend functions.C++ supports both virtual and friend functions.In C, scanf() and printf() are mainly used for input/output.C++ mainly uses stream cin and cout to perform input and output operations.",
What is the difference between reference and pointer?,"Following are the differences between reference and pointer:Reference behaves like an alias for an existing variable, i.e., it is a temporary variable. The pointer is a variable which stores the address of a variable.Reference variable does not require any indirection operator to access the value. A reference variable can be used directly to access the value.Pointer variable requires an indirection operator to access the value of a variable.Once the reference variable is assigned, then it cannot be reassigned with different address values.The pointer variable is an independent variable means that it can be reassigned to point to different objects.A null value cannot be assigned to the reference variable.A null value can be assigned to the reference variable.It is necessary to initialize the variable at the time of declaration.It is not necessary to initialize the variable at the time of declaration.",
What is a class?,"The class is a user-defined data type. The class is declared with the keyword class. The class contains the data members, and member functions whose access is defined by the three modifiers are private, public and protected. The class defines the type definition of the category of things. It defines a datatype, but it does not define the data it just specifies the structure of data.You can create N number of objects from a class.",
What are the various OOPs concepts in C++?,"The various OOPS concepts in C++ are:Class: The class is a user-defined data type which defines its properties and its functions. For example, Human being is a class. The body parts of a human being are its properties, and the actions performed by the body parts are known as functions. The class does not occupy any memory space. Therefore, we can say that the class is the only logical representation of the data.Object: An object is a run-time entity. An object is the instance of the class. An object can represent a person, place or any other item. An object can operate on both data members and member functions. The class does not occupy any memory space. When an object is created using a new keyword, then space is allocated for the variable in a heap, and the starting address is stored in the stack memory. When an object is created without a new keyword, then space is not allocated in the heap memory, and the object contains the null value in the stack.Inheritance:Inheritance provides reusability. Reusability means that one can use the functionalities of the existing class. It eliminates the redundancy of code. Inheritance is a technique of deriving a new class from the old class. The old class is known as the base class, and the new class is known as derived class. Encapsulation:Encapsulation is a technique of wrapping the data members and member functions in a single unit. It binds the data within a class, and no outside method can access the data. If the data member is private, then the member function can only access the data.Abstraction:Abstraction is a technique of showing only essential details without representing the implementation details. If the members are defined with a public keyword, then the members are accessible outside also. If the members are defined with a private keyword, then the members are not accessible by the outside methods.Data binding:Data binding is a process of binding the application UI and business logic. Any change made in the business logic will reflect directly to the application UI.Polymorphism:Polymorphism means multiple forms. Polymorphism means having more than one function with the same name but with different functionalities. Polymorphism is of two types:Static polymorphism is also known as early binding.Dynamic polymorphism is also known as late binding.",
What are the different types of polymorphism in C++?,"Polymorphism: Polymorphism means multiple forms. It means having more than one function with the same function name but with different functionalities.Polymorphism is of two types:Runtime polymorphismRuntime polymorphism is also known as dynamic polymorphism. Function overriding is an example of runtime polymorphism. Function overriding means when the child class contains the method which is already present in the parent class. Hence, the child class overrides the method of the parent class. In case of function overriding, parent and child class both contains the same function with the different definition. The call to the function is determined at runtime is known as runtime polymorphism.Compile time polymorphismCompile-time polymorphism is also known as static polymorphism. The polymorphism which is implemented at the compile time is known as compile-time polymorphism. Method overloading is an example of compile-time polymorphism.Method overloading: Method overloading is a technique which allows you to have more than one function with the same function name but with different functionality.Method overloading can be possible on the following basis:The return type of the overloaded function.The type of the parameters passed to the function.The number of parameters passed to the function.",
Define namespace in C++.,"The namespace is a logical division of the code which is designed to stop the naming conflict. The namespace defines the scope where the identifiers such as variables, class, functions are declared.The main purpose of using namespace in C++ is to remove the ambiguity. Ambiquity occurs when the different task occurs with the same name.For example: if there are two functions exist with the same name such as add(). In order to prevent this ambiguity, the namespace is used. Functions are declared in different namespaces.C++ consists of a standard namespace, i.e., std which contains inbuilt classes and functions. So, by using the statement ""using namespace std;"" includes the namespace ""std"" in our program.",
Define token in C++.,"A token in C++ can be a keyword, identifier, literal, constant and symbol.",
Who was the creator of C++?,Bjarne Stroustrup.,
Which operations are permitted on pointers?,"Following are the operations that can be performed on pointers:Incrementing or decrementing a pointer: Incrementing a pointer means that we can increment the pointer by the size of a data type to which it points. There are two types of increment pointers:Pre-increment pointer: The pre-increment operator increments the operand by 1, and the value of the expression becomes the resulting value of the incremented. Suppose ptr is a pointer then pre-increment pointer is represented as ++ptr.Post-increment pointer: The post-increment operator increments the operand by 1, but the value of the expression will be the value of the operand prior to the incremented value of the operand. Suppose ptr is a pointer then post-increment pointer is represented as ptr++.Subtracting a pointer from another pointer: When two pointers pointing to the members of an array are subtracted, then the number of elements present between the two members are returned.",
Define 'std'.,Std is the default namespace standard used in C++.,
Which programming language's unsatisfactory performance led to the discovery of C++?,C++was discovered in order to cope with the disadvantages of C.,
How delete [] is different from delete?,"Delete is used to release a unit of memory, delete[] is used to release an array.",
What is the full form of STL in C++?,STL stands for Standard Template Library.,
What is an object?,The Object is the instance of a class. A class provides a blueprint for objects. So you can create an object from a class. The objects of a class are declared with the same sort of declaration that we declare variables of basic types.,
What are the C++ access specifiers?,"The access specifiers are used to define how to functions and variables can be accessed outside the class.There are three types of access specifiers:Private: Functions and variables declared as private can be accessed only within the same class, and they cannot be accessed outside the class they are declared.Public: Functions and variables declared under public can be accessed from anywhere.Protected: Functions and variables declared as protected cannot be accessed outside the class except a child class. This specifier is generally used in inheritance.",
What is Object Oriented Programming (OOP)?,"OOP is a methodology or paradigm that provides many concepts. The basic concepts of Object Oriented Programming are given below:Classes and Objects: Classes are used to specify the structure of the data. They define the data type. You can create any number of objects from a class. Objects are the instances of classes.Encapsulation: Encapsulation is a mechanism which binds the data and associated operations together and thus hides the data from the outside world. Encapsulation is also known as data hiding. In C++, It is achieved using the access specifiers, i.e., public, private and protected.Abstraction: Abstraction is used to hide the internal implementations and show only the necessary details to the outer world. Data abstraction is implemented using interfaces and abstract classes in C++.Inheritance: Inheritance is used to inherit the property of one class into another class. It facilitates you to define one class in term of another class.",
What is the difference between an array and a list?,"An Array is a collection of homogeneous elements while a list is a collection of heterogeneous elements.Array memory allocation is static and continuous while List memory allocation is dynamic and random.In Array, users don't need to keep in track of next memory allocation while In the list, the user has to keep in track of next location where memory is allocated.",
What is the difference between new() and malloc()?,"new() is a preprocessor while malloc() is a function.There is no need to allocate the memory while using ""new"" but in malloc() you have to use sizeof().""new"" initializes the new memory to 0 while malloc() gives random value in the newly allotted memory location.The new() operator allocates the memory and calls the constructor for the object initialization and malloc() function allocates the memory but does not call the constructor for the object initialization.The new() operator is faster than the malloc() function as operator is faster than the function.",
What are the methods of exporting a function from a DLL?,There are two ways:By using the DLL's type library.Taking a reference to the function from the DLL instance.,
Define friend function.,"Friend function acts as a friend of the class. It can access the private and protected members of the class. The friend function is not a member of the class, but it must be listed in the class definition. The non-member function cannot access the private data of the class. Sometimes, it is necessary for the non-member function to access the data. The friend function is a non-member function and has the ability to access the private data of the class.To make an outside function friendly to the class, we need to declare the function as a friend of the class as shown below:",
What is a virtual function?,"A virtual function is used to replace the implementation provided by the base class. The replacement is always called whenever the object in question is actually of the derived class, even if the object is accessed by a base pointer rather than a derived pointer.A virtual function is a member function which is present in the base class and redefined by the derived class.When we use the same function name in both base and derived class, the function in base class is declared with a keyword virtual.When the function is made virtual, then C++ determines at run-time which function is to be called based on the type of the object pointed by the base class pointer. Thus, by making the base class pointer to point different objects, we can execute different versions of the virtual functions.Rules of a virtual function:The virtual functions should be a member of some class.The virtual function cannot be a static member.Virtual functions are called by using the object pointer.It can be a friend of another class.C++ does not contain virtual constructors but can have a virtual destructor.",
When should we use multiple inheritance?,You can answer this question in three manners:Never.Rarely.If you find that the problem domain cannot be accurately modeled any other way.,
What is a destructor?,A Destructor is used to delete any extra resources allocated by the object. A destructor function is called automatically once the object goes out of the scope.Rules of destructor:Destructors have the same name as class name and it is preceded by tilde.It does not contain any argument and no return type.,
What is an overflow error?,It is a type of arithmetical error. It happens when the result of an arithmetical operation been greater than the actual space provided by the system.,
What is overloading?,"When a single object behaves in many ways is known as overloading. A single object has the same name, but it provides different versions of the same function.C++ facilitates you to specify more than one definition for a function name or an operator in the same scope. It is called function overloading and operator overloading respectively.Overloading is of two types:Operator overloading: Operator overloading is a compile-time polymorphism in which a standard operator is overloaded to provide a user-defined definition to it. For example, '+' operator is overloaded to perform the addition operation on data types such as int, float, etc.Operator overloading can be implemented in the following functions:Member function.Non-member function.Friend function.Function overloading: Function overloading is also a type of compile-time polymorphism which can define a family of functions with the same name. The function would perform different operations based on the argument list in the function call. The function to be invoked depends on the number of arguments and the type of the arguments in the argument list.",
What is function overriding?,"If you inherit a class into a derived class and provide a definition for one of the base class's function again inside the derived class, then this function is called overridden function, and this mechanism is known as function overriding.",
What is virtual inheritance?,Virtual inheritance facilitates you to create only one copy of each object even if the object appears more than one in the hierarchy.,
What is a constructor?,A Constructor is a special method that initializes an object. Its name must be same as class name.,
"What is the purpose of the ""delete"" operator?","The ""delete"" operator is used to release the dynamic memory created by ""new"" operator.",
Explain this pointer?,This pointer holds the address of the current object.,
What does Scope Resolution operator do?,A scope resolution operator(::) is used to define the member function outside the class.,
What is the difference between delete and delete[]?,Delete [] is used to release the array of allocated memory which was allocated using new[] whereas delete is used to release one chunk of memory which was allocated using new.,
What is a pure virtual function?,The pure virtual function is a virtual function which does not contain any definition. The normal function is preceded with a keyword virtual. The pure virtual function ends with 0.,
What is the difference between struct and class?,"A structure is a user-defined data type which contains variables of dissimilar data types.The class is a user-defined data type which contains member variables and member functions. The variables of a structure are stored in the stack memory.The variables of a class are stored in the heap memory.We cannot initialize the variables directly.We can initialize the member variables directly.If access specifier is not specified, then by default the access specifier of the variable is ""public"".If access specifier is not specified, then by default the access specifier of a variable is ""private"".The instance of a structure is a ""structure variable"".A structure is declared by using a struct keyword.The class is declared by using a class keyword.The structure does not support the inheritance.The class supports the concept of inheritance.The type of a structure is a value type.The type of a class is a reference type.",
What is a class template?,"A class template is used to create a family of classes and functions. For example, we can create a template of an array class which will enable us to create an array of various types such as int, float, char, etc. Similarly, we can create a template for a function, suppose we have a function add(), then we can create multiple versions of add().",
What is the difference between function overloading and operator overloading?,Function overloading: Function overloading is defined as we can have more than one version of the same function. The versions of a function will have different signature means that they have a different set of parameters.Operator overloading: Operator overloading is defined as the standard operator can be redefined so that it has a different meaning when applied to the instances of a class.,
What is a virtual destructor?,"A virtual destructor in C++ is used in the base class so that the derived class object can also be destroyed. A virtual destructor is declared by using the ~ tilde operator and then virtual keyword before the constructor.Constructor cannot be virtual, but destructor can be virtual.",
What is C++?,"C++ is an object-oriented programming language created by Bjarne Stroustrup.  It was released in 1985. C++ is a superset of C with the major addition of classes in C language. Initially, Stroustrup called the new language ""C with classes"". However,after sometime the name was changed to C++. The idea of C++ comes from the C increment operator ++",
 What are the advantages of C++?,"C++ doesn't only maintains all aspects from C language, it also simplifies  memory management and adds several features like: C++ is a highly portable language means that the software developed using C++ language can run on any platform.C++ is an object-oriented programming language which includes the concepts such as classes, objects, inheritance, polymorphism, abstraction.C++ has the concept of inheritance. Through inheritance, one can eliminate the redundant code and can reuse the existing classes.Data hiding helps the programmer to build secure programs so that the program cannot be attacked by the invaders.C++ contains a rich function library.",
 What is the difference between C and C++?,"Following are the differences between C and C++:C language was developed by Dennis Ritchie.C++ language was developed by Bjarne Stroustrup.C is a structured programming language.C++ supports both structural and object-oriented programming language.C is a subset of C++.C++ is a superset of C.C does not support the data hiding. Therefore, the data can be used by the outside world.C++ supports data hiding. Therefore, the data cannot be accessed by the outside world.C supports neither function nor operator overloading.C++ supports both function and operator overloading.Reference variables are not supported in C language.C++ supports the reference variables.",
What is the difference between reference and pointer?,"ReferencePointer behaves like an alias for an existing variable, i.e., it is a temporary variable.The pointer is a variable which stores the address of a variable.Reference variable does not require any indirection operator to access the value. A reference variable can be used directly to access the value.Pointer variable requires an indirection operator to access the value of a variable.Once the reference variable is assigned, then it cannot be reassigned with different address values.The pointer variable is an independent variable means that it can be reassigned to point to different objects.A null value cannot be assigned to the reference variable.A null value can be assigned to the reference variable.",
 What are the different data types present in C++?,"The 4 data types in C++ are given below:Primitive Datatype(basic datatype). Example- char, short, int, float, long, double, bool, etc.Derived datatype. Example- array, pointer, etc.Enumeration. Example- enumUser-defined data types. Example- structure, class, etc",
 What is namespace in C++?,"If there are two or more functions with the same name defined in different libraries then how will the compiler know which one to refer to? Thus namespace came to picture.  A namespace defines a scope and differentiates functions, classes, variables etc. with the same name available in different libraries. The namespace starts with the keyword namespace.",
What is template in C++?,A template in C++ is used to pass data types as parameters . These make it easier and more simpler to use classes and functions,
 What is pointer in C++?,Pointers in C++ are a data type that store the memory address of another variable.,
 What is function in C++?,A function in C++ is a group of statements that together perform a specific task. Every C/C++ program has at least one function that the name is main.  The main function is called by the operating system by which our code is executed.,
 What is destructor in C++?,Destructors in c++ are special function/methods that are used to remove memory allocation for objects. They are called usually when the scope of an object ends. eg. when a function  ends you can call a destructor. They are of the same name as the class  - syntax  - ~(classname)();,
 Explain what is the use of void main () in C++ language?,"To run the C++ application it involves two steps, the first step is a compilation where conversion of C++ code to object code take place. While second step includes linking,  where combining of object code from the programmer and from libraries takes place. This function is operated by main () in C++ language.",
 Define inline function?,"If a function is inline, the compiler places a copy of the code of that function at each point where the function is called at compile time. One of the important advantages of  using an inline function is that it eliminates the function calling overhead of a traditional function.",
 What is a scope resolution operator?,"A scope resolution operator is represented as :  This operator is used to associate function definition to a particular class.  The scope operator is used for the following purposes:  To access a global variable when you have a local variable with the same name.  To define a function outside the class. Comment on Local and Global scope of a variable in C++.The scope of a variable is defined as the extent of the program code within which the variable remains active i.e. it can be declared, defined or worked with.There are two types of scope in C++:  Local Scope: A variable is said to have a local scope or is local when it is declared inside a code block. The variable remains active only inside the block and isnot accessible outside the code block.  Global Scope: A variable has a global scope when it is accessible throughout the program. A global variable is declared on top of the program before all the function definitions.",
 Comment on Local and Global scope of a variable in C++.,"The scope of a variable is defined as the extent of the program code within which the variable remains active i.e. it can be declared, defined or worked with.There are two types of scope in C++:Local Scope: A variable is said to have a local scope or is local when it is declared inside a code block. The variable remains active only inside the block and is not accessible outside the code block.Global Scope: A variable has a global scope when it is accessible throughout the program. A global variable is declared on top of the program before all the function definitions.",
" When there are a Global variable and Local variable with the same name, how will you access the global variable?","When there are two variables with the same name but different scope, i.e. one is a local variable and the other is a global variable, the compiler will give preference to a local variable.  In order to access the global variable, we make use of a scope resolution operator (::). Using this operator, we can access the value of the global variable.",
 How many ways are there to initialize an int with a Constant?,There are two ways:  The first format uses traditional C notation.  int result = 10;  The second format uses the constructor notation.  int result (10);,
 How do you define/declare constants in C++?,"In C++, we can define our own constants using the #define preprocessor directive.",
What is the difference between equal to (==) and Assignment Operator (=)?,"In C++, equal to (==) and assignment operator (=) are two completely different operators.Equal to (==) is an equality relational operator that evaluates two expressionsto see if they are equal and returns true if they are equal and false if they are not. The assignment operator (=) is used to assign a value to a variable. Hence,we can have a complex assignment operation inside the equality relational operator for evaluation",
 What are the Extraction and Insertion operators in C++? Explain with examples.,"In the iostream.h library of C++, cin, and cout are the two data streams that are used for input and output respectively. Cout is normally directed to the screen and cin is assigned to the keyboard.cin (extraction operator): By using overloaded operator >> with cin stream, C++ handles the standard input.  int age;  cin>>age;  As shown in the above example, an integer variable  -age is declared and then it waits for cin (keyboard) to enter the data. cin processes the input only when the RETURN key is pressed.cout (insertion operator): This is used in conjunction with the overloaded << operator. It directs the data that followed it into the cout stream.  Example:  cout<<Hello, World!;  cout<<123; State the difference between delete and delete[].delete[] is used to release the memory allocated to an array which was allocated using new[]. delete is used to release one chunk of memory which was allocated using new.",
 State the difference between delete and delete[].,delete[] is used to release the memory allocated to an array which was allocated using new[]. Ã¯Â¿Â½deleteÃ¯Â¿Â½ is used to release one chunk of memory which was allocated using new.,
 What is a Storage Class? Mention the Storage Classes in C++.,Storage class determines the life or scope of symbols such as variable or functions.C++ supports the following storage classes:AutoStaticExternRegisterMutable,
 What is the difference between a++ and ++a?,a++ refers to post-increment operation. The C++ compiler first uses the value of a and then increments it.++a refers to the pre-increment operation. The C++ compiler first increments the value of a++ and then uses a.,
 Explain storage qualifiers in C++.,"Const: This variable means that if the memory is initialised once, it should not be altered by a program.Volatile: This variable means that the value in the memory location can be altered even though nothing in the program code modifies the contents.Mutable: This variable means that a particular member of a structure or class can be altered even if a particular structure variable, class or class member function is constant.",
 Explain dangling pointer.,"When the address of an object is used after its lifetime is over, dangling pointer comes into existence.Some examples of such situations are : Returning the addresses of the automatic variables from a function or using the address of the memory block after it is freed.",
 What is the keyword auto for?,"By default, every local variable of the function is automatic i.e. auto. In the below function both the variables.",
 What is the purpose of the Extern Storage Specifier?,Extern specifier is used to resolve the scope of a global symbol.,
 What is stl in C++?,"Stl is the standard template library. It is a library that allows you to use a standard set of templates for things such as: Algorithms, functions, Iterators in place of actual code.",
What is stream in C++?,Stream refers to a stream of characters to be transferred between program thread and i/o.,
 What is enum in C++?,enum is abbreviation of Enumeration which assigns names to integer constant to make a program easy to read.,
 What are void pointers?,A void pointer is a pointer which is having no datatype associated with it. It can hold addresses of any type.,
 How do you allocate and deallocate memory in C++?,The new operator is used for memory allocation and deletes operator is used for memory deallocation in C++.,
 what is a class in C++?,A class in C++ can be defined as a collection of function and related data under a single name. It is a blueprint of objects. A C++ program can consist of any number of classes.,
 How can you specify a class in C++?,"By using the keyword class followed by identifier (name of class) you can specify the class in C++. Inside curly brackets, body of the class is defined. It is terminated by semi-colon in the end.",
 what is C++ objects?,"Class gives blueprints for object, so basically an object is created from a class or in other words an object is an instance of a class. The data and functions are bundled together as a self-contained unit called an object.",
 what is Member Functions in Classes?,The member function regulates the behaviour of the class. It provides a definition for supporting various operations on data held in the form of an object.,
 What is the difference between an Object and a Class?,"Class is a blueprint of a project or problem to be solved and consists of variables and methods. These are called the members of the class. We cannot access methods or variables of the class on its own unless they are declared static.In order to access the class members and put them to use, we should create an instance of a class which is called an Object. The class has an unlimited lifetime whereas an object has a limited lifespan only.",
What are the various Access Specifiers in C++?,C++ supports the following access specifiers:Public: Data members and functions are accessible outside the class.Private: Data members and functions are not accessible outside the class. The exception is the usage of a friend class.Protected: Data members and functions are accessible only to the derived classes.,
 What is a Constructor and how is it called?,"Constructor is a member function of the class having the same name as the class. It is mainly used for initializing the members of the class. By default constructors are public.There are two ways in which the constructors are called:Implicitly: Constructors are implicitly called by the compiler when an object of the class is created. This creates an object on a Stack.Explicit Calling: When the object of a class is created using new, constructors are called explicitly. This usually creates an object on a Heap.",
 What is a COPY CONSTRUCTOR and when is it called?,A copy constructor is a constructor that accepts an object of the same class as its parameter and copies its data members to the object on the left part of the assignment.  It is useful when we need to construct a new object of the same class.,
 What is a Default Constructor? ,"Default constructor is a constructor that either has no arguments or if there are any, then all of them are default arguments.",
 What is a Conversion Constructor?,It is a constructor that accepts one argument of a different type. Conversion constructors are mainly used for converting from one type to another.,
 What is operator overloading?,"Operator Overloading is a very essential element to perform the operations on user-defined data types. By operator overloading we can modify the default meaning to the operators like +, -, *, /, <=, etc.",
 What is the role of the Static keyword for a class member variable?,"The static member variable shares a common memory across all the objects created for the respective class. We need not refer to the static member variable using an object. However, it can be accessed using the class name itself.",
 What is the difference between Method Overloading and Method Overriding in C++?,Method overloading is having functions with the same name but different argument lists. This is a form of compile-time polymorphism.Method overriding comes into picture when we rewrite the method that is derived from a base class. Method overriding is used while dealing with run-time polymorphism or virtual functions.,
 Name the Operators that cannot be Overloaded.,sizeof  - sizeof operator .  - Dot operator .*  - dereferencing operator ->  - member dereferencing operator ::  - scope resolution operator ?:  - conditional operator.,
 Function can be overloaded based on the parameter which is a value or a reference. Explain if the statement is true. ,"False. Both, Passing by value and Passing by reference look identical to the caller.",
What is Inheritance?,"Inheritance is a process by which we can acquire the characteristics of an existing entity and form a new entity by adding more features to it. In terms of C++, inheritance is creating a new class by deriving it from an existing class so that this new class has the properties of its parent class as well as its own.",
 Does C++ support Multilevel and Multiple Inheritances?,Yes,
 Does a derived class inherit or doesn\xe2\x80\x99t inherit?,"When a derived class is constructed from a particular base class, it basically inherits all the features and ordinary members of the base class. But there are some exceptions to this rule. For instance, a derived class does not inherit the base class constructors and destructors.Each class has its own constructors and destructors. The derived class also does not inherit the assignment operator of the base class and friends of the class. The reason is that these entities are specific to a particular class and if another class is derived or if it is the friend of that class, then they cannot be passed onto them.",
 What are Multiple Inheritances (virtual inheritance)? What are its advantages and disadvantages?,"In multiple inheritances, we have more than one base classes from which a derived class can inherit. Hence, a derived class takes the features and properties of more than one base class.For Example, a class driver will have two base classes namely, employee and a person because a driver is an employee as well as a person. This is advantageous because the driver class can inherit the properties of the employee as well as the person class.But in the case of an employee and a person, the class will have some properties in common. However, an ambiguous situation will arise as the driver class will not know the classes from which the common properties should be inherited. This is the major disadvantage of multiple inheritances.",
 Explain the ISA and HASA class relationships. How would you implement each?,"ISA relationship usually exhibits inheritance as it implies that a class ISA specialized version of another class. For Example, An employee ISA person. That means an Employee class is inherited from the Person class.Contrary to ISA, HASA relationship depicts that an entity may have another entity as its member or a class has another object embedded inside it.So taking the same example of an Employee class, the way in which we associate the Salary class with the employee is not by inheriting it but by including or containing the Salary object inside the Employee class. HASA relationship is best exhibited by containment or aggregation.",
 What is polymorphism in C++?,"Polymorphism in simple means having many forms. Its behavior is different in different situations. And this occurs when we have multiple classes that are related to each other by inheritance. For example, think of a base class called a car that has a method called car brand(). Derived classes of cars could be Mercedes, BMW, Audi - And they also have their own implementation of a carsThe two types of polymorphism in c++ are: Compile Time Polymorphism Runtime Polymorphism",
 What do you know about friend class and friend function?,"A friend class can access private, protected, and public members of other classes in which it is declared as friends. Like friend class, friend function can also access private, protected, and public members. But, Friend functions are not member functions.",
 What is Name Mangling?,"C++ compiler encodes the parameter types with function/method into a unique name. This process is called name mangling. The inverse process is called as demangling.Example: A::b(int, long) const is mangled as . For a constructor, the method name is left out. That is A:: A(int, long) const is mangled as  -C3Ail.",
 What are Virtual Functions?,"A virtual function allows the derived classes to replace the implementation provided by the base class. Whenever we have functions with the same name in the base as well as derived class, there arises an ambiguity when we try to access the child class object using a base class pointer.  As we are using a base class pointer, the function that is called is the base class function with the same name.To correct this ambiguity we use the keyword virtual before the function prototype in the base class. In other words, we make this polymorphic function Virtual. By using a Virtual function, we can remove the ambiguity and we can access all the child class functions correctly using a base class pointer.",
 What do you mean by Pure Virtual Functions?,A Pure Virtual Member Function is a member function in which the base class forces the derived classes to override. Normally this member function has no implementation. Pure virtual functions are equated to zero. Base class that has a pure virtual function as its member can be termed as an Abstract class. This class cannot be instantiated and it usually acts as a blueprint that has several sub-classes with further implementation. What is,
 What is a friend function?,"C++ class does not allow its private and protected members to be accessed outside the class. But this rule can be violated by making use of the Friend function.As the name itself suggests, friend function is an external function that is a friend of the class. For friend function to access the private and protected methods of the class, we should have a prototype of the friend function with the keyword friend included inside the class.",
 What is a friend class?,"Friend classes are used when we need to override the rule for private and protected access specifiers so that two classes can work closely with each other. Hence, we can have a friend class to be a friend of another class. This way, friend classes can keep private, inaccessible things in the way they are. When we have a requirement to access the internal implementation of a class (private member) without exposing the details by making the public, we go for friend functions.",
 What is Exception Handling? Does C++ support Exception Handling?,"Yes C++ supports exception handling. We cannot ensure that code will execute normally at all times. There can be certain situations that might force the code written by us to malfunction, even though it error-free. This malfunctioning of code is called Exception. When an exception has occurred, the compiler has to throw it so that we know an exception has occurred. When an exception has been thrown, the compiler has to ensure that it is handled properly, so that the program flow continues or terminates properly. This is called the handling of an exception. Thus in C++, we have three keywords i.e. try, throw and catch which are in exception handling.",
 What is an Iterator class?,"In C++ a container class is a collection of different objects. If we need to traverse through this collection of objects, we cannot do it using simple index variables. Hence, we have a special class in STL called an Iterator class which can be used to step through the contents of the container class.The various categories of iterators include input iterators, output iterators, forward iterators, bidirectional iterators, random access, etc.",
 What is the difference between an External Iterator and an Internal Iterator? Describe an advantage of the External Iterator.,"An internal iterator is implemented with member functions of the class that has items to step through.An external iterator is implemented as a separate class that can be bound to the object that has items to step through. The basic advantage of an External iterator is that it easy to implement as it is implemented as a separate class.Secondly, as it a different class, many iterator objects can be active simultaneously.",
 What is vector in C++?,"A sequence of containers to store elements, a vector is a template class of C++. Vectors are used when managing ever-changing data elements. The syntax of creating vector.vector (type) variable (number of elements)",
 How to use map in C++?,Associative containers storing a combination of a key value or mapped value is called Maps.,
What is namespace std; and what is consists of?,"Namespace std; defines your standard C++ library, it consists of classes, objects and functions of the standard C++ library. You can specify the library by using namespace std or std: : throughout the code. Namespace is used to differentiate the same functions in a library by defining the name.",
 Explain what is upcasting in C++?,Upcasting is the act of converting a sub class references or pointer into its super class reference or pointer is called upcasting.,
 Explain what is pre-processor in C++?,"Pre-processors are the directives, which give instruction to the compiler to pre-process the information before actual compilation starts.",
 Define token in C++.,"A token in C++ can be a keyword, identifier, literal, constant and symbol.",
 What is function overriding?,"If you inherit a class into a derived class and provide a definition for one of the base class's function again inside the derived class, then this  function is called overridden function, and this mechanism is known as function overriding.",
 What is a pure virtual function?,The pure virtual function is a virtual function which does not contain any definition. The normal function is preceded with a keyword virtual. The pure virtual function ends with 0. Syntax of a pure virtual function: virtual void abc()=0;//pure virtual function.,
 What is the difference between function overloading and operator overloading?,Function overloading: Function overloading is defined as we can have more than one version of the same function. The versions of a function will have different signature  means that they have a different set of parameters.Operator overloading: Operator overloading is defined as the standard operator can be redefined so that it has a different meaning when applied to the instances of a class.,
 What is a virtual destructor?,"A virtual destructor in C++ is used in the base class so that the derived class object can also be destroyed. A virtual destructor is declared by  using the ~ tilde operator and then virtual keyword before the constructor.\xf0\x9f\x92\xa1 Constructor cannot be virtual, but destructor can be virtual.",
 If class D is derived from a base class B. When creating an object of type D in what order would the constructors of these classes get called?,"The derived class has two parts, a base part, and a derived part.  When C++ constructs derived objects, it does so in phases. First, the most-base class(at the top of the inheritance tree) is  constructed. Then each child class is constructed in order until the most-child class is constructed last. So the first Constructor of class B will be called and then the constructor of class D will be called.During the destruction exactly reverse order is followed. That is destructor starts at the most-derived class and works its way down to base class. So the first destructor of class D will be called and then the destructor of class B will be called.",
 Can we call a virtual function from a constructor?,"Yes, we can call a virtual function from a constructor. But the behavior is a little different in this case. When a virtual function is called, the virtual call is resolved at runtime.  It is always the member function of the current class that gets called. That is the virtual machine doesnt work within the constructor.",
 What do you mean by void return type?,"All functions should return a value as per the general syntax. However, in case, if we dont want a function to return any value, we use void to indicate that. This means that we use void to indicate that the function has no return value or it returns void.",
Explain Pass by Value and Pass by Reference.,"While passing parameters to the function using Pass by Value, we pass a copy of the parameters to the function.Hence, whatever modifications are made to the parameters in the called function are not passed back to the calling function. Thus the variables in the calling function remain unchanged.",
What are Default Parameters? How are they evaluated in the C++ function?,"Default Parameter is a value that is assigned to each parameter while declaring a function. This value is used if that parameter is left blank while calling to the function. To specify a default value for a particular parameter, we simply assign a value to the parameter in the function declaration.If the value is not passed for this parameter during the function call, then the compiler uses the default value provided. If a value is specified, then this default value is stepped on and the passed value is used.",
Why are arrays usually processed with for loop?,"Array uses the index to traverse each of its elements.If A is an array then each of its elements is accessed as A[i]. Programmatically, all that is required for this to work is an iterative block with a loop variable i that serves as an index (counter) incrementing from 0 to A.length-1. This is exactly what a loop does and this is the reason why we process arrays using for loops",
What is Abstraction?,"Abstraction can be defined as a technique in which you only show functionality to the user i.e., the details that you want the user to see, hiding the internal details or implementation details.",
 What is C++?,"C++, an object-oriented programming language was designed by Bjarne Stroustrup, in 1985, it was released. C++ is a superset of C, with the exception of classes, which are present in C. Stroustrup dubbed the new language ""C with Classes"" at first. After a while, though, the name was changed to C++. C++ was inspired by the C increment operator ++.",
 What is a class?,"The class is a data type that has been defined by the user. The term class is used to declare the class. The data members and member functions are contained in the class, and their access is controlled by the three modifiers: private, public, and protected. The type definition of the category of objects is defined by the class. It defines a datatype, but not the data itself; rather, it determines the datas structure.""",
 What are the advantages of C++?,"C++ not only maintains all features of the C language but also improves virtual memory and introduces a myriad of benefits, such as:C++ is a highly versatile programming language, which indicates that software written in it can run on almost any platform.Classes, objects, inheritance, polymorphism, and abstraction are all elements of C++, which is an object-oriented programming language.Inheritance is a principle in C++. With inheritance, redundant code can be eliminated and preexisting classes can be retained.Data hiding aids the programmer in implementing security applications that are not susceptible to hackers.Message passing is a connectivity methodology that enables objects to interact with one another.C++ has a vast library of functions.",
 Define tokens in C++,"A token is the smallest element of a programme that the compiler can understand. Tokens are categorised as follows:Keywords,Identifiers,Constants,Strings,Special Symbols and Operators.",
 What are the different data types present in C++?,"There are 4 Data types present in C++, they are: Primitive Datatype(basic datatype). Example- char, short, int, float, long, double, bool, etc.Derived datatype. Example- array, pointer, etc.Enumeration. Example- enumUser-defined data types. Example- structure, class, etc",
 What is Data binding and Abstraction?,"Data Binding: Data binding is the method of constructing a link between both the applications user interface and the information it shows. If the binding has the correct parameters and the information provides the appropriate notification, whenever the data has changed its value, the components that are connected to it instantly adapt to the change.""Data Abstraction: Data abstraction is a process of reducing an enormous amount of information to a simple representation of the whole. Abstraction is the process of diminishing something to a set of basic characteristics by eliminating or subtracting characteristics.",
 What is the difference between C and C++?,"C is a procedure-oriented programming language.C++ is an object-oriented programming language.C does not support Data hiding.Encapsulation hides data to guarantee that data structures and operators are used correctly.C is a subset if C++.C++ is a superset of C.Overloading of functions and operators is not possible in C.Overloading of functions and operators is possible in C++.In C, there are no namespace characteristics.C++ makes use of namespace to avoid name clashes.",
 What is the object in C++?,"A classs instance is an object. Because a class is a user-defined data type, its possible to refer to an object as a variable of that data type.""",
 How can you specify a class in C++?,"In C++, you can specify a class by using the term class followed by an identifier (class name). The body of the class is defined inside curly brackets. It comes to an end with a semi-colon.",
 What are the different types of Operators in C++?,"Arithmetic Operators, Assignment Operators, Relational Operators, Logical Operators, Bitwise Operators and Other Operators.",
 Explain what are the characteristics of Class Members in C++?,"In C++, data and functions are members.Data members and methods must always be defined within the class declaration.A member cannot be re-declared within a class.No other members can be added outside of the class specification.",
 Discuss the difference between prefix and postfix,"In computing, there are two notations: prefix and postfix. The distinction between prefix and postfix notation is that the prefix writes the operator before the operands, whereas the postfix writes the operator after the operands.",
 What is the difference between equal to (==) and assignment operator(=)?,"The == operator determines whether or not the two operands are equal. If this is the case, it returns true. Otherwise, false is returned.The assignment operator ""="" assign the right-hand value to the left-hand variable.",
 What is the difference between struct and class?,"By default, the structures members are open to the public.By default, members of the class are private.When creating a struct from a class/struct, the underlying class/default structs access specifiers are public.Default access specifiers are private when deriving a class.",
 What is polymorphism in C++?,"Polymorphism is defined as the presence of several forms. Its function depends greatly upon the circumstances. While we have several classes which are connected to each other through inheritance, this happens.Consider a base class named car, which has a method called car brand (). Mercedes, BMW, and Audi are examples of derived automobile classes, and each has its own implementation of a car.Polymorphism has two types:Compile Time Polymorphism.Runtime Polymorphism.",
 What is operator overloading?,"Operator overloading is a necessary component for performing operations on user-defined data types. We can change the default meaning of operators like +, -, *, /, =, and so on by overloading them.",
 What is the difference between reference and pointer?,"Reference is a temporary variable that acts like an alias for an existing variable.A pointer is a variable that stores a variables address.To retrieve the value of a reference variable, no indirection operator is required. The value of a reference variable can be accessed directly.To get to the value of a pointer variable, youll need to use an indirection operator.The reference variable cannot be reassigned with various address values once it has been assigned.Because the pointer variable is an independent variable, it can be renamed to point to various objects.The reference variable cannot have a null value applied to it.The reference variable can be given a null value.At the moment of declaration, the variable must be initialised.The variable does not need to be initialised at the moment of declaration.""",
 What are access modifiers?,"C++ has three access modifiers: public, private, and protected. Data hiding is one of the most important characteristics of object-oriented programming languages like C++. Data hiding refers to limiting access to a classs data members.""",
 Define the basic type of the variable used for a different condition in C++,"In C++, a variable is used for a variety of circumstances.Bool: Stores boolean values in a variable (true or false)char: Character kinds are storedint: variable with integral valuesfloat and double: Variables with large and floating-point values.",
 Explain what is the use of void main () in C++ language?,"The void main() specifies that the function will not return any value, whereas the int main() specifies that the function can return data of the integer type. We can utilise the void main when our programme is basic and will not terminate before reaching the last line of code, or when the code is error-free ().",
 Explain constructor in C++,"When an object is formed, the function Object() is a member function that is called automatically. Constructors have the same name as the class they belong to, so the compiler recognises the member function as a function Object(). Constructors also dont have a return type.""",
 What are destructors in C++?,"When an object is created for the first time, the function Object() is automatically invoked. Similarly, when an object is destroyed, a destructor function is automatically invoked. A destructor is preceded by a tilde and has the same name as the function Object().",
 What are the various OOPs concepts in C++?,"The various OOPs Concepts in C++ are:Object, Class, Inheritance, Polymorphism, Encapsulation and Abstraction.",
 Define virtual function,"To replace the implementations provided by the base class, a virtual function is utilised. Even if the object in question is accessed via a base pointer rather than a derived pointer, the substitution has always been called when the object in question is of the derived class.A virtual function is a member function that is defined by the derived class but is present in the base class.When the same function name is used in both the base and derived classes, the base class function is declared with the keyword virtual.Whenever a function is declared virtual, C++ determines which function to call at runtime based on the type of object referenced by the base class pointer. By altering the base class pointer to point to distinct objects, we can execute many copies of the virtual functions.",
" What is the purpose of the ""delete"" operator?","An objects delete operation removes a specified property. If the deletion is successful, it will return true; otherwise, it will return false.""",
 What is the difference between delete and delete[]?,"Delete [] releases an array of allocated memory that was allocated with new[], whereas delete releases a single chunk of memory that was allocated with new.",
 What is a class template?,A class template specifies how classes are generated based on parameters. Containers are typically implemented using class templates. A class template is created by providing it with a set of types as template parameters.,
 What is call by value and call by reference in C++?,"Call by value: We transmit a copy of the parameter to the functions when using the call by value approach. A new memory is assigned to these duplicated values, and changes to these values do not affect the variable in the main function.Call by reference: We supply the address of the variable to the call by reference technique, and the address is utilised to retrieve the actual argument used in the function call. As a result, changes to the parameter affect the passing argument.",
 What is an inline function?,"If a function is inline, the compiler stores a copy of the functions code at each point where it is called during compile time. One of the most significant advantages of using an inline function is that it avoids the overhead of calling a regular function.""",
 Explain how functions are classified in C++?,"In C++ functions are classified as: Return type, Function Name, Parameters, Function body.",
 What is a scope resolution operator?,"The:: (scope resolution) operator qualifies concealed names so they can be utilised. If an explicit declaration of the same name in a block or class obscures a namespace scope or global scope name, you can use the unary scope operator.",
 What is function overloading?,"Multiple functions with the same name can be defined in the same scope in C++. Overloaded functions are what theyre termed when theyre overloaded. You can provide alternative meanings for a function depending on the kinds and quantity of arguments with overloaded functions.""",
 Difference between operator overloading and function overloading?,"Operator overloading: Operator overloading is defined as the ability to redefine a standard operator such that it takes on a new meaning when applied to instances of a class.Function overloading: Function overloading is when a function can have multiple versions. A functions signature varies, indicating that it has a different set of parameters in each iteration.""",
 Define 'std',"STL is derived as Standard Template Library. In C++, the default namespace standard is Std.",
 Compare compile-time polymorphism and Run-time polymorphism,"In Compile-time polymorphism, we'll find out which method will be called at build time. The compiler then resolves the call.In Run-time polymorphism, we learn which method will be invoked during runtime. The compiler does not resolve the call.Because it is known at compile-time, it allows for quick execution.Because it is known at run time, it delivers slower execution than compile-time polymorphism.In compile-time polymorphism function overloading and operator overloading are used to achieve this.In Run-time polymorphism virtual functions and pointers can help with this.""",
 What do you know about friend class and friend function?,"A friend class has access to the secret, protected, and public members of other classes it has marked as friends.Friend function, like friend class, can access members who are secret, protected, or public. Friend functions, on the other hand, are not members.",
 What are the characteristics of a friend function?,"The function isnt part of the class to something that is been added as a buddy.Because it isnt in the scope of that class, it cant be called using the object.It can be used without the object, just like any other function.It cant get at the member names simply, so it has to utilise an object name and the dot membership, operator.It might be stated in either the private or public sections.""",
 Which operations are permitted on pointers?,"The operations that can be performed on pointers are as follows:Incrementing or decrementing a pointer: Increasing the size of a pointer means increasing the size of the data type to which it points.There are two types of increment pointers:Pre-increment pointer: The pre-increment operator increases the operands value by one, and the expressions value becomes the increased value. If ptr is a pointer, then ++ptr represents a pre-increment pointer.Post-increment pointer: The post-increment operator increases the operand by one, but the value of the expression will be the operands value before it was increased by one. If ptr is a pointer, then ptr++ represents a post-increment pointer.Subtracting a pointer from another pointer: The number of elements existing between two members of an array is returned when two pointers pointing to the members of the array are subtracted.",
 What is the difference between an array and a list?,"A list is made up of heterogeneous elements, whereas an array is made up of homogenous components.Memory allocation in an array is static and continuous, whereas memory allocation in a list is dynamic and unpredictable.Users of Array do not need to keep track of the next memory allocation, whereas users of List must keep track of the next memory allocation location.",
 Discuss the difference between new and malloc,"new is an operator.malloc() is a function.It calls the constructor.The malloc function doesn't call the constructor.When using new, there is no need to specify memory size ().You have to specify the memory size.new operator can be overloaded.malloc() can never be overloaded.",
 What is an abstract class and when do you use it?,"An abstract class is one that has no objects that can be created. As a parent for the derived classes, such a class exists. By including a pure virtual function in a class, we can make it abstract.",
 What is an overflow error?,"Whenever a program is provided a number, value, or variable that it cannot manage, an overflow error occurs. This is a common programming mistake, collaborating with integer or even other numerals.",
 Explain inheritance,"The act of creating new classes, known as derived classes, from existing classes is referred to as inheritance. Base classes refer to the pre-existing classes. Derived classes inherit all of the capabilities of the base class, but they can add their own features and enhancements.",
 What is overloading?,"When a single object behaves in multiple ways, it is called overloading. Even if two objects have the same name, they execute different functions.C++ allows you to define multiple definitions for the same function name or operator within the same scope. Overloading is a term that refers to the same thing as function overloading.Overloading is of two types:",
 What is STL?,"The Standard Template Library (STL) is a set of C++ template classes that would provide commonly used programming data structures and operations, such as lists, stacks, and arrays. Its an algorithm, iterator, and container class library.""",
 What are the methods of exporting a function from a DLL?,There are two approaches:By Using the type library in the DLL.By Using the DLL instance to get a reference to the function.,
 Explain what is C++ exceptional handling?,"The practice of handling runtime faults in C++ is known as exception handling. We handle exceptions so that the applications usual flow can be preserved even when runtime issues occur. An exception in C++ is a run-time event or object. The std::exception class is where all exceptions are derived.""",
 Mention what are the types of Member Functions?,"The types of member functions are:Simple functions, Static functions, Const functions, Inline functions, Friend functions.",
 What is a copy constructor?,A copy constructor is a member function that uses another object from the same class to initialize an object. The general function prototype of a copy constructor is as follows:,
 Mention what are the decision-making statements in C++? Explain if statement with an example?,"The decision making statements in C++ are: if statement, switch statement and conditional operator.",
 Explain what is multi-threading in C++?,"Multitasking is the capability that allows your computer to execute two or more programs at the same time. Multithreading is a sophisticated form of multitasking.A multithreaded program is made up of two or more components that can run at the same time. A thread is a component of such a program, and each thread defines a distinct execution path.",
 What is the difference between virtual functions and pure virtual functions?,"A virtual function is a base class member function which may modify in a derived class. The keyword virtual is used to declare it.A pure virtual function is one that has no implementation and is declared by setting the value to 0. It doesnt have a body.Example:""",
 What are void pointers?,"A void pointer is a pointer that doesnt have a datatype attached to it. It may store any form of address.""",
 How do you allocate and deallocate memory in C++?,"In C++, the new operator is used to allocate memory, whereas the deletes operator is used to deallocate memory.",
 What is a virtual destructor?,"In C++, a virtual destructor is used in the base class to allow the derived class object to be destroyed as well. The tilde operator and the virtual keyword are used before the constructor to declare a virtual destructor.",
 Define the Local and Global scope of a variable,"Global variables are useful for data that are relatively constant or that must be accessed by multiple functions in the script, such as a session id. A local variable, on the other hand, has a limited scope: it only exists within the block in which it was defined. The variable is destroyed and its values are lost once that block ends.",
 Can we call a virtual function from a constructor?,"We can use a constructor to call a virtual function. However, in this scenario, the behavior differs slightly. The virtual call is resolved at runtime when a virtual function is invoked. The current classs member function is always invoked. That is, the constructor does not support virtual machines.""",
 Explain what is upcasting in C++?,"Upcasting is the process of transforming a derived-class pointer or reference to a base class. To look at it another way, one can consider a derived type as though it were its base type by upcasting it. Public inheritance is always allowed when no explicit type cast is used.",
What is a Data Structure?,"The Data Structure is the way data is organized (stored) and manipulated for retrieval and access. It also defines the way different sets of data relate to one another, establishing relationships and forming algorithms.",
Describe the types of Data Structures?,"The following are the types of data structures:Lists: A collection of related things linked to the previous or/and following data items.Arrays: A collection of values that are all the same.Records: A collection of fields, each of which contains data from a single data type.Trees: A data structure that organizes data in a hierarchical framework. This form of data structure follows the ordered order of data item insertion, deletion, and modification.Tables: The data is saved in the form of rows and columns. These are comparable to records in that the outcome or alteration of data is mirrored across the whole table.",
What is a Linear Data Structure? Name a few examples.,"A data structure is linear if all its elements or data items are arranged in a sequence or a linear order. The elements are stored in a non-hierarchical way so that each item has successors and predecessors except the first and last element in the list.Examples of linear data structures are Arrays, Stack, Strings, Queue, and Linked List.",
What are some applications of Data Structures?,"In terms of data structure interview questions, this is one of the most frequently asked question.Numerical analysis, operating system, AI, compiler design, database management, graphics, statistical analysis, and simulation.",
What is the difference between file structure and storage structure?,"The difference lies in the memory area accessed. Storage structure refers to the data structure in the memory of the computer system, whereas file structure represents the storage structure in the auxiliary memory.",
What is a multidimensional array?,"A multidimensional array is a multidimensional array with more than one dimension. It is an array of arrays or an array with numerous layers. The 2D array, or two-dimensional array, is the most basic multidimensional array. As you'll see in the code, it's technically an array of arrays. A 2D array is also referred to as a matrix or a table with rows and columns. Declaring a multidimensional array is the same as saying a one-dimensional array. We need to notify C that we have two dimensions for a two-dimensional array.",
How are the elements of a 2D array stored in the memory?,"Row-Major Order: -In row-major ordering, all of the rows of a 2D array are stored in memory in a contiguous manner.First, the first row of the array is entirely stored in memory, followed by the second row of the array, and so on until the final row.Column-Major Order: In column-major ordering, all of the columns of a 2D array are stored in memory in the same order. The first column of the array is entirely saved in memory, followed by the second row of the array, and so on until the last column of the array is wholly recorded in memory.",
What is a linked list Data Structure?,"It's a linear Data Structure or a sequence of data objects where elements are not stored in adjacent memory locations. The elements are linked using pointers to form a chain. Each element is a separate object, called a node.Each node has two items: a data field and a reference to the next node. The entry point in a linked list is called the head. Where the list is empty, the head is a null reference and the last node has a reference to null.A linked list is a dynamic data structure, where the number of nodes is not fixed, and the list has the ability to grow and shrink on demand.It is applied in cases where:We deal with an unknown number of objects or dont know how many items are in the listWe need constant-time insertions/deletions from the list, as in real-time computing where time predictability is criticalRandom access to any elements is not neededThe algorithm requires a data structure where objects need to be stored irrespective of their physical address in memoryWe need to insert items in the middle of the list as in a priority queueSome implementations are stacks and queues, graphs, directory of names, dynamic memory allocation, and performing arithmetic operations on long integers.",
Are linked lists considered linear or non-linear Data Structures?,"Linked lists are considered both linear and non-linear data structures depending upon the application they are used for. When used for access strategies, it is considered as a linear data-structure. When used for data storage, it is considered a non-linear data structure.",
What are the advantages of a linked list over an array? In which scenarios do we use Linked List and when Array?,"This is another frequently asked data structure interview questions! Advantages of a linked list over an array are:Insertion and deletion of nodes is an easier process, as we only update the address present in the next pointer of a node. It's expensive to do the same in an array as the room has to be created for the new elements and existing elements must be shifted.As a linked list is a dynamic data structure, there is no need to give an initial size as it can grow and shrink at runtime by allocating and deallocating memory. However, the size is limited in an array as the number of elements is statically stored in the main memory.As the size of a linked list can increase or decrease depending on the demands of the program, and memory is allocated only when required, there is no memory wasted. In the case of an array, there is memory wastage. For instance, if we declare an array of size 10 and store only five elements in it, then the space for five elements is wasted.Data structures like stack and queues are more easily implemented using a linked list than an array.Some scenarios where we use linked list over array are:When we know the upper limit on the number of elements in advanceWhen there are a large number of add or remove operationsWhen there are no large number of random access to elementsWhen we want to insert items in the middle of the list, such as when implementing a priority queueSome scenarios in which we use array over the linked list are:When we need to index or randomly access elementsWhen we know the number of elements in the array beforehand, so we can allocate the correct amount of memoryWhen we need speed when iterating through all the elements in the sequenceWhen memory is a concern; filled arrays use less memory than linked lists, as each element in the array is the data but each linked list node requires the data as well as one or more pointers to the other elements in the linked listIn summary, we consider the requirements of space, time, and ease of implementation to decide whether to use a linked list or array.",
What is a doubly-linked list? Give some examples.,"It is a complex type (double-ended LL) of a linked list in which a node has two links, one that connects to the next node in the sequence and another that connects to the previous node. This allows traversal across the data elements in both directions.Examples include:A music playlist with next and previous navigation buttons.The browser cache with BACK-FORWARD visited pagesThe undo and redo functionality on a browser, where you can reverse the node to get to the previous page",
How do you reference all of the elements in a one-dimension array?,"Using an indexed loop, we may access all of the elements in a one-dimensional array. The counter counts down from 0 to the maximum array size, n, minus one. The loop counter is used as the array subscript to refer to all items of the one-dimensional array in succession.",
What are dynamic Data Structures? Name a few.,"They are collections of data in memory that expand and contract to grow or shrink in size as a program runs. This enables the programmer to control exactly how much memory is to be utilized.Examples are the dynamic array, linked list, stack, queue, and heap.",
What is an algorithm?,An algorithm is a step by step method of solving a problem or manipulating data. It defines a set of instructions to be executed in a certain order to get the desired output.,
Why do we need to do an algorithm analysis?,"A problem can be solved in more than one way using several solution algorithms. Algorithm analysis provides an estimation of the required resources of an algorithm to solve a specific computational problem. The amount of time and space resources required to execute is also determined.The time complexity of an algorithm quantifies the amount of time taken for an algorithm to run as a function of the length of the input. The space complexity quantifies the amount of space or memory taken by an algorithm, to run as a function of the length of the input.",
What is a stack?,"A stack is an abstract data type that specifies a linear data structure, as in a real physical stack or piles where you can only take the top item off the stack in order to remove things. Thus, insertion (push) and deletion (pop) of items take place only at one end called top of the stack, with a particular order: LIFO (Last In First Out) or FILO (First In Last Out).",
Where are stacks used?,"Expression, evaluation, or conversion of evaluating prefix, postfix, and infix expressions,Syntax parsing,String reversal,Parenthesis checking and Backtracking.",
What are the operations that can be performed on a stack?,"A stack is a linear data structure that operates on the same concept, in that components in a stack are added and deleted only from one end, referred to as the TOP. As a result, a stack is known as a LIFO (Last-In-First-Out) data structure because the piece that was put last is the first to be removed.A stack may perform three fundamental operations:PUSH: The push action inserts a new element into the stack. The new feature is placed at the top of the stack. However, before inserting the value, we must first verify if TOP=MAX=1, since if so, the stack is filled, and no more insertions are possible. An OVERFLOW message is printed if an attempt is made to put a value into an existing stack.POP: The pop operation is performed to remove the stack's topmost element. However, before removing the value, we must first verify if TOP=NULL, since if it is, the stack is empty, and no further deletions are permitted. An UNDERFLOW notice is produced if an attempt is made to erase a value from a stack that is already empty.PEEK: A peek action returns the value of the stack's topmost element without removing it from the stack. On the other hand, the Peek operation first checks if the stack is empty, i.e., if TOP = NULL, then an appropriate message is written. Otherwise, a value is returned.",
What is a postfix expression?,"A postfix expression is made up of operators and operands, with the operator coming after the operands. That is, in a postfix expression, the operator comes after the operands. Likewise, what is the proper postfix form? The correct postfix phrase is A B + C *.",
What is a queue Data Structure?,"In this type of data structure interview questions, you can also discuss your experience and situations using queue. A queue is an abstract data type that specifies a linear data structure or an ordered list, using the First In First Out (FIFO) operation to access elements. Insert operations can be performed only at one end called REAR and delete operations can be performed only at the other end called FRONT.",
List some applications of queue Data Structure.,"To prioritize jobs as in the following scenarios:As waiting lists for a single shared resource in a printer, CPU, call center systems, or image uploads; where the first one entered is the first to be processed.In the asynchronous transfer of data; or example pipes, file IO, and sockets.As buffers in applications like MP3 media players and CD players.To maintain the playlist in media players (to add or remove the songs)",
What is a Dequeue?,"It is a double-ended queue, or a data structure, where the elements can be inserted or deleted at both ends (FRONT and REAR).",
What operations can be performed on queues?,enqueue() adds an element to the end of the queue.dequeue() removes an element from the front of the queue.init() is used for initializing the queue.isEmptytests for whether or not the queue is empty.The front is used to get the value of the first data item but does not remove it.The rear is used to get the last item from a queue.,
What are the advantages of the heap over a stack?,"Heap is more flexible than the stack because memory space can be dynamically allocated and de-allocated as needed.Heap memory is used to store objects in Java, whereas stack memory is used to store local variables and function call.Objects created in the heap are visible to all threads, whereas variables stored in stacks are only visible to the owner as private memory.When using recursion, the size of heap memory is more whereas it quickly fill-ups stack memory.",
Where can stack Data Structure be used?,Expression evaluation.Backtracking.Memory management.Function calling and return,
What is the difference between a PUSH and a POP?,"The acronyms stand for Pushing and Popping operations performed on a stack. These are ways data is stored and retrieved.PUSH is used to add an item to a stack, while POP is used to remove an item.PUSH takes two arguments, the name of the stack to add the data to and the value of the entry to be added. POP only needs the name of the stack.When the stack is filled and another PUSH command is issued, you get a stack overflow error, which means that the stack can no longer accommodate the last PUSH. In POP, a stack underflow error occurs when youre trying to POP an already empty stack.",
Which sorting algorithm is considered the fastest? Why?,"A single sorting algorithm can't be considered best, as each algorithm is designed for a particular data structure and data set. However, the QuickSort algorithm is generally considered the fastest because it has the best performance for most inputs.Its advantages over other sorting algorithms include the following:Cache-efficient: It linearly scans and linearly partitions the input. This means we can make the most of every cache load.Can skip some swaps: As QuickSort is slightly sensitive to input that is in the right order, it can skip some swaps.Efficient even in worst-case input sets, as the order is generally random.Easy adaption to already- or mostly-sorted inputs.When speed takes priority over stability.",
What is the merge sort? How does it work?,"Merge sort is a divide-and-conquer algorithm for sorting the data. It works by merging and sorting adjacent data to create bigger sorted lists, which are then merged recursively to form even bigger sorted lists until you have one single sorted list.",
How does the Selection sort work?,Selection sort works by repeatedly picking the smallest number in ascending order from the list and placing it at the beginning. This process is repeated moving toward the end of the list or sorted subarray.Scan all items and find the smallest. Switch over the position as the first item. Repeat the selection sort on the remaining N-1 items. We always iterate forward (i from 0 to N-1) and swap with the smallest element (always i).Time complexity: best case O(n2); worst O(n2).Space complexity: worst O(1).,
What is an asymptotic analysis of an algorithm?,"Asymptotic analysis is the technique of determining an algorithm's running time in mathematical units to determine the program's limits, also known as ""run-time performance."" The purpose is to identify the best case, worst case, and average-case times for completing a particular activity. While not a deep learning training technique, Asymptotic analysis is an essential diagnostic tool for programmers to analyze an algorithm's efficiency rather than its correctness.",
What are asymptotic notations?,"Asymptotic Notation represents an algorithm's running time - how long an algorithm takes with a given input, n. Big O, large Theta (), and big Omega () are the three distinct notations. When the running time is the same in all circumstances, big- is used, big-O for the worst-case running time, and big- for the best case running time.",
What are some examples of divide and conquer algorithms?,"Quicksort is the name of a sorting algorithm. The method selects a pivot element and rearranges the array elements so that all items less than the pivot chosen element go to the left side of the pivot and all elements more significant than the pivot element move to the right side.Merge Sort is a sorting algorithm as well. The algorithm divides the array into two halves, sorts them recursively, and then combines the two sorted halves. The goal of points that are closest together is to identify the nearest pair of points in an x-y plane collection of points. The issue may be solved in O(n2) time by computing the distances between each pair of locations and comparing them to determine the shortest distance.",
Define the graph Data Structure?,It is a type of non-linear data structure that consists of vertices or nodes connected by edges or arcs to enable storage or retrieval of data. Edges may be directed or undirected.,
What are the applications of graph Data Structure?,"Transport grids where stations are represented as vertices and routes as the edges of the graph.Utility graphs of power or water, where vertices are connection points and edge the wires or pipes connecting them.Social network graphs to determine the flow of information and hotspots (edges and vertices).Neural networks where vertices represent neurons and edge the synapses between them.",
List the types of trees?,"The General Tree:A tree is referred to as a generic tree if its hierarchy is not constrained. In the General Tree, each node can have an endless number of offspring, and all other trees are subsets of the tree.The Binary Tree:The binary tree is a type of tree in which each parent has at least two offspring. The children are referred to as the left and right youngsters. This tree is more popular than most others. When specific limitations and features are given to a Binary tree, various trees such as AVL tree, BST (Binary Search Tree), RBT tree, and so on are also utilized.Tree of Binary Search:Binary Search Tree (BST) is a binary tree extension that includes numerous optional constraints. In BST, a node's left child value should be less than or equal to the parent value, while the correct child value should always be higher than or equal to the parent's value.The AVL Tree:The AVL tree is a self-balancing binary search tree. The term AVL is given in honor of the inventors Adelson-Velshi and Landis. This was the first tree to achieve dynamic equilibrium. Each node in the AVL tree is assigned a balancing factor based on whether the tree is balanced or not. The node kids have a maximum height of one AVL vine.Red and Black Tree:Red-black trees are another type of auto-balancing tree. The red-black term is derived from the qualities of the red-black tree, which has either red or black painted on each node. It helps to keep the forest in balance. Even though this tree is not perfectly balanced, the searching process takes just O (log n) time.The N-ary Tree:In this sort of tree with a node, N is the maximum number of children. A binary tree is a two-year tree since each binary tree node has no more than two offspring. A full N-ary tree is one in which the children of each node are either 0 or N.",
What are Binary trees?,"A binary tree is a tree data structure made up of nodes, each of which has two offspring, known as the left and right nodes. The tree begins with a single node called the root.Each node in the tree carries the following information:Data.A pointing device indicates the left kid.An arrow pointing to the correct child.",
What are the differences between the B tree and the B+ tree?,"The B tree is a self-balancing m-way tree, with m defining the tree's order. Depending on the number of m, Btree is an extension of the Binary Search tree in which a node can have more than one key and more than two children. The data is provided in the B tree in a sorted manner, with lower values on the left subtree and higher values on the right subtree.The B+ tree is an advanced self-balanced tree since every path from the tree's root to its leaf is the same length. The fact that all leaf nodes are the same length indicates that they all occur at the same level. Specific leaf nodes cant appear at the third level, while others appear at the second level.",
What are the advantages of binary search over a linear search?,"In a sorted list:A binary search is more efficient than a linear search because we perform fewer comparisons. With linear search, we can only eliminate one element per comparison each time we fail to find the value we are looking for, but with the binary search, we eliminate half the set with each comparison.Binary search runs in O(log n) time compared to linear searchs O(n) time. This means that the more of the elements present in the search array, the faster is binary search compared to a linear search.",
What is an AVL tree?,"An AVL (Adelson, Velskii, and Landi) tree is a height balancing binary search tree in which the difference of heights of the left and right subtrees of any node is less than or equal to one. This controls the height of the binary search tree by not letting it get skewed. This is used when working with a large data set, with continual pruning through insertion and deletion of data.",
Differentiate NULL and VOID,"Null is a value, whereas Void is a data type identifier.Null indicates an empty value for a variable, whereas void indicates pointers that have no initial size.Null means it never existed; Void means it existed but is not in effect.",
Do dynamic memory allocations help in managing data? How?,"Dynamic memory allocation stores simple structured data types at runtime. It has the ability to combine separately allocated structured blocks to form composite structures that expand and contract as needed, thus helping manage data of data blocks of arbitrary size, in arbitrary order.",
Name the ways to determine whether a linked list has a loop.,Using hashing.Using the visited nodes method (with or without modifying the basic linked list data structure).Floyd's cycle-finding algorithm.,
List some applications of multilinked structures?,Sparse matrix.Index generation,
Explain the jagged array.,It is an array whose elements themselves are arrays and may be of different dimensions and sizes.,
Explain the max heap Data Structure.,It is a type of heap data structure where the value of the root node is greater than or equal to either of its child nodes.,
How do you find the height of a node in a tree?,"The height of the node equals the number of edges in the longest path to the leaf from the node, where the depth of a leaf node is 0.",
What are Data Structures?,"A data structure is a mechanical or logical way that data is organized within a program. The organization of data is what determines how a program performs. There are many types of data structures, each with its own uses. When designing code, we need to pay particular attention to the way data is structured. If data isn't stored efficiently or correctly structured, then the overall performance of the code will be reduced.",
Why Create Data Structures?,"Data structures serve a number of important functions in a program. They ensure that each line of code performs its function correctly and efficiently, they help the programmer identify and fix problems with his/her code, and they help to create a clear and organized code base.",
What are some applications of Data structures?,"Following are some real-time applications of data structures:Decision Making, Genetics, Image Processing, Blockchain, Numerical and Statistical Analysis, Compiler Design, Database Design and many more.",
Explain the process behind storing a variable in memory.,"A variable is stored in memory based on the amount of memory that is needed. Following are the steps followed to store a variable:The required amount of memory is assigned first.Then, it is stored based on the data structure being used.Using concepts like dynamic allocation ensures high efficiency and that the storage units can be accessed based on requirements in real-time.",
Can you explain the difference between file structure and storage structure?,"File Structure: Representation of data into secondary or auxiliary memory say any device such as a hard disk or pen drives that stores data which remains intact until manually deleted is known as a file structure representation.Storage Structure: In this type, data is stored in the main memory i.e RAM, and is deleted once the function that uses this data gets completely executed.The difference is that the storage structure has data stored in the memory of the computer system, whereas the file structure has the data stored in the auxiliary memory.",
Describe the types of Data Structures?,"Linear Data Structure: A data structure that includes data elements arranged sequentially or linearly, where each element is connected to its previous and next nearest elements, is referred to as a linear data structure. Arrays and linked lists are two examples of linear data structures.Non-Linear Data Structure: Non-linear data structures are data structures in which data elements are not arranged linearly or sequentially. We cannot walk through all elements in one pass in a non-linear data structure, as in a linear data structure. Trees and graphs are two examples of non-linear data structures.",
What is a stack data structure?  What are the applications of stack?,"A stack is a data structure that is used to represent the state of an application at a particular point in time. The stack consists of a series of items that are added to the top of the stack and then removed from the top. It is a linear data structure that follows a particular order in which operations are performed. LIFO (Last In First Out) or FILO (First In Last Out) are two possible orders. A stack consists of a sequence of items. The element that's added last will come out first, a real-life example might be a stack of clothes on top of each other. When we remove the cloth that was previously on top, we can say that the cloth that was added last comes out first. Following are some applications for stack data structure: It acts as temporary storage during recursive operations, Redo and Undo operations in doc editors, Reversing a string, Parenthesis matching, Postfix to Infix Expressions and Function calls order.",
What are different operations available in stack data structure?,Some of the main operations provided in the stack data structure are: push: This adds an item to the top of the stack. The overflow condition occurs if the stack is full.pop: This removes the top item of the stack. Underflow condition occurs if the stack is empty.top: This returns the top item from the stack.isEmpty: This returns true if the stack is empty else false.size:  This returns the size of the stack.,
What is a queue data structure?  What are the applications of queue?,"A queue is a linear data structure that allows users to store items in a list in a systematic manner. The items are added to the queue at the rear end until they are full, at which point they are removed from the queue from the front. Queues are commonly used in situations where the users want to hold items for a long period of time, such as during a checkout process. A good example of a queue is any queue of customers for a resource where the first consumer is served first.Following are some applications of queue data structure:Breadth-first search algorithm in graphs.Operating system: job scheduling operations, Disk scheduling, CPU scheduling etc.Call management in call centres.",
What are different operations available in queue data structure?,enqueue: This adds an element to the rear end of the queue.  Overflow conditions occur if the queue is full.dequeue: This removes an element from the front end of the queue. Underflow conditions occur if the queue is empty.isEmpty: This returns true if the queue is empty or else false.rear: This returns the rear end element without removing it.front: This returns the front-end element without removing it.size: This returns the size of the queue.,
Differentiate between stack and queue data structure.,"Stack is a linear data structure where data is added and removed from the top.	Queue is a linear data structure where data is ended at the rear end and removed from the front.Stack is based on LIFO(Last In First Out) principle. Queue is based on FIFO(First In First Out) principleInsertion operation in Stack is known as push.	Insertion operation in Queue is known as eneque.Delete operation in Stack is known as pop.	Delete operation in Queue is known as dequeue.In stack only one pointer is available for both addition and deletion: top(). While in queue two pointers are available for addition and deletion: front() and rear()Stack is used in solving recursion problems.Queue is used in solving sequential processing problems",
What is array data structure?  What are the applications of arrays?,"An array data structure is a data structure that is used to store data in a way that is efficient and easy to access. It is similar to a list in that it stores data in a sequence. However, an array data structure differs from a list in that it can hold much more data than a list can. An array data structure is created by combining several arrays together. Each array is then given a unique identifier, and each array's data is stored in the order in which they are created.Array data structures are commonly used in databases and other computer systems to store large amounts of data efficiently. They are also useful for storing information that is frequently accessed, such as large amounts of text or images.",
What is a linked list data structure? What are the applications for the Linked list?,"A linked list can be thought of as a series of linked nodes (or items) that are connected by links (or paths). Each link represents an entry into the linked list, and each entry points to the next node in the sequence. The order in which nodes are added to the list is determined by the order in which they are created.Following are some applications of linked list data structure:Stack, Queue, binary trees, and graphs are implemented using linked lists.Dynamic management for Operating System memory.Round robin scheduling for operating system tasks.Forward and backward operation in the browser.",
Elaborate on different types of Linked List data structures?,"Following are different types of linked lists:1. Singly Linked List: A singly linked list is a data structure that is used to store multiple items. The items are linked together using the key. The key is used to identify the item and is usually a unique identifier. In a singly linked list, each item is stored in a separate node. The node can be a single object or it can be a collection of objects. When an item is added to the list, the node is updated and the new item is added to the end of the list. When an item is removed from the list, the node that contains the removed item is deleted and its place is taken by another node. The key of a singly linked list can be any type of data structure that can be used to identify an object. For example, it could be an integer, a string, or even another singly linked list. Singly-linked lists are useful for storing many different types of data. For example, they are commonly used to store lists of items such as grocery lists or patient records. They are also useful for storing data that is time sensitive such as stock market prices or flight schedules.2. Doubly Linked List: A doubly linked list is a data structure that allows for two-way data access such that each node in the list points to the next node in the list and also points back to its previous node. In a doubly linked list, each node can be accessed by its address, and the contents of the node can be accessed by its index. It's ideal for applications that need to access large amounts of data in a fast manner. A disadvantage of a doubly linked list is that it is more difficult to maintain than a single-linked list. In addition, it is more difficult to add and remove nodes than in a single-linked list.3. Circular Linked List: A circular linked list is a unidirectional linked list where each node points to its next node and the last node points back to the first node, which makes it circular.4. Doubly Circular Linked List: A doubly circular linked list is a linked list where each node points to its next node and its previous node and the last node points back to the first node and first node's previous points to the last node.5. Header List: A list that contains the header node at the beginning of the list, is called the header-linked list. This is helpful in calculating some repetitive operations like the number of elements in the list etc.",
Difference between Array and Linked List.,"An array is a collection of data elements of the same type.	A linked list is a collection of entities known as nodes. The node is divided into two sections: data and address.Array keeps the data elements in a single memory.	Linked list stores elements at random, or anywhere in the memory.The memory size of an array is fixed and cannot be changed during runtime. The memory size of a linked list is allocated during runtime.An array's elements are not dependent on one another.Linked List elements are dependent on one another.It is easier and faster to access an element in an array.In the linked list, it takes time to access an element.Memory utilization is ineffective in the case of an array.Memory utilization is effective in the case of an array.Operations like insertion and deletion take longer time in an array.Operations like insertion and deletion are faster in the linked list.",
What is an asymptotic analysis of an algorithm?,"Asymptotic analysis of an algorithm defines the run-time performance as per its mathematical boundations. Asymptotic analysis helps us articulate the best case(Omega Notation, Î©), average case(Theta Notation, Î¸), and worst case(Big Oh Notation, ÎŸ) performance of an algorithm.",
What is hashmap in data structure?,Hashmap is a data structure that uses an implementation of a hash table data structure which allows access to data in constant time (O(1)) complexity if you have the key.,
What is the requirement for an object to be used as key or value in HashMap?,The key or value object that gets used in the hashmap must implement equals() and hashcode() method.The hash code is used when inserting the key object into the map and the equals method is used when trying to retrieve a value from the map.,
What is binary tree data structure? What are the applications for binary trees?,"A binary tree is a data structure that is used to organize data in a way that allows for efficient retrieval and manipulation. It is a data structure that uses two nodes, called leaves and nodes, to represent the data. The leaves represent the data and the nodes represent the relationships between the leaves. Each node has two children, called siblings, and each child has one parent. The parent is the node that is closest to the root of the tree. When a node is deleted from the tree, it is deleted from both its child and its parent.Following are some applications for binary tree data structure:It's widely used in computer networks for storing routing table information.Decision Trees.Expression Evaluation.Database indices.",
What is binary search tree data structure? ,"A binary search tree is a data structure that stores items in sorted order. In a binary search tree, each node stores a key and a value. The key is used to access the item and the value is used to determine whether the item is present or not. The key can be any type of value such as an integer, floating point number, character string, or even a combination of these types. The value can be any type of items such as an integer, floating point number, character string, or even a combination of these types. When a node is added to the tree, its key is used to access the item stored at that node. When a node is removed from the tree, its key is used to access the item stored at that node.",
What are tree traversals?,Tree traversal is the process of visiting all the nodes of a tree. Since the root (head) is the first node and all nodes are connected via edges (or links) we always start with that node. There are three ways which we use to traverse a tree âˆ’ 1.Inorder traversal 2.Preorder traversal 3.Postorder traversal.,
What is a deque data structure and its types? ,"A deque can be thought of as an array of items, but with one important difference: Instead of pushing and popping items off the end to make room, deques are designed to allow items to be inserted at either end. This property makes deques well-suited for performing tasks such as keeping track of inventory, scheduling tasks, or handling large amounts of data.There are two types of deque:Input Restricted Deque and Output Restricted Deque.",
What is a priority queue? What are the applications for priority queue?,"Priority Queue is an abstract data type that is similar to a queue in that each element is assigned a priority value. The order in which elements in a priority queue are served is determined by their priority (i.e., the order in which they are removed). If the elements have the same priority, they are served in the order they appear in the queue.Following are some real-time applications for priority queue:Used in graph algorithms like Dijkstra, Primâ€™s Minimum spanning tree etc..Huffman code for data compression.Finding Kth Largest/Smallest element.",
What is graph data structure ? What are the applications for graphs?,"A graph is a type of non-linear data structure made up of nodes and edges. The nodes are also known as vertices, and edges are lines or arcs that connect any two nodes in the graph.The following are the two most common graph representations:1. Adjacency Matrix and 2. Adjacency List.",
What is the difference between the Breadth First Search (BFS) and Depth First Search (DFS)?,"It stands for â€œBreadth First Searchâ€. It stands for â€œDepth First Searchâ€.BFS (Breadth First Search) finds the shortest path using the Queue data structure.	DFS (Depth First Search) finds the shortest path using the Stack data structure.We walk through all nodes on the same level before passing to the next level in BFS.	DFS begins at the root node and proceeds as far as possible through the nodes until we reach the node with no unvisited nearby nodes.When compared to DFS, BFS is slower. When compared to BFS, DFS is faster.BFS performs better when the target is close to the source.	DFS performs better when the target is far from the source.BFS necessitates more memory. DFS necessitates less memory.Nodes that have been traversed multiple times are removed from the queue.When there are no more nodes to visit, the visited nodes are added to the stack and then removed.Backtracking is not an option in BFS. The DFS algorithm is a recursive algorithm that employs the concept of backtracking.It is based on the FIFO principle (First In First Out).	It is based on the LIFO principle (Last In First Out).",
What is AVL tree data structure? ,"AVL trees are height balancing binary search trees named after their inventors Adelson, Velski, and Landis. The AVL tree compares the heights of the left and right subtrees and ensures that the difference is less than one. This distinction is known as the Balance Factor.",
What is a B-tree data structure? ,The B Tree is a type of m-way tree that is commonly used for disc access. A B-Tree with order m can only have m-1 keys and m children. One of the primary reasons for using a B tree is its ability to store a large number of keys in a single node as well as large key values while keeping the tree's height relatively small.,
What is a heap data structure?,Heap is a special tree-based non-linear data structure in which the tree is a complete binary tree. A binary tree is said to be complete if all levels are completely filled except possibly the last level and the last level has all elements as left as possible. Heaps are of two types: Max-Heap and Min-Heap.,
What is data structure?,"Data structure refers to the way data is organized and manipulated. It seeks to find ways to make data access more efficient. When dealing with the data structure, we not only focus on one piece of data but the different set of data and how they can relate to one another in an organized manner.",
Differentiate between file and structure storage structure.,"The key difference between both the data structure is the memory area that is being accessed. When dealing with the structure that resides the main memory of the computer system, this is referred to as storage structure. When dealing with an auxiliary structure, we refer to it as file structures.",
When is a binary search best applied?,"A binary search is an algorithm that is best applied to search a list when the elements are already in order or sorted. The list is searched starting in the middle, such that if that middle value is not the target search key, it will check to see if it will continue the search on the lower half of the list or the higher half. The split and search will then continue in the same manner.",
What is a linked list?,A linked list is a sequence of nodes in which each node is connected to the node following it. This forms a chain-like link for data storage.,
How do you reference all the elements in a one-dimension array?,"To reference all the elements in a  one -dimension array, you need to use an indexed loop, So that, the counter runs from 0 to the array size minus one. In this manner, You can reference all the elements in sequence by using the loop counter as the array subscript.",
In what areas do data structures are applied?,"Data structures are essential in almost every aspect where data is involved. In general, algorithms that involve efficient data structure is applied in the following areas: numerical analysis, operating system, A.I., compiler design, database management, graphics, and statistical analysis, to name a few.",
What is LIFO?,"LIFO is a short form of Last In First Out. It refers how data is accessed, stored and retrieved. Using this scheme, data that was stored last should be the one to be extracted first. This also means that in order to gain access to the first data, all the other data that was stored before this first data must first be retrieved and extracted.",
What is a queue?,"A queue is a data structure that can simulate a list or stream of data. In this structure, new elements are inserted at one end, and existing elements are removed from the other end.",
What are binary trees?,"A binary tree is one type of data structure that has two nodes, a left node, and a right node. In programming, binary trees are an extension of the linked list structures.",
Which data structures are applied when dealing with a recursive function?,"Recursion, is a function that calls itself based on a terminating condition, makes use of the stack. Using LIFO, a call to a recursive function saves the return address so that it knows how to return to the calling function after the call terminates.",
What is a stack?,"A stack is a data structure in which only the top element can be accessed. As data is stored in the stack, each data is pushed downward, leaving the most recently added data on top.",
Explain Binary Search Tree,"A binary search tree stores data in such a way that they can be retrieved very efficiently. The left subtree contains nodes whose keys are less than the nodeâ€™s key value, while the right subtree contains nodes whose keys are greater than or equal to the nodeâ€™s key value. Moreover, both subtrees are also binary search trees.",
What are multidimensional arrays?,"Multidimensional arrays make use of multiple indexes to store data. It is useful when storing data that cannot be represented using single dimensional indexing, such as data representation in a board game, tables with data stored in more than one column.",
Are linked lists considered linear or non-linear data structures?,"It depends on where you intend to apply linked lists. If you based it on storage, a linked list is considered non-linear. On the other hand, if you based it on access strategies, then a linked list is considered linear.",
How does dynamic memory allocation help in managing data?,"Apart from being able to store simple structured data types, dynamic memory allocation can combine separately allocated structured blocks to form composite structures that expand and contract as needed.",
What is FIFO?,"FIFO stands for First-in, First-out, and is used to represent how data is accessed in a queue. Data has been inserted into the queue list the longest is the one that is removed first.",
What is an ordered list?,"An ordered list is a list in which each nodeâ€™s position in the list is determined by the value of its key component, so that the key values form an increasing sequence, as the list is traversed.",
What is merge sort?,"Merge sort, is a  divide-and-conquer approach for sorting the data. In a sequence of data, adjacent ones are merged and sorted to create bigger sorted lists. These sorted lists are then merged again to form an even bigger sorted list, which continues until you have one single sorted list.",
Differentiate NULL and VOID,"Null is a value, whereas Void is a data type identifier. A variable that is given a Null value indicates an empty value. The void is used to identify pointers as having no initial size.",
What is the primary advantage of a linked list?,A linked list is an ideal data structure because it can be modified easily. This means that editing a linked list works regardless of how many elements are in the list.,
What is the difference between a PUSH and a POP?,"Pushing and popping applies to the way data is stored and retrieved in a stack. A push denotes data being added to it, meaning data is being â€œpushedâ€ into the stack. On the other hand, a pop denotes data retrieval, and in particular, refers to the topmost data being accessed.",
What is a linear search?,"A linear search refers to the way a target key is being searched in a sequential data structure. In this method, each element in the list is checked and compared against the target key. The process is repeated until found or if the end of the file has been reached.",
How does variable declaration affect memory allocation?,"The amount of memory to be allocated or reserved would depend on the data type of the variable being declared. For example, if a variable is declared to be of integer type, then 32 bits of memory storage will be reserved for that variable.",
What is the advantage of the heap over a stack?,"The heap is more flexible than the stack. Thatâ€™s because memory space for the heap can be dynamically allocated and de-allocated as needed. However, the memory of the heap can at times be slower when compared to that stack.",
What is a postfix expression?,A postfix expression is an expression in which each operator follows its operands. The advantage of this form is that there is no need to group sub-expressions in parentheses or to consider operator precedence.,
What is Data abstraction?,Data abstraction is a powerful tool for breaking down complex data problems into manageable chunks. This is applied by initially specifying the data objects involved and the operations to be performed on these data objects without being overly concerned with how the data objects will be represented and stored in memory.,
How do you insert a new item in a binary search tree?,"Assuming that the data to be inserted is a unique value (that is, not an existing entry in the tree), check first if the tree is empty. If itâ€™s empty, just insert the new item in the root node. If itâ€™s not empty, refer to the new itemâ€™s key. If itâ€™s smaller than the rootâ€™s key, insert it into the rootâ€™s left subtree, otherwise, insert it into the rootâ€™s right subtree.",
How does a selection sort work for an array?,"The selection sort is a fairly intuitive sorting algorithm, though not necessarily efficient. In this process, the smallest element is first located and switched with the element at subscript zero, thereby placing the smallest element in the first position.The smallest element remaining in the subarray is then located next to subscripts 1 through n-1 and switched with the element at subscript 1, thereby placing the second smallest element in the second position. The steps are repeated in the same manner till the last element.",
How do signed and unsigned numbers affect memory?,"In the case of signed numbers, the first bit is used to indicate whether positive or negative, which leaves you with one bit short. With unsigned numbers, you have all bits available for that number. The effect is best seen in the number range (an unsigned 8-bit number has a range 0-255, while the 8-bit signed number has a range -128 to +127.",
What is the minimum number of nodes that a binary tree can have?,"A binary tree can have a minimum of zero nodes, which occurs when the nodes have NULL values. Furthermore, a binary tree can also have 1 or 2 nodes.",
What are dynamic data structures?,Dynamic data structures are structures that expand and contract as a program runs. It provides a flexible means of manipulating data because it can adjust according to the size of the data.,
In what data structures are pointers applied?,"Pointers that are used in linked list have various applications in the data structure. Data structures that make use of this concept include the Stack, Queue, Linked List and Binary Tree.",
Do all declaration statements result in a fixed reservation in memory?,"Most declarations do, with the exemption of pointers. Pointer declaration does not allocate memory for data, but for the address of the pointer variable. Actual memory allocation for the data comes during run-time.",
What are ARRAYs?,"When dealing with arrays, data is stored and retrieved using an index that refers to the element number in the data sequence. This means that data can be accessed in any order. In programming, an array is declared as a variable having a number of indexed elements.",
What is the minimum number of queues needed when implementing a priority queue?,The minimum number of queues needed in this case is two. One queue is intended for sorting priorities while the other queue is used for actual storage of data.,
Which sorting algorithm is considered the fastest?,"There are many types of sorting algorithms: quick sort, bubble sort, balloon sort, radix sort, merge sort, etc. Not one can be considered the fastest because each algorithm is designed for a particular data structure and data set. It would depend on the data set that you would want to sort.",
Differentiate STACK from ARRAY.,"Stack follows a LIFO pattern. It means that data access follows a sequence wherein the last data to be stored when the first one to be extracted. Arrays, on the other hand, does not follow a particular order and instead can be accessed by referring to the indexed element within the array.",
Give a basic algorithm for searching a binary search tree.,"1.if the tree is empty, then the target is not in the tree, end search. 2. if the tree is not empty, the target is in the tree. 3. check if the target is in the root item. 4. if a target is not in the root item, check if a target is smaller than the rootâ€™s value. 5. if a target is smaller than the rootâ€™s value, search the left subtree.6. else, search the right subtree.",
What is a dequeue?,A dequeue is a double-ended queue. This is a structure wherein elements can be inserted or removed from either end.,
What is a bubble sort and how do you perform it?,"A bubble sort is one sorting technique that can be applied to data structures such as an array. It works by comparing adjacent elements and exchanges their values if they are out of order. This method lets the smaller values â€œbubbleâ€ to the top of the list, while the larger value sinks to the bottom.",
What are the parts of a linked list?,A linked list typically has two parts: the head and the tail. Between the head and tail lie the actual nodes. All these nodes are linked sequentially.,
How does selection sort work?,Selection sort works by picking the smallest number from the list and placing it at the front. This process is repeated for the second position towards the end of the list. It is the simplest sort algorithm.,
What is a graph?,A graph is one type of data structure that contains a set of ordered pairs. These ordered pairs are also referred to as edges or arcs and are used to connect nodes where data can be stored and retrieved.,
Differentiate linear from a nonlinear data structure.,"The linear data structure is a structure wherein data elements are adjacent to each other. Examples of linear data structure include arrays, linked lists, stacks, and queues. On the other hand, a non-linear data structure is a structure wherein each data element can connect to more than two adjacent data elements. Examples of nonlinear data structure include trees and graphs.",
What is an AVL tree?,An AVL tree is a type of binary search tree that is always in a state of partially balanced. The balance is measured as a difference between the heights of the subtrees from the root. This self-balancing tree was known to be the first data structure to be designed as such.,
What are doubly linked lists?,"Doubly linked lists are a special type of linked list wherein traversal across the data elements can be done in both directions. This is made possible by having two links in every node, one that links to the next node and another one that connects to the previous node.",
What is Huffmanâ€™s algorithm?,Huffmanâ€™s algorithm is used for creating extended binary trees that have minimum weighted path lengths from the given weights. It makes use of a table that contains the frequency of occurrence for each data element.,
What is Fibonacci search?,Fibonacci search is a search algorithm that applies to a sorted array. It makes use of a divide-and-conquer approach that can significantly reduce the time needed in order to reach the target element.,
Briefly explain recursive algorithm.,"Recursive algorithm targets a problem by dividing it into smaller, manageable sub-problems. The output of one recursion after processing one sub-problem becomes the input to the next recursive process.",
How do you search for a target key in a linked list?,"To find the target key in a linked list, you have to apply sequential search. Each node is traversed and compared with the target key, and if it is different, then it follows the link to the next node. This traversal continues until either the target key is found or if the last node is reached.",
What is Data Structure? Explain.,"The data structure is a way that specifies how to organize and manipulate the data. It also defines the relationship between them. Some examples of Data Structures are arrays, Linked List, Stack, Queue, etc. Data Structures are the central part of many computer science algorithms as they enable the programmers to handle the data in an efficient way",
Describe the types of Data Structures?,"Data Structures are mainly classified into two types:Linear Data Structure: A data structure is called linear if all of its elements are arranged in the sequential order. In linear data structures, the elements are stored in a non-hierarchical way where each item has the successors and predecessors except the first and last element.Non-Linear Data Structure: The Non-linear data structure does not form a sequence i.e. each item or element is connected with two or more other items in a non-linear arrangement. The data elements are not arranged in the sequential structure.",
List the area of applications of Data Structure.,"Data structures are applied extensively in the following areas of computer science: Compiler Design, Operating System, Database Management System, Statistical analysis package, Numerical Analysis, Graphics, Artificial Intelligence and Simulation.",
What is the difference between file structure and storage structure?,Difference between file structure and storage structure:The main difference between file structure and storage structure is based on memory area that is being accessed. Storage structure: It is the representation of the data structure in the computer memory. File structure: It is the representation of the storage structure in the auxiliary memory.,
"List the data structures which are used in RDBMS, Network Data Modal, and Hierarchical Data Model.","RDBMS uses Array data structure, Network data model uses Graph and Hierarchal data model uses Trees.",
Which data structure is used to perform recursion?,Stack data structure is used in recursion due to its last in first out nature. Operating system maintains the stack in order to save the iteration variables at each function call ,
What is a Stack?,"Stack is an ordered list in which, insertion and deletion can be performed only at one end that is called the top. It is a recursive data structure having pointer to its top element.The stack is sometimes called as Last-In-First-Out (LIFO) list i.e. the element which is inserted first in the stack will be deleted last from the stack.",
List the area of applications where stack data structure can be used?,"Expression evaluation, Backtracking, Memory Management, Function calling and return.",
What are the operations that can be performed on a stack?,"Push Operations, Pop Operations and Peek Operations.",
Write the stack overflow condition.,Overflow occurs when top = Maxsize -1.,
What is the difference between PUSH and POP?,"PUSH and POP operations specify how data is stored and retrieved in a stack.PUSH: PUSH specifies that data is being ""inserted"" into the stack. POP: POP specifies data retrieval. It means that data is being deleted from the stack.",
Write the steps involved in the insertion and deletion of an element in the stack.,Push:Increment the variable top so that it can refer to the next memory allocation.Copy the item to the at the array index value equal to the top.Repeat step 1 and 2 until stack overflows. Pop:Store the topmost element into the an another variable.Decrement the value of the top.Return the topmost element.,
What is a postfix expression?,"An expression in which operators follow the operands is known as postfix expression. The main benefit of this form is that there is no need to group sub-expressions in parentheses or to consider operator precedence.The expression ""a + b"" will be represented as ""ab+"" in postfix notation.",
Write the postfix form of the expression: (A + B) * (C - D) ,AB+CD-*.,
Which notations are used in Evaluation of Arithmetic Expressions using prefix and postfix forms?,Polish and Reverse Polish notations.,
What is an array? ,Arrays are defined as the collection of similar types of data items stored at contiguous memory locations. It is the simplest data structure in which each data element can be randomly accessed by using its index number. ,
How to reference all the elements in a one-dimension array?,"It can be done by using an indexed loop such that the counter runs from 0 to the array size minus one. In this manner, you can reference all the elements in sequence by using the loop counter as the array subscript.",
What is a multidimensional array?,"The multidimensional array can be defined as the array of arrays in which, the data is stored in tabular form consists of rows and columns. 2D arrays are created to implement a relational database lookalike data structure. It provides ease of holding the bulk of data at once which can be passed to any number of functions wherever required.",
How are the elements of a 2D array are stored in the memory?,"There are two techniques by using which, the elements of a 2D array can be stored in the memory.Row-Major Order: In row-major ordering, all the rows of the 2D array are stored into the memory contiguously. First, the 1st row of the array is stored into the memory completely, then the 2nd row of the array is stored into the memory completely and so on till the last row.Column-Major Order: In column-major ordering, all the columns of the 2D array are stored into the memory contiguously. first, the 1st column of the array is stored into the memory completely, then the 2nd row of the array is stored into the memory completely and so on till the last column of the array.",
"Calculate the address of a random element present in a 2D array, given base address as BA.","Row-Major Order: If array is declared as a[m][n] where m is the number of rows while n is the number of columns, then address of an element a[i][j] of the array stored in row major order is calculated as : Address(a[i][j]) = B. A. + (i * n + j) * size. Column-Major Order: If array is declared as a[m][n] where m is the number of rows while n is the number of columns, then address of an element a[i][j] of the array stored in column major order is calculated as: Address(a[i][j]) = ((j*m)+i)*Size + BA.",
Define Linked List Data structure.,"Linked List is the collection of randomly stored data objects called nodes. In Linked List, each node is linked to its adjacent node through a pointer. A node contains two fields, i.e. Data Field and Link Field.",
Are linked lists considered linear or non-linear data structures?,"A linked list is considered both linear and non-linear data structure depending upon the situation.On the basis of data storage, it is considered as a non-linear data structure.On the basis of the access strategy, it is considered as a linear data-structure.",
What are the advantages of Linked List over an array?,"The size of a linked list can be incremented at runtime which is impossible in the case of the array.The List is not required to be contiguously present in the main memory, if the contiguous space is not available, the nodes can be stored anywhere in the memory connected through the links.The List is dynamically stored in the main memory and grows as per the program demand while the array is statically stored in the main memory, size of which must be declared at compile time.The number of elements in the linked list are limited to the available memory space while the number of elements in the array is limited to the size of an array.",
"If you are using C language to implement the heterogeneous linked list, what pointer type should be used?","The heterogeneous linked list contains different data types, so it is not possible to use ordinary pointers for this. For this purpose, you have to use a generic pointer type like void pointer because the void pointer is capable of storing a pointer to any type.",
What is doubly linked list?,"The doubly linked list is a complex type of linked list in which a node contains a pointer to the previous as well as the next node in the sequence. In a doubly linked list, a node consists of three parts: node data.pointer to the next node in sequence (next pointer).pointer to the previous node (previous pointer). ",
Define the queue data structure.,A queue can be defined as an ordered list which enables insert operations to be performed at one end called REAR and delete operations to be performed at another end called FRONT.,
List some applications of queue data structure.,"The Applications of the queue is given as follows:Queues are widely used as waiting lists for a single shared resource like a printer, disk, CPU.Queues are used in the asynchronous transfer of data (where data is not being transferred at the same rate between two processes) for eg. pipes, file IO, sockets.Queues are used as buffers in most of the applications like MP3 media player, CD player, etc.Queues are used to maintain the playlist in media players to add and remove the songs from the play-list.Queues are used in operating systems for handling interrupts.",
What are the drawbacks of array implementation of Queue?,"Memory Wastage: The space of the array, which is used to store queue elements, can never be reused to store the elements of that queue because the elements can only be inserted at front end and the value of front might be so high so that, all the space before that, can never be filled.Array Size: There might be situations in which, we may need to extend the queue to insert more elements if we use an array to implement queue, It will almost be impossible to extend the array size, therefore deciding the correct array size is always a problem in array implementation of queue.",
What are the scenarios in which an element can be inserted into the circular queue?,"If (rear + 1)%maxsize = front, the queue is full. In that case, overflow occurs and therefore, insertion can not be performed in the queue.If rear != max - 1, the rear will be incremented to the mod(maxsize) and the new value will be inserted at the rear end of the queue.If front != 0 and rear = max - 1, it means that queue is not full therefore, set the value of rear to 0 and insert the new element there.",
What is a dequeue?,"Dequeue (also known as double-ended queue) can be defined as an ordered set of elements in which the insertion and deletion can be performed at both the ends, i.e. front and rear.",
What is the minimum number of queues that can be used to implement a priority queue?,"Two queues are needed. One queue is used to store the data elements, and another is used for storing priorities.",
Define the tree data structure.,The Tree is a recursive data structure containing the set of one or more data nodes where one node is designated as the root of the tree while the remaining nodes are called as the children of the root. The nodes other than the root node are partitioned into the nonempty sets where each one of them is to be called sub-tree.,
List the types of tree.,"There are six types of tree given as follows.General Tree, Forests, Binary Tree, Binary Search Tree, Expression Tree and Tournament Tree.",
What are Binary trees?,"A binary Tree is a special type of generic tree in which, each node can have at most two children. Binary tree is generally partitioned into three disjoint subsets, i.e. the root of the node, left sub-tree and Right binary sub-tree. ",
Which data structure suits the most in the tree construction?,Queue data structure,
How can AVL Tree be useful in all the operations as compared to Binary search tree?,"AVL tree controls the height of the binary search tree by not letting it be skewed. The time taken for all operations in a binary search tree of height h is O(h). However, it can be extended to O(n) if the BST becomes skewed (i.e. worst case). By limiting this height to log n, AVL tree imposes an upper bound on each operation to be O(log n) where n is the number of nodes.",
State the properties of B Tree.,"A B tree of order m contains all the properties of an M way tree. In addition, it contains the following properties.Every node in a B-Tree contains at most m children.Every node in a B-Tree except the root node and the leaf node contain at least m/2 children.The root nodes must have at least 2 nodes.All leaf nodes must be at the same level.",
What are the differences between B tree and B+ tree?,In B Tree search keys cannot repeatedly be stored.In B+ Tree redundant search keys can be present.In B Tree data can be stored in leaf nodes as well as internal nodesIn B+ Tree data can only be stored on the leaf nodes. In B Tree searching for some data is a slower process since data can be found on internal nodes as well as on the leaf nodes.In B+ Tree searching is comparatively faster as data can only be found on the leaf nodes.In B Tree deletion of internal nodes is so complicated and time-consuming.In B+ Tree deletion will never be a complexed process since element will always be deleted from the leaf nodes. In B Tree leaf nodes cannot be linked together.In B+ Tree leaf nodes are linked together to make the search operations more efficient.,
List some applications of Tree-data structure?,"Applications of Tree- data structure: The manipulation of Arithmetic expression, Symbol Table construction, Syntax analysis and Hierarchal data model.",
Define the graph data structure? ,"A graph G can be defined as an ordered set G(V, E) where V(G) represents the set of vertices and E(G) represents the set of edges which are used to connect these vertices. A graph can be seen as a cyclic tree, where the vertices (Nodes) maintain any complex relationship among them instead of having parent-child relations.",
"Differentiate among cycle, path, and circuit? ",Path: A Path is the sequence of adjacent vertices connected by the edges with no restrictions. Cycle: A Cycle can be defined as the closed path where the initial vertex is identical to the end vertex. Any vertex in the path can not be visited twice. Circuit: A Circuit can be defined as the closed path where the intial vertex is identical to the end vertex. Any vertex may be repeated.,
Mention the data structures which are used in graph implementation.,"For the graph implementation, following data structures are used. In sequential representation, Adjacency matrix is used.In Linked representation, Adjacency list is used.",
Which data structures are used in BFS and DFS algorithm?,"In BFS algorithm, Queue data structure is used.In DFS algorithm, Stack data structure is used.",
What are the applications of Graph data structure?,The graph has the following applications: Graphs are used in circuit networks where points of connection are drawn as vertices and component wires become the edges of the graph. Graphs are used in transport networks where stations are drawn as vertices and routes become the edges of the graph. Graphs are used in maps that draw cities/states/regions as vertices and adjacency relations as edges. Graphs are used in program flow analysis where procedures or modules are treated as vertices and calls to these procedures are drawn as edges of the graph.,
"In what scenario, Binary Search can be used?",Binary Search algorithm is used to search an already sorted list. The algorithm follows divide and conqer approach.,
What are the advantages of Binary search over linear search?,"There are relatively less number of comparisons in binary search than that in linear search. In average case, linear search takes O(n) time to search a list of n elements while Binary search takes O(log n) time to search a list of n elements.",
What are the advantages of Selecetion Sort?,It is simple and easy to implement. It can be used for small data sets.It is 60 per cent more efficient than bubble sort.,
List Some Applications of Multilinked Structures?,"Sparse matrix, Index generation.",
What is the difference between NULL and VOID?,"Null is actually a value, whereas Void is a data type identifier. A null variable simply indicates an empty value, whereas void is used to identify pointers as having no initial size.",
What is the difference between C and C++?,C is a procedure-oriented programming language.C++ is a partially object-oriented programming language.C follows a top-down approach. C++ follows a bottom-up approach.C doesnâ€™t support function or operator overloading.C++ supports function as well as function overloading.C language doesnâ€™t support virtual and friend function.C++ language supports both virtual and friend functions.C language has 32 keywords.C++ language contains 52 keywords.,
What are classes and objects in C++?,"A class is like a blueprint of an object. It is a user-defined data type with data members and member functions and is defined with the keyword class. You define objects as an instance of a class. Once it creates the object, then it can operate on both data members and member functions.",
What are access modifiers?,"You use access modifiers to define accessibility for the class members. It defines how to access the members of the class outside the class scope. There are three types of access modifiers: Private, Public and Protected",
Difference between equal to (==) and assignment operator(=)?,"The equal to operator == checks whether two values are equal or not. If equal, then itâ€™s true; otherwise, it will return false. The assignment operator = allots the value of the right-side expression to the left operand.",
What is the difference between a while loop and a do-while loop?,"The while loop verifies the condition; if itâ€™s true, then it iterates the loop till the condition becomes false. The do-while loop first iterates the loop body once, then it checks for the condition.If the condition is false in a while loop, then not a single statement will execute inside the loop. If the condition in a do-while loop is false, then the body will also execute once.",
What is the size of the int data type?,"4 bytes, the integer data type is 4 bytes.",
Which operator cannot be overloaded?,?: operator cannot be overloaded because it is not syntactically possible.,
What is used to return the number of characters in the string?,Both size and length are used to return the number of characters in the string.,
Discuss the difference between prefix and postfix?,"In prefix (++i), first, it increments the value, and then it assigns the value to the expression. In postfix (i++), it assigns the value to the expression, and then it increments the variable's value.Â ",
Can you compile a program without the main function?,"Yes, you can compile a program without the main function, but you cannot run or execute the program because the main() function is the entry point, from where all the execution begins. And without the entry point, then you can execute the program.",
What is std in C++?,std is a standard namespace in C++.,
What are the four different data types in C++?,"Primitive/Basic: Char, int, short, float, double, long, bool, etc. Derived: Array, pointer, etc. Enumeration: Enum. User-defined: Structure, class, etc.",
How is struct different from class?,Structure's members are public by default.Class's members are private by default.The default access specifiers are public when deriving a struct from a class/struct.Â The default access specifiers are private when deriving a class.Â ,
What do you understand about polymorphism in C++?,"The term polymorphism refers to the presence of multiple forms. Polymorphism usually occurs when there is a hierarchy of classes that are linked by inheritance. C++ polymorphism means that depending on the type of object that invokes the function, a different function will be executed.",
Compare compile time and runtime polymorphism.,The method to be executed is known at compile time. And the call is resolved by the compiler.The method to be executed is known at run time. The compiler does not resolve the call.Compile-time Polymorphism provides quicker execution because it is known at the compile time.Runtime Polymorphism pprovides slower execution because it is known at the run time.Compile-time Polymorphism is achieved by operation or function overloading.Runtime Polymorphism is achieved by function overriding.Â ,
What is a constructor in C++?,"In C++, a function Object is a particular ""MEMBER FUNCTION"" that shares the same title as the class it belongs to and is used to initialize specific values to an object's data members.Â ",
What is a virtual function?,"A member function in the base class redefined in a derived class is a virtual function. It is declared using the virtual keyword. It ensures that the correct function is called for an object, irrespective of the type of reference/pointer used for the function call. Virtual functions are mainly used for runtime polymorphism.Â Â ",
What do you understand about friend class and friend function?,"Like a friend function, a friend class can access personal and guarded variables of the type in which it is declared. All member functions for classes specified as friends to another class are friend functions for the friend class.",
What are the three different types of C++ access specifiers?,Public: All member functions and data members are accessible outside the class. Protected: All member functions and data members are accessible within the class and to the derived class. Private: All member functions and data members cannot be accessed outside the class.Â ,
What is an abstraction in C++?,Abstraction means displaying the essential details to the user while hiding the irrelevant or particular details that you donâ€™t want to show to a user. It is of two types: Control abstraction and Data abstraction,
What are destructors in C++?,A destructor member function is instantly called when an object exits its scope or is specifically deleted by a call to delete.,
Is it possible to overload a deconstructor? Give reasons for your answer.ï¿½,"No, it is impossible as destructors do not take arguments or return anything. There has to be only one empty destructor per class. It should have a void parameter list.Â Â ",
What is an abstract class? When is it used?ï¿½,An abstract class is a class whose objects cannot be created. It serves as a parent for the derived classes. Placing a pure virtual function in the class makes it an abstract class.Â ,
What do you understand about static members and static member functions?,"A variable in a class declared as static has its space allocated for the lifetime of the program. Regardless of the number of objects of that class created, there is only a single copy of the static member. The same static member is accessible to all the objects of that class. A static member function can be called even if no class objects exist. It is accessed using only the class name and the scope resolution operator (::).Â Â ",
What is the C++ OOPs concept?,OOPs concept in C++:Object: Anything that exists physically in the real world is called an object. Class: The collection of objects is called class. Inheritance: Properties of parent class inherited into child class is known as inheritance. Polymorphism: It is the ability to exist in more than one form. Encapsulation: Binding of code and data together into a single unit. Abstraction: Hiding internal details and showing functionality to the user.,
When is void() return type used?,You use the void() return type when you donâ€™t want to return any value. It specifies that the function doesnâ€™t return a value. A function with a void return type completes its task and then returns the control to the caller.,
What is call by value and call by reference in C++?,"In the call by value method, you pass the copies of actual parameters to the function's formal parameters. This means if there is any change in the values inside the function, then that change will not affect the actual values. In the call-by-reference method, the reference or address of actual parameters is sent to the function's formal parameters. This means any change in values inside the function will be reflected in the actual values.",
What is an inline function?,"An inline function when called expands in line. When you call this function, the whole code of the inline function gets inserted or substituted at the inline function call.",
What are pointers in C++?,Pointers are the variables that store the memory address of another variable. The type of the variable must correspond with the type of pointer. Syntax: type *name,
What is a scope resolution operator?,A scope resolution operator is represented as ::.This operator is used to associate function definition to a particular class. The scope operator is used for the following purposes:To access a global variable when you have a local variable with the same name. To define a function outside the class.,
What is a constructor?,"A constructor is defined as a member function that is invoked whenever you create an object; it has the same name as that of the class. There are two types of constructors: Default constructor: This auto-generated constructor doesnâ€™t take any arguments. Parameterized constructor: In this constructor, it can pass arguments.",
Define operator overloading and function overloading.,An example of compile-time polymorphism is operator overloading. It is the concept of modifying an existing C++ operator without altering its original meaning.Â ,
Discuss the difference between new and malloc,new is an operator. malloc() is a function.It calls the constructor.The malloc function doesnâ€™t call the constructor.There is no need to specify memory size while using new().You have to specify the memory size.new operator can be overloaded.malloc() can never be overloaded.,
What is operator overloading?,"Operator overloading is a mechanism in which a special meaning is given to an operator. For example, you can overload the â€˜+â€™ operator in a class-like string to concatenate two strings by only using â€˜+.â€™",
What is used to return the number of characters in the string?,Both size and length are used to return the number of characters in the string,
What is a friend function?,"You can define a friend function as a function that can access private, public and protect members of the class. You declare the friend function with the help of the friend keyword. You declare this function inside the class.",
What gives the size of object or type?,The sizeof operator is used to give the size of object or type,
Which of the following is not a member of a class?,"Among the following, friend function is not a member of the class",
What is STL?,"STL stands for standard template library. It is a library of container templates that provide generic classes and functions.STL components are containers, algorithms, iterators, and function objects.",
What is a copy constructor?,"A copy function is a member function that uses another object from the same class to initialize a new thing. A copy function is, to put it simply, a function that produces an object by initializing it with a different object of the same class that has already been constructed.",
What is inheritance?,Inheritance is the mechanism in which you can create a new class i.e. child class from the existing class i.e. parent class. This child class is also known as a derived class and the parent class is also called Base class.Â ,
What should be the correct statement about string objects in C++?,String objects have a dynamic size.,
How is a shallow copy different from a deep copy?,Shallow Copy stores the references of objects to the original memory address.Deep Copy makes a fresh and separate copy of an entire object and its unique memory address.Shallow Copy is Faster.Deep Copy is Comparatively slower.Shallow copy It reflects changes made to the new/copied object in the original object.Deep Copy doesnâ€™t reflect changes made to the new/copied object in the original object.,
How are virtual functions different from pure virtual functions?,"A virtual function is a base class member function that a derived class can modify. A member function of a base class that is a pure virtual function must be defined in the derived type; otherwise, the derived class will become abstract as well.",
"Class D is derived from a base class B. If creating an object of type D, what order will the constructors of these classes get called?","The derived class consists of two parts: the base part and the derived part. C++ constructs derived objects in phases. The process begins with constructing the most-base class (at the top of the inheritance tree), followed by each child class construction in order, and then the most-child class. Thus, first, the Constructor of class B will be called, and then the constructor of class D.Â ",
Can a virtual function be called from a constructor?,"A virtual process may be called a function Object, but exercise caution. It might perform differently than expected. The virtual call mechanism in a function Object is disabled since overriding from derived classes hasn't happened yet. Building blocks are used to create objects, ""base before derived.""",
What is this pointer in C++?,"A class, struct, or union form only has access to this pointer within non-static member variables. The arrow shows the object for which the member function is called.Â ",
How would you deallocate and allocate memory in C++?,"The heap is used in C to allocate dynamic memory, and these functions are part of the standard library. Malloc() and free are the two important dynamic memory operations (). The size of the desired memory area in bytes is the only parameter accepted by the malloc() function.Â ",
What is the difference between OOP and SOP?,Object-Oriented Programming is a type of programming which is based on objects rather than just functions and procedures. Structual programming Provides logical structure to a program where programs are divided functionsBottom-up approachTop-down approachProvides data hidingDoes not provide data hidingCan solve problems of any complexityCan solve moderate problemsCode can be reused thereby reducing redundancyDoes not support code reusability,
What is Object Oriented Programming?,"Object-Oriented Programming(OOPs) is a type of programming that is based on objects rather than just functions and procedures. Individual objects are grouped into classes. OOPs implements real-world entities like inheritance, polymorphism, hiding, etc into programming. It also allows binding data and code together.",
Why use OOPs?,"OOPs allows clarity in programming thereby allowing simplicity in solving complex problems. Code can be reused through inheritance thereby reducing redundancy. Data and code are bound together by encapsulation. OOPs allows data hiding, therefore, private data is kept confidential. Problems can be divided into different parts making it simple to solve. The concept of polymorphism gives flexibility to the program by allowing the entities to have multiple forms.",
What are the main features of OOPs?,"Inheritance, Encapsulation, Polymorphism and Data Abstraction.",
What is an object?,"An object is a real-world entity which is the basic unit of OOPs for example chair, cat, dog, etc. Different objects have different states or attributes, and behaviors.",
What is a class?,A class is a prototype that consists of objects in different states and with different behaviors. It hasÂ a number of methods that are common the objects present within that class.,
What is the difference between a class and a structure?,Class: User-defined blueprint from which objects are created. It consists of methods or set of instructions that are to be performed on the objects.Structure: A structure is basically a user-defined collection of variables which are of different data types.,
Can you call the base class method without creating an instance?,"Yes, you can call the base class without instantiating it if: It is a static method. The base class is inherited by some other subclass.",
What is the difference between a class and an object?,A real-world entity which is an instance of a class. A class is basically a template or a blueprint within which objects can be created. An object acts like a variable of the class. Binds methods and data together into a single unit. An object is a physical entity. A class is a logical entity. Objects take memory space when they are created. A class does not take memory space when created. Objects can be declared as and when required. Classes are declared just once.,
What is inheritance?,"Inheritance is a feature of OOPs which allows classes inherit common properties from other classes. For example, if there is a class such as â€˜vehicleâ€™, other classes like â€˜carâ€™, â€˜bikeâ€™, etc can inherit common properties from the vehicle class. This property helps you get rid of redundant code thereby reducing the overall size of the code.",
What are the different types of inheritance?,"Single inheritance, MultipleÂ inheritance, MultilevelÂ inheritance, HierarchicalÂ inheritance and  Hybrid inheritance.",
What is the difference between multiple and multilevel inheritance?,Multiple inheritance comes into picture when a class inherits more than one base class. Multilevel inheritance means a class inherits from another class which itself is a subclass of some other base class. Example: A class defining a child inherits from two base classes Mother and Father.Example: A class describing a sports car will inherit from a base class Car which inturn inherits another class Vehicle.,
What is hybrid inheritance?,Hybrid inheritance is a combination of multiple and multi-level inheritance.,
What is hierarchical inheritance?,"Hierarchical inheritance refers to inheritance where one base class has more than one subclasses. For example, the vehicle class can have â€˜carâ€™, â€˜bikeâ€™, etc as its subclasses.",
What are the limitations of inheritance?,Increases the time and effort required to execute a program as it requires jumping back and forth between different classes. The parent class and the child class get tightly coupled. Any modifications to the program would require changes both in the parent as well as the child class. Needs careful implementation else would lead to incorrect results.,
What is a superclass?,"A superclass or base class is a class that acts as a parent to some other class or classes. For example, the Vehicle class is a superclass of class Car.",
What is a subclass?,"A class that inherits from another class is called the subclass. For example, the class Car is a subclass or a derived of Vehicle class.",
What is polymorphism?,"Polymorphism refers to the ability to exist in multiple forms. Multiple definitions can be given to a single interface. For example, if you have a class named Vehicle, it can have a method named speed but you cannot define it because different vehicles have different speed. This method will be defined in the subclasses with different definitions for different vehicles.",
What is static polymorphism?,Static polymorphism (static binding) is a kind of polymorphism that occurs at compile time. An example of compile-time polymorphism is method overloading.,
What is dynamic polymorphism?,Runtime polymorphism or dynamic polymorphism (dynamic binding) is a type of polymorphism which is resolved during runtime. An example of runtime polymorphism is method overriding.,
What is method overloading?,Method overloading is a feature of OOPs which makes it possible to give the same name to more than one methods within a class if the arguments passed differ.,
What is method overriding?,"Method overriding is a feature of OOPs by which the child class or the subclass can redefine methods present in the base class or parent class. Here, the method that is overridden has the same name as well as the signature meaning the arguments passed and the return type.",
What is operator overloading?,Operator overloading refers to implementing operators using user-defined types based on the arguments passed along with it.,
Differentiate between overloading and overriding.,In Overloading Overriding Two or more methods having the same name but different parameters or signature. In Overriding Child class redefining methods present in the base class with the same parameters/ signature. Resolved during compile-time. Resolved during runtime.,
What is encapsulation?,"Encapsulation refers to binding the data and the code that works on that together in a single unit. For example, a class. Encapsulation also allows data-hiding as the data specified in one class is hidden from other classes.",
What are access specifiers?,"Access specifiers or access modifiers are keywords that determine the accessibility of methods, classes, etc in OOPs. These access specifiers allow the implementation of encapsulation. The most common access specifiers are public, private and protected. However, there are a few more which are specific to the programming languages.",
What is data abstraction?,"Data abstraction is a very important feature of OOPs that allows displaying only the important information and hiding the implementation details. For example, while riding a bike, you know that if you raise the accelerator, the speed will increase, but you donâ€™t know how it actually happens. This is data abstraction as the implementation details are hidden from the rider.",
How to achieve data abstraction?,Data abstraction can be achieved through: Abstract class and Abstract method.,
What is an abstract class?,"An abstract class is a class that consists of abstract methods. These methods are basically declared but not defined. If these methods are to be used in some subclass, they need to be exclusively defined in the subclass.",
Can you create an instance of an abstract class?,"No. Instances of an abstract class cannot be created because it does not have a complete implementation. However, instances of subclass inheriting the abstract class can be created.",
What is an interface?,"It is a concept of OOPs that allows you to declare methods without defining them. Interfaces, unlike classes, are not blueprints because they do not contain detailed instructions or actions to be performed. Any class that implements an interface defines the methods of the interface.",
Differentiate between data abstraction and encapsulation.,Data abstraction Solves the problem at the design level. Encapsulation solves the problem at the implementation level. Data abstraction allows showing important aspects while hiding implementation details.Encapsulation Binds code and data together into a single unit and hides it from the world.,
What are virtual functions?,Virtual functions are functions that are present in the parent class and are overridden by the subclass. These functions are used to achieve runtime polymorphism.,
What are pure virtual functions?,Pure virtual functions or abstract functions are functions that are only declared in the base class. This means that they do not contain any definition in the base class and need to be redefined in the subclass.,
What is a constructor?,A constructor is a special type of method that has the same name as the class and is used to initialize objects of that class.,
What is a destructor?,"A destructor is a method that is automatically invoked when an object is destroyed. The destructor also recovers the heap space that was allocated to the destroyed object, closes the files and database connections of the object, etc.",
Types of constructors,"Types of constructors differ from language to language. However, all the possible constructors are: Default constructor, Parameterized constructor, Copy constructor, Static constructor and Private constructor.",
What is a copy constructor?,A copy constructor creates objects by copying variables from another object of the same class. The main aim of a copy constructor is to create a new object from an existing one.,
What is the use of finalize?,Finalize as an object method used to free up unmanaged resources and cleanup before Garbage Collection(GC). It performs memory management tasks.,
What is Garbage Collection(GC)?,GC is an implementation of automatic memory management. The Garbage collector frees up space occupied by objects that are no longer in existence.,
Differentiate between a class and a method.,"A class is basically a template that binds the code and data together into a single unit. Classes consist of methods, variables, etc. Callable set of instructions also called a procedure or function that are to be performed on the given data.",
What is a final variable?,A variable whose value does not change. It always refers to the same object by the property of non-transversity.,
What is an exception?,An exception is a kind of notification that interrupts the normal execution of a program. Exceptions provide a pattern to the error and transfer the error to the exception handler to resolve it. The state of the program is saved as soon as an exception is raised.,
What is exception handling?,Exception handling in Object-Oriented Programming is a very important concept that is used to manage errors. An exception handler allows errors to be thrown and caught and implements a centralized mechanism to resolve them.,
What is the difference between an error and an exception?,Errors are problems that should not be encountered by applications. Conditions that an application might try to catch.,
What is a try/ catch block?,A try/ catch block is used to handle exceptions. The try block defines a set of statements that may lead to an error. The catch block basically catches the exception.,
What is a finally block?,"A finally block consists of code that is used to execute important code such as closing a connection, etc. This block executes when the try block exits. It also makes sure that finally block executes even in case some unexpected exception is encountered.",
What are the limitations of OOP?,Usually not suitable for small problems. Requires intensive testing. Takes more time to solve the problem. Requires proper planning. The programmer should think of solving a problem in terms of objects.,
What is OOP?,"Object-Oriented Programming is a computer programming methodology/paradigm which is bio-inspired based on objects which constitute its fundamental building blocks as opposed to procedural programming which is based on procedures. OOP main elements: Encapsulation, Abstraction, Inheritance and Polymorphism. The elements of OOP will be explained in details and demonstrated in various parts of this tutorial.",
What is a class?,"The blueprint of an object, it defines (specification and implementation) objectâ€™s states and behaviors.",
Class vs. Struct,"Members (data and functions): class = private by default, struct = public by default. Access-specifier of base class / inheritance: class = private by default, struct = public by default.",
What is an object?,An object is a single instance of a class; it is created by invoking the constructors of the class. Class exists in source temporal scope and objects exist in run-time temporal scope.,
Define abstraction in software in general,"In computing, abstraction means separating concepts from details through a hierarchy of layers. Examples: A bit as an abstraction of a hardware electrical signal. A variable name is an abstraction of a memory location. A data type is an abstraction of a memory representation scheme by a compiler. A function call is an abstraction to the actual detailed code implemented in the body of the function.",
Define data abstraction,Creating a structure that defines a complex data type and legal operations on it. The design makes the interface of the data and operations accessible but hides the actual implementation of them. Example: a List class can choose to implement the container of the data elements as an array or as a linked list. This container is kept hidden from the user interface but public interface is provided to element read/write operations.,
Define process abstraction,"Separating the process (method, procedure, function, subroutine or subprogram) signature/prototype from the detailed actual definition and implementation, so that the user is not concerned with how the process is implemented but rather how to use it. Example: a method is defined to sort a list of elements and can be implemented using insertion sort or selection sort and the only thing the user has to worry about is how to call it.",
What is encapsulation?,It is a mechanism to package the data and its operations inside one structure. It is a data protection mechanism to dictate the way data is accessed (read/write),
What is information hiding?,"The internal representation and implementation of an object is hidden from users. This concept encompasses: data abstraction, process abstraction and encapsulation.",
Define inheritance,A mechanism for code reuse and independent extension of the base class.,
Define polymorphism,"A mechanism that works in hierarchical inheritance where a certain behavior when invoked can have different forms based on the called function of the derived class. Example: a base class Animal defines â€œmoveâ€ and â€œmakeSound â€œ functions ;a derived class Dog redefines the two functions to walk and bark respectively using the same function names in the base class, where as a Bird class redefines the two functions to fly and chirp. Polymorphism requires that functions in base class to be defined as â€œVirtualâ€ so derived classes can redefine them. Virtual functions are bound dynamically at run-time whereas other functions are statically bound at compile time.",
What are accessors ?,"They are the functions in the public interface that provide accessibility to the private data members for â€œreadâ€ operations. Example: see the getX, getY functions in the Point class.",
What are mutators?,"They are the functions in the public interface that provide accessibility to the private data members for â€œwriteâ€ operations. Example: see the setX, setY functions in the Point class.",
How to write inline functions?,"If a function member is defined entirely in the class specification body (typically in .h header file) then, it is considered as an in-line function. Example: see the setZ function in the following example of Point3D class.",
How to do inline functions work?,"In inline functions, there is no function calls, the compiler replace every instance of their calls in the code with the body of the function saving the overhead associated with the function call mechanism. â€œinlineâ€ keyword can be used to specify a function as an inline.",
What is public interface?,Is a set of public functions defined in the â€œpublic:â€ section in the class body. This section provides the data accessibility of read/write operations as well as other service functions. Example: see the â€œpublicâ€ section in Point class. We can add another service function that prints the data members x and y to the stdout as follows:,
What are private functions?,They are functions defined in the â€œprivateâ€ section of the class body where they are only visible to the class itself; They are used when the class needs to some internal functions that the user do not need to know about and they are typically helper functions that help other public functions. Example: suppose that in the Point3D function we need a function that will generate a random id# for the current object and we want to hide this function from the user so whenever a random ID is needed other functions in the class can automatically call this function:,
Define access modifiers,"Private: the section in the class that is only visible to the class it self. Protected: the section in the class that is visible to the class and to its derived classes. Public: the section in the class that is visible to all: class, derived classes and outer world.",
"Define state, data member, attribute, property","They all refer to one thing, that is, the data fields that provide data specification for the class. Example: see the data members defined in the â€œprotected:â€ section below.",
"Define function, method & behavior","They all refer to the same thing, the means of modeling how the object can operate and behave. While data members model states and attributes, functions model actions, operations and behaviors.",
What is class specification?,"The entire class body where every data member declarations, function members prototypes, constructors, accessors mutator prototypes and other elements of class declaration; all of these are typically kept in a header file â€œ.hâ€ apart from the implementation file of the class â€œ.cppâ€.",
What is class implementation?,"It is typically kept in a separate file apart from class specification. In the implementation file, all functions declared in the class specification section/file are defined including the constructors, destructor, accessors, mutators and other service functions.",
Write the simplest class possible that does nothing.,A simple empty class.,
What is an instance of a class?,It is an object instantiated from a class. An instance of a class is created at runtime using one the available constructors. By setting its states/attributes/data members it becomes a specific instant/object of the class.,
Define instantiation,"To create a new instance (object) of a class. Only when you instantiate an object, then you can use it and communicate with it.",
What is a message?,Objects interact with each other using messaging which is simply calling each otherâ€™s functions and receiving/causing the desired response.,
What are constructors?,They are special functions exits in the public section of the class used to instantiate and create new instances/objects of a class. The general characteristics of them include: They do not have a return type. They have the exact name of the class. They must be defined in the public section.,
What are constructor types and their purposes?,"Default constructor: called in two situations, when declaring an object without initialization and when explicitly calling the default constructor function. Overloaded constructor: called when the user wants to create an object and sets some or all of the data members of the class. Copy constructor: called when the user has a previously created object and want to copy it to a new second object by passing the object reference to the copy constructor of the new object.",
What happens if you do not provide any constructor to a class?,The system automatically provides: A default constructor that will create a new instance of the class but with uninitialized data members. A copy constructor that does a shallow copy but not deep copy. See the question on shallow copy.,
What are distinguishing characteristics of default constructors?,No parameters or all defaulted parameters in its signature.,
What are distinguishing characteristics of overloaded constructors?,One or more parameters in its signature.,
What are distinguishing characteristics of copy constructors?,Only one parameter in its signature. The parameter must be of its class type. The parameter must be passed by reference.,
What are destructors?,A destructor is a special function member of a class designed to execute the required code when the object is about to be destroyed. One important task under destructors is the dynamic memory de-allocation.,
"In function members, can the parameter names match the names of the data members?","Yes they can but, the pointer â€œthis->â€ must be used to access the class data members.",
"What is sub, derived, child, inheriting class?","All of these terms refer to the same thing that is, a class that extends and reuses a previously designed class. The old class is the parent/super/base class and the new class is child/sub/child class.",
"What is super, base, parent, inherited class?","All of these terms refer to the same thing that is, a class that extends and reuses a previously designed class. The old class is the parent/super/base class and the new class is child/sub/child class.",
What is ï¿½friendï¿½ modifier for standalone function?,â€œfriendâ€ modifier grants public access privilege to an entire other class or an external function defined outside the class that belongs to another class or a global function.,
What is ï¿½thisï¿½?,A private constant pointer that points to the current instance of a class and only can be accessed by the class itself.,
What is a friend class?,"Class A can grant Class B an access to all of its content including the private, protected and public sections by declaring it as a friend.",
What are virtual functions and why they are needed?,"It is a mechanism for dynamic function call binding in a hierarchical inheritance, also called polymorphism. If a function member of a base class is needed to be overridden in a derived class, then it should be made as â€œvirtualâ€ in base class, so in run-time it is bound dynamically based on the type of the object.",
Define static binding,It occurs at compile time in function calls resolution in a hierarchy of inheritance if the functions members in base classes are not declared as â€œvirtualâ€.,
Define dynamic binding,It occurs at run time in function calls resolution in a hierarchy of inheritance if the functions members in base classes are declared as â€œvirtualâ€.,
How does object slicing work?,"It occurs when an instance of child class is assigned to an instance of a parent class, since child class potentially contains more data members; the extra data members will be sliced of lost in the process, hence the name.",
Compare function overloading vs. overriding vs. redefinition,"Overloading: defining multiple function using the same function name but with different parameter list ether in type or number. In classes, the overloaded constructor is an example where you can have many constructors with different parameter list signatures. Redefinition: if a base class non-virtual function is redefined in a derived class, it is called redefined and it is statically bound. Overriding: Redefinition: if a base class virtual function is redefined in a derived class, it is called overridden and it is dynamically bound.",
What are pure virtual functions and how do you specify that?,"A mechanism that mandates all functions defined this way in the base class to be overridden in the derived class. The pure function has no implementation code in the base class, it is only stated as a prototype = 0;",
Define abstract classes,A class that can only be derived (inherited from) but cannot by instantiated (no objects can be created from it). A class that defines at least one pure virtual function is an abstract class.,
Define multiple inheritance,A derived class can extend/inherit from multiple base classes which allow the derived class to have more than one parent and inherit their functionality.,
How to resolve conflicts in naming between multiple parent classes if they are called from a child?,"Derived class redefines the multiply-defined function in parents or, Derived class invokes member function in a particular base class using scope resolution operator ::. Compiler errors occur if derived class uses base class function without one of above solutions.",
What is code reuse?,"It is a mechanism in OOP that facilitates the utilization of previously created code; its main advantages include: time saving, better resource utilization and reducing redundancy. One good example of code reuse is inheritance.",
What is class extension?,"It means inheritance; where a derived class inherits all of the base class content and extends the data member or/and the function members. In OOP inheritance implies extension where, there is no point of just inheriting the same content of the base class and not adding any data or function members, if that is the case then, the base class by itself could be used directly and no need for inheritance.",
Define class aggregation,Utilizing (by instantiation) one or more classes within another class to model a certain more complex object. Example: aggregating two instances of Point3D to model a line segment class.,
Define nested classes,Declaring and defining an inner class within another.,
"When child class default constructor/destructor are called, what happens to parent?","Default constructor: the parent constructor is called then the childâ€™s. Destructor: the child destructor is called first then the parentâ€™s. Typical as a demo, debugging messages are placed in default constructer and destructor to show this behavior.",
When child class overloaded constructor are called what happens to parent?,Parentâ€™s overloaded constructor is not called.,
How can an overloaded constructor of a parent class be called by its children?,"In the header of the overloaded constructor of the child, use â€œ:â€ and issue a call to the parent overloaded constructor using the parameters (all or as needed) of child as the arguments to the parentâ€™s. The base class takes care of constructing its part of the data and the derived class takes care of its extended part only.",
How polymorphism can be demonstrated?,Two ways: Using reference variables and Using pointer variables.,
Define operator overloading,"For the language intrinsic data types such as bool, char, short, int, etc. the language defines all of their related operators such as +, -, *, &&, ||, !, etc.. As for the user defined data types (UDT), the designer of these classes must provide specific implementation of all required operators that can operate on a particular UDT. For example if a new data type was created for matrices then, what would the +, -, *, /, etc.",
Define function templates,"A feature in c++ that enables functions to process any data type (intrinsic or UDT) as long as all the operations in the function template are defined for the data type to be processed. Without templates, the programmer needs to write a separate function for each data type.",
Define class templates,Extends the concept of function templates as in (Q61) to class templates where the entire class can be generic and handles any data type as long as all used operations in the class templates are defined for these data types.,
What is exception handling?,"Is a construct and a mechanism that manages the occurrence of errors/abnormalities at run time. Exception handling is designed to separate the error handling code from the original code to gracefully handle the fault situation by transferring the program control to the exception handling code. Many aspects of software development process can be improved such as: safety, readability, writeability, maintainability, etc.",
How and where is ï¿½throwï¿½ used?,"Any function can declare that it â€œthrowsâ€ a certain type of an exception either defined in <exception> or a UDT, or it can leave the type empty in the â€œthrow()â€ which indicates that it will throw any type of exception.",
How multiple exceptions are handled?,By using multiple â€œcatchâ€ blocks for the same â€œtryâ€ block.,
How and where try-catch blocks are used?,"If a certain code has a possible exception, it is placed within a â€œtryâ€ block where the code should be throwing that particular exception using â€œthrowâ€; the â€œcatchâ€ block is used after the â€œtryâ€ block to handle one or more exceptions; use the catch( â€¦ ) to catch default exception.",
"In exception handling, how and why inner/customized classes are used?","When the situation needs more than the standard exception types, the programmer can create her own classes to manage these new types. ",
Define hierarchical inheritance,It is an inheritance structure where multiple classes are derived from one base as well as multi-level inheritance; meaning that any derived class can have other derived classes. ,
Define inheritance modes,"The base class access specifier that gives different privileges to the derived class; placed right before the base class name in the inheritance statement. If no access specifier is found, it defaults to be â€œprivateâ€.",
Define shallow vs. deep copy,"Shallow copy: is automatically provided by the system when copying an old object to a newly created one using the copy constructor which does member-wise assignment. If all members are statically defined (no dynamic memory allocation) then, the shallow copy is safe and effective otherwise, the pointers to dynamic memory in both objects will be aliases and will point to the same location which is undesirable since objects are typically independent. Deep copy: solves the problem of shallow copy by allocating new independent memory for any dynamically allocated data in the copy constructor.",
Define static data members,They are data members defined with â€œstaticâ€ key word. These data members become class members; they do not belong to an object but to the class; they can be accessed without the need to instantiate an object; they can be accessed using the class name and the scope resolution operator â€œ::â€. A static data member can only be accessed from a static function member in the class.,
Define Static function members,They are function members defined with â€œstaticâ€ key word. These function members become class members; they do not belong to an object but to the class; they can be accessed without the need to instantiate an object; they can be accessed using the class name and the scope resolution operator â€œ::â€.,
What is class variable?,They are static data members.,
What is object variable?,They are all other non-static data members.,
How do you initialize a class variable?,"Anywhere outside the class specification body, typically in the â€œclass.cppâ€ implementation file. They are accessed using the class name and the scope resolution and set to appropriate values. They can be initialized within class specification body only if they are constants â€œstatic constâ€.",
How do you initialize an object variable?,"They only can be initialized in the implementations of the public interface functions in the implementation code: constructors, private functions and any other member functions of the class.",
Explain stale data.,"It is a situation where an output data is computed from an old input data although the user has fed her fresh data but, due to unreliable data handling in the class, the computation of the out data was erroneous.",
"How, where and why ""const"" keyword in the public interface?",It is recommended to be used in all functions (especially the accessor functions) that do not intend to change any class data member to prevent accidental change to these data members. It is placed after the header of the function.,
"In polymorphism, explain the ""is-a"" relation.","Polymorphism is a mechanism that allows behaviors defined in base class to be dynamically bound to the appropriate behaviors in derived classes. To do that, only derived object/pointer can be assigned to base object/pointer but not vice versa, which is the essence of â€œis-aâ€ relation since a child class â€œis-aâ€ parent class is always valid such as a Point3D is a Point but we cannot say that a Point is a Point3D.",
"For a template function to work, what are the conditions of the supported classes?",All operators applied to the objects of the classes used in the function template must be supported in their classes.,
Why a template class must be written in one single file?,"By separating .h and .cpp files we hide the class implementation from its specification. Then, the implementation file can be compiled as an Obj code which a user can link it to her code. The user code must include the specification file â€œ.hâ€ file to be able to compile before linking. In non-template classes, all variables are defined as specific data types in .h and .cpp files. Therefore, compiler can generate the target machine code since the information of the data types is known. As for Template classes, no information about the specific data types are known in the template class in both sections specification and implementation. Only after the user instantiates an object as in: TClass myObj; After this instantiation statement, the complier can generate the specific version of the template class to match the specified data type(s). Due to all of the above, the template class must keep the specification and implementation sections in one file as source code. The implementation section can NOT be separately compiled into an .obj file to be linked with the user code.",
Explain memory leakage,"Occurs when the programmer repeatedly allocates dynamic memory and does not release it when it is no longer needed, this will eventually exhaust all memory resources and cause a fatal error that will crash the program.",
How cascaded operators work?,"In applying multiple instances of the same operator in one statement where every result of one operator feeds into the next, the implementation of this overloaded operator in a class need to address this feature for the cascading to work.",
How to test a default constructor?,The default constructor is called in two situations: when declaring an object and when creating a dynamic object using default constructor.,
How to test a copy constructor?,A copy constructor is called when copy constructor is explicitly called or an object is returned by value.,
What is a scope resolution operator mean?,The â€œ::â€ is used to identify which data/functions members belong to which class. It can be used in different situations.,
How parent member functions can be accessed?,Using the scope resolution operator â€œ::â€.,
"Can an object be returned from a stand-alone function, how?",C++ allows objects to be returned form functions.Example: assume that we want to write a function that reads data members in a Point3D object.,
"Can an object be returned from its own methods, how?",C++ has a feature that allow that; through the â€œthisâ€ key work an object can return itself in two ways:Returning a copy of itself. Returning a pointer to the object,
Can an array of objects be returned from a stand-alone function?,Using dynamic memory allocation and returning a pointer to it.,
"What is a forward declaration, give an example?","In situations where a class needs to use the name of another external class, a forward declaration statement is needed for the compiler to know that a class with this name exists outside this file. A typical situation is when defining a friend function of class A in class B, Class B needs a forward declaration statement of class A. ",
What is a circular reference/dependency among classes?,It occurs when two classes declare each other in their header files so they depend on each other for their specifications to be complete.,
Why it is recommended to make base class destructors virtual,In normal situation they need not be virtual but in case of pointer to base is set to point to a derived object.,
What is OOP?,OOP stands for Object Oriented Programming. OOP is a programming paradigm that relies on the concept of classes and objects. It is used to structure a software program into simple reusable pieces of code blueprints (usually called classes) which are used to create individual instances of objects. C is a procedural a language and yet C++ is an Object Oriented language because it has classes and can take advantage of polymorphism.,
What is a Class?,Class is a blue print which reflects the entityâ€™s attributes and actions. Technically defining a class is designing a user defined data type.Here is a simple example class in C++.,
What is an Object?,"An instance of a class is called an object.""Window window;"". That is an instance of the Window class, ie, a Window object.",
List the types of inheritance supported in C++,"Single Inheritance â€” the derived class inherits only one base class. It allows reusability of features inherited from the base class also called the parent class or superclass. Multiple Inheritance â€” The derived class has multiple base classes. Hierarchical Inheritance â€” When more than one derived class is created from a single base class. Multi Level Inheritance â€” When a derived class is created from another derived class. You could say that the child class has a parent class, and a grandparent class for example . Hybrid Inheritance â€” This is a combination of more than one type of inheritance. This is sometimes also called Multi-Path Inheritance.",
What is the role of the protected access specifier?,"Class members are declared as protected can be used by member functions and friends (classes or functions) of the class. Additionally, they can be used by classes derived from the class.",
What is encapsulation?,The process of binding the data and the functions acting on the data together in an entity (class).,
What is abstraction?,Abstraction refers to hiding the internal implementation and exhibiting only the necessary details.,
What is an inline function?,An inline function is a suggestion to the compiler to treat the function as a macro. This is faster than invoking the function normally. The compiler will paste the contents of the function in place into the execution instructions at compile time instead of using a subroutine at runtime.,
What is a storage class?,"Defines the scope and life time of variables and/or functions. These specifiers precede the type that they modify. These are the C++ storage classes:auto, register, static, extern and mutable.",
What is a auto storage class?,The auto storage class is the default storage class for all local variables.,
What is a register storage class?,Register Storage Classis Used to define local variables that should be defined in a register instead of RAM. This means that the variable has a maximum size equal to the register size (usually one word) and canâ€™t have the unary â€˜&â€™ operator applied to it (as it does not have a memory location),
What is a static storage class?,"The static storage class instructs the compiler to keep a local variable in existence during the life time of the program instead of creating and destroying it each time it comes into and goes out of scope. Therefore making local variables static allows them to maintain their values between function calls. The static modifier may also be applied to global variables. When this is done, it causes that variableâ€™s scope to be restricted to the file in which it is declared.",
What is a extern storage class?,"The extern storage class is used to give a reference of a global variable that is visible to ALL program files. When you use extern the variable cannot be initialized as all it does is point the variable name at a storage location that has been previously defined. When you have multiple files and you define a global variable or function, which will be used in other files also, then extern will be used in another to give reference or function.",
What is a mutable storage class?,"The mutable specifier applies only to class objects. It allows a member of an object to override a const member function. That is, a mutable member can be modified by a const member function. The mutable storage class specifier is used only on a class data member to make it modifiable even though the member is part of an object declared as const. You cannot use the mutable specifier with names declared as static or const, or reference members.",
What is a virtual function?,"A C++ virtual function is a member function in the base class that you redefine in a derived class. It is declared using the virtual keyword.It is used to tell the compiler to perform dynamic linkage or late binding on the function. There is a necessity to use the single pointer to refer to all the objects of the different classes. So, we create the pointer to the base class that refers to all the derived objects, but, when the base class pointer contains the address of the derived class object, always executes the base class function. This issue can only be resolved using the â€˜virtualâ€™ function.When the function is made virtual , C++ determines which function is to be invoked at the runtime based on the type of the object pointed at by the base class pointer.",
What is a pure virtual function?,"A pure virtual function does not perform any task, it is only a placeholder. It is a do-nothing function. A class containing a pure virtual function cannot be used to declare objects of its own, such classes are known as abstract base classes. The main objective of the base class is to provide the traits to the derived classes and to create the base pointer used for achieving runtime polymorphism.",
What are the differences between references and pointers?,"Both references and pointers can be used to change local variables of one function inside another function. Both of them can also be used to save copying of big objects when passed as arguments to functions or returned from functions, to get efficiency gain. Despite above similarities, there are following differences between references and pointers. References are less powerful than pointers.",
What is polymorphism?,The word polymorphism means â€œmany formsâ€.There are two types of polymorphism in C++: compile time polymorphism and runtime polymorphism.,
What is the this pointer?,The this pointer is passed as a hidden argument to all nonstatic member function calls and is available as a local variable within the body of all nonstatic functions. This pointer is a constant pointer that holds the memory address of the current object. This pointer is not available in static member functions as static member functions can be called without any object (with class name).,
What is a VTABLE and VPTR?,vtable is a table of function pointers. It is maintained per class. VPTR is a pointer to vtable. It is maintained per object. Compiler adds additional code at two places to maintain and use vtable and vptr.,
Distinguish between shallow copy and deep copy,"In general if the variables of an object have been dynamically allocated, then it is required to do a Deep Copy in order to create a copy of the object. Shallow Copy: In shallow copy, an object is created by simply copying the data of all variables of the original object. This works well if none of the variables of the object are defined in the heap section of memory. If some variables are dynamically allocated memory from heap section, then copied object variable will also reference the same memory location. Deep Copy: In Deep copy, an object is created by copying data of all variables and it also allocates similar memory resources with the same value to the object. In order to perform Deep copy, we need to explicitly define the copy constructor and assign dynamic memory as well if required. Also, it is required to dynamically allocate memory to the variables in the other constructors as well.",
What is an abstract class in C++?,A class with at least one pure virtual function. We cannot instantiate an abstract class.,
What is the role of static member keyword on class member variable?,A static variable does exist through the objects for the respective class are not created. Static member variable share a common memory across all the objects created for the respective class. A static member variable can be referred using the class name itself.,
Name the data type which can be used to store wide characters in C++,wchar_t,
What is/are the operator/operators used to access the class members?,Dot (.) and Arrow ( -> ),
What is function overloading?,Defining several functions with the same name with unique list of parameters.,
What is operator overloading?,Defining a new job for the existing operator with respect to class objects. You will overload an operator inside of a class definition.,
Do we have a String primitive data type in C++?,"No, itâ€™s a class from the STL (Standard template library).",
Name the default standard streams in C++.,"cin, cout, cerr, and clog. Using cout: Use cout to print debug output. Using cin: Use cin to get console input from the user. Using cerr: Beginner C++ programmers use cout to display the error using standard output to debug their programs, but it is always good practice to use cerr to display errors. This is because instead of showing the error stream to the screen, you can later change the error stream to write the errors to a file. Using clog: clog and cerr are both associated with stderr, but it differs from cerr in the sense that the streams in clog are buffered and not automatically tied with cout.",
What is a namespace?,"A namespace is a declarative region that provides a scope to the identifiers (the names of types, functions, variables, etc) inside it. Namespaces are used to organize code into logical groups and to prevent name collisions that can occur especially when your code base includes multiple libraries. All identifiers at namespace scope are visible to one another without qualification. Identifiers outside the namespace can access the members by using the fully qualified name for each identifier.",
What are the different data types present in C++?,"The 4 data types in C++ are : primitive datatype, derived datatype, enumeration and user-defined datatype.",
Explain the purpose of the volatile keyword,The volatile keyword is used to tell the compiler that the value may change at any time â€” without any actions being taken by the code the compiler finds nearby. In practice there are three main cases where this would happen.,
What is the basic structure of a C++ program?,"The first line that begins with a preprocessor directive. In this case, we are using include as a directive which tells the compiler to include a header while iostream will be used for basic input/output later in the program. The next line is the main function that returns an integer. The main function is the starting point of execution for any C++ program. Irrespective of its position in the source code file, the contents of the main function are always executed first by the C++ compiler. In the next line, we can see open curly braces that indicate the start of a block of code. After this, we see the programming instruction or the line of code that uses the count which is the standard output stream (its definition is present in iostream.h). This output stream takes a string of characters and prints it to a standard output device. In this case, it is,Hello, World. Please note that each C++ instruction ends with a semicolon (;), which is very much necessary, and omitting it will result in compilation errors. Before closing the braces, we see another line â€œreturn 0;â€. This is the returning point to the main function. Every C++ program will have a basic structure as shown above with a preprocessor directive, the main function declaration followed by a block of code, and then a returning point to the main function which indicates successful execution of the program.",
What are the Comments in C++?,"Comments in C++ are simply a piece of source code ignored by the compiler. They are only helpful for a programmer to add a description or additional information about their source code. In C++ there are two ways to add comments: single-line comment and block comment. The first type will discard everything after the compiler encounters â€œ//â€. In the second type, the compiler discards everything between â€œ/*â€ and â€œ*/â€.",
What is Declaration and Definition of a variable.,"The declaration of a variable is merely specifying the data type of a variable and the variable name. As a result of the declaration, we tell the compiler to reserve the space for a variable in the memory according to the data type specified.",
Comment on the Local and Global scope of a variable.,"The scope of a variable is defined as the extent of the program code within which the variable remains active i.e. it can be declared, defined, or worked with. There are two types of scope in C++: Local Scope: A variable is said to have a local scope or is local when it is declared inside a code block. The variable remains active only inside the block and is not accessible outside the code block. Global Scope: A variable has a global scope when it is accessible throughout the program. A global variable is declared on top of the program before all the function definitions.",
What is the precedence when there are a Global variable and a Local variable in the program with the same name?,"Whenever there is a local variable with the same name as that of a global variable, the compiler gives precedence to the local variable.",
"When there are a Global variable and a Local variable with the same name, how will you access the global variable?","When there are two variables with the same name but different scopes, i.e. one is a local variable and the other is a global variable, the compiler will give preference to a local variable. In order to access the global variable, we make use of a â€œscope resolution operator (::)â€. Using this operator, we can access the value of the global variable.",
How many ways are there to initialize an int with a Constant?,There are two ways: The first format uses traditional C notation i.e. int result = 10;. The second format uses the constructor notation i.e. int result (10);.,
What is a Constant?,"A constant is an expression that has a fixed value. They can be divided into integer, decimal, floating-point, character, or string constants depending on their data type.",
Comment on Assignment Operator in C++.,"The assignment operator in C++ is used to assign a value to another variable.The part at the left of the =operator is known as an lvalue (left value) and the right as rvalue (right value). Lvalue must always be a variable whereas the right side can be a constant, a variable, the result of an operation, or any combination of them. The assignment operation always takes place from the right to left and never at the inverse. One property which C++ has over the other programming languages is that the assignment operator can be used as the rvalue (or part of an rvalue) for another assignment.",
What is the difference between equal to (==) and Assignment Operator (=)?,"In C++, equal to (==) and assignment operator (=) are two completely different operators. Equal to (==) is an equality relational operator that evaluates two expressions to see if they are equal and returns true if they are equal and false if they are not. The assignment operator (=) is used to assign a value to a variable. Hence, we can have a complex assignment operation inside the equality relational operator for evaluation.",
What are the various Arithmetic Operators in C++?,"C++ supports the following arithmetic operators: + addition, â€“ subtraction, * multiplication, / division and % module.",
State the difference between Pre and Post Increment/Decrement Operations.,"C++ allows two operators i.e ++ (increment) and â€“(decrement), that allow you to add 1 to the existing value of a variable and subtract 1 from the variable respectively. These operators are in turn, called increment (++) and decrement (â€“). The difference between the meaning of pre and post depends upon how the expression is evaluated and the result is stored. In the case of the pre-increment/decrement operator, the increment/decrement operation is carried out first, and then the result is passed to an lvalue. Whereas for post-increment/decrement operations, the lvalue is evaluated first and then increment/decrement is performed accordingly.",
What are the Extraction and Insertion operators in C++?,"In the iostream.h library of C++, cin, and cout is the two data streams that are used for input and output respectively. Cout is normally directed to the screen and cin is assigned to the keyboard. â€œcinâ€ (extraction operator): By using overloaded operator >> with cin stream, C++ handles the standard input. â€œcoutâ€ (insertion operator): This is used in conjunction with the overloaded << operator. It directs the data that followed it into the cout stream.",
What is the difference between a while and a do while loop? ,"In the case of the while loop, we can directly exit the loop at the beginning, if the condition is not met whereas in the do-while loop we execute the loop statements at least once.",
"All functions should return a value as per the general syntax. However, in case, if we donâ€™t want a function to return any value, we use â€œvoidâ€ to indicate that. This means that we use â€œvoidâ€ to indicate that the function has no return value or it returns â€œvoidâ€.",What do you mean by â€˜voidâ€™ return type?,
Explain Pass by Value and Pass by Reference.,"While passing parameters to the function using â€œPass by Valueâ€, we pass a copy of the parameters to the function.  Hence, whatever modifications are made to the parameters in the called function are not passed back to the calling function. Thus the variables in the calling function remain unchanged.",
What are Default Parameters? How are they evaluated in the C++ function?,"A default Parameter is a value that is assigned to each parameter while declaring a function. This value is used if that parameter is left blank while calling the function. To specify a default value for a particular parameter, we simply assign a value to the parameter in the function declaration. If the value is not passed for this parameter during the function call, then the compiler uses the default value provided. If a value is specified, then this default value is stepped on and the passed value is used.",
What is an Inline function in C++?,"Inline function is a function that is compiled by the compiler as the point of calling the function and the code is substituted at that point. This makes compiling faster. This function is defined by prefixing the function prototype with the keyword â€œinlineâ€. Such functions are advantageous only when the code of the inline function is small and simple. Although a function is defined as Inline, it is completely compiler dependent to evaluate it as inline or not.",
Why are arrays usually processed with for loop?,"Array uses the index to traverse each of its elements. If A is an array then each of its elements is accessed as A[i]. Programmatically, all that is required for this to work is an iterative block with a loop variable i that serves as an index (counter) incrementing from 0 to A.length-1. This is exactly what a loop does and this is the reason why we process arrays using for loops.",
State the difference between delete and delete[].,â€œdelete[]â€ is used to release the memory allocated to an array that was allocated using new[]. â€œdeleteâ€ is used to release one chunk of memory which was allocated using new.,
Whatâ€™s the order in which the objects in an array are destructed?,"Objects in an array are destructed in the reverse order of construction: First constructed, last destructed.",
What is a Reference Variable in C++?,"A reference variable is an alias name for the existing variable. This means that both the variable name and the reference variable point to the same memory location. Hence, whenever the variable is updated, the reference is updated too.",
What is the keyword auto for?,"By default, every local variable of the function is automatic i.e. auto. A global variable is not an automatic variable.",
What is a Static Variable?,"A static variable is a local variable that retains its value across the function calls. Static variables are declared using the keyword â€œstaticâ€. Numeric variables which are static have the default value as zero. If a global variable is static, then its visibility is limited to the same source code.",
What is the purpose of the Extern Storage Specifier?,â€œExternâ€ specifier is used to resolve the scope of a global symbol.,
Explain Register Storage Specifier.,"â€œRegisterâ€ variable should be used whenever the variable is used. When a variable is declared with a â€œregisterâ€ specifier, then the compiler gives a CPU register for its storage to speed up the lookup of the variable.",
When to use â€œconstâ€ reference arguments in a function?,"â€œconstâ€ protects from programming errors that could alter data. As a result of using â€œconstâ€, the function is able to process both const and non-const actual arguments, which is not possible when â€œconstâ€ is not used. Using a const reference will allow the function to generate and use a temporary variable in an appropriate manner.",
What is the use of a â€˜usingâ€™ declaration?,Using Declaration is used to refer to a name from the namespace without the scope resolution operator.,
What is Name Mangling?,C++ compiler encodes the parameter types with function/method into a unique name. This process is called name mangling. The inverse process is called demangling.,
What is a Constructor and what is it called?,Constructor is a member function of the class having the same name as the class. It is mainly used for initializing the members of the class. By default constructors are public. There are two ways in which the constructors are called: implicitly and Explicit calling.,
What is implicit calling?,In Implicitly calling Constructors are implicitly called by the compiler when an object of the class is created. This creates an object on a Stack.,
What is explicit calling?,"In Explicit Calling when the object of a class is created using new, constructors are called explicitly. This usually creates an object on a Heap.",
What is a COPY CONSTRUCTOR and when is it called?,A copy constructor is a constructor that accepts an object of the same class as its parameter and copies its data members to the object on the left part of the assignment. It is useful when we need to construct a new object of the same class.,
What is a Conversion Constructor?,It is a constructor that accepts one argument of a different type. Conversion constructors are mainly used for converting from one type to another.,
What is an Explicit Constructor?,A conversion constructor is declared with the explicit keyword. The compiler does not use an explicit constructor to implement an implied conversion of types. Its purpose is reserved explicitly for construction.,
What is the role of the Static keyword for a class member variable?,"The static member variable shares a common memory across all the objects created for the respective class. We need not refer to the static member variable using an object. However, it can be accessed using the class name itself.",
Explain the Static Member Function.,"A static member function can access only the static member variable of the class. Same as the static member variables, a static member function can also be accessed using the class name.",
Function can be overloaded based on the parameter which is a value or a reference. Explain if the statement is true.,"False. Both, Passing by value and Passing by reference look identical to the caller.",
What are the benefits of Operator Overloading?,"By overloading standard operators on a class, we can extend the meaning of these operators, so that they can also operate on the other user-defined objects. Function overloading allows us to reduce the complexity of the code and make it more clear and readable as we can have the same function names with different argument lists.",
Does C++ support Multilevel and Multiple Inheritances?,Yes! C++ supports both Multilevel and Multiple Inheritances.,
What are Multiple Inheritances (virtual inheritance)?,"In multiple inheritances, we have more than one base classes from which a derived class can inherit. Hence, a derived class takes the features and properties of more than one base class.",
Explain the ISA and HASA class relationships. ,"â€œISAâ€ relationship usually exhibits inheritance as it implies that a class â€œISAâ€ specialized version of another class. For Example, An employee ISA person. That means an Employee class is inherited from the Person class. Contrary to â€œISAâ€, â€œHASAâ€ relationship depicts that an entity may have another entity as its member or a class has another object embedded inside it.",
Does a derived class inherit or doesnâ€™t inherit?,"When a derived class is constructed from a particular base class, it basically inherits all the features and ordinary members of the base class. But there are some exceptions to this rule. For instance, a derived class does not inherit the base classâ€™s constructors and destructors. Each class has its own constructors and destructors. The derived class also does not inherit the assignment operator of the base class and friends of the class. The reason is that these entities are specific to a particular class and if another class is derived or if it is the friend of that class, then they cannot be passed on to them.",
What is a friend function?,"C++ class does not allow its private and protected members to be accessed outside the class. But this rule can be violated by making use of the â€œFriendâ€ function. As the name itself suggests, the friend function is an external function that is a friend of the class. For the friend function to access the private and protected methods of the class, we should have a prototype of the friend function with the keyword â€œfriendâ€ included inside the class.",
What is a friend class?,"Friend classes are used when we need to override the rule for private and protected access specifiers so that two classes can work closely with each other. Hence, we can have a friend class to be a friend of another class. This way, friend classes can keep private, inaccessible things the way they are. When we have a requirement to access the internal implementation of a class (private member) without exposing the details by making the public, we go for friend functions.",
What is a template?,Templates allow creating functions that are independent of data type (generic) and can take any data type as parameters and return value without having to overload the function with all the possible data types. Templates nearly fulfill the functionality of a macro.,
What is Exception Handling? Does C++ support Exception Handling?,"Yes C++ supports exception handling. We cannot ensure that code will execute normally at all times. There can be certain situations that might force the code written by us to malfunction, even though itâ€™s error-free. This malfunctioning of code is called an Exception. When an exception has occurred, the compiler has to throw it so that we know an exception has occurred. When an exception has been thrown, the compiler has to ensure that it is handled properly, so that the program flow continues or terminates properly. This is called the handling of an exception. Thus in C++, we have three keywords i.e. try, throw, and catch which are in exception handling.",
Comment on C++ standard exceptions?,C++ supports some standard exceptions that can be caught if we put the code inside the try block. These exceptions are a part of the base class â€œstd:: exceptionâ€. This class is defined in the C++ header file <exception>.,
What is a Standard Template Library (STL)?,A Standard Template Library (STL) is a library of container templates approved by the ANSI committee for inclusion in the standard C++ specification.,
What are the various types of STL Containers?,"We have various types of STL containers depending on how they store the elements. Queue, Stack: These are the same as traditional queue and stack and are called adaptive containers. Set, Map: These are basically containers that have key/value pairs and are associative in nature. Vector, deque: These are sequential in nature and have similarities to arrays.",
What is an Iterator class?,"In C++ a container class is a collection of different objects. If we need to traverse through this collection of objects, we cannot do it using simple index variables. Hence, we have a special class in STL called an Iterator class which can be used to step through the contents of the container class. The various categories of iterators include input iterators, output iterators, forward iterators, bidirectional iterators, random access, etc.",
What is the difference between an External Iterator and an Internal Iterator?,An internal iterator is implemented with member functions of the class that has items to step through.An external iterator is implemented as a separate class that can be bound to the object that has items to step through.,
Describe an advantage of the External Iterator.,"The basic advantage of an External iterator is that itâ€™s easy to implement as it is implemented as a separate class. Secondly, as itâ€™s a different class, many iterator objects can be active simultaneously.",
What is template metaprogramming?,Template metaprogramming is a technique in C++ where templates are used to perform computations and generate code at compile-time.,
What are the advantages of template metaprogramming?,"Template metaprogramming can result in faster and more efficient code, as well as code that is more easily maintainable and extensible.",
What is a template in C++?,A template is a generic programming construct in C++ that allows the creation of classes and functions that can work with different types of data.,
What is a template class in C++?,"A template class is a class that is defined using a template, and can be instantiated with different types.",
What is a template function in C++?,"A template function is a function that is defined using a template, and can be called with different types.",
What is a template parameter in C++?,"A template parameter is a parameter in a template declaration that represents a type, value, or another template.",
What is a template argument in C++?,"A template argument is a specific type, value, or another template that is passed to a template parameter.",
What is a template specialization in C++?,A template specialization is a version of a template that is specifically defined for a particular type or value.,
What is a template instantiation in C++?,A template instantiation is the process of creating a specific instance of a template by substituting template parameters with specific types or values.,
What is a constexpr function in C++?,A constexpr function is a function that can be evaluated at compile-time.,
What is a constexpr variable in C++?,A constexpr variable is a variable whose value can be computed at compile-time.,
What is SFINAE in C++?,SFINAE (Substitution Failure Is Not An Error) is a mechanism in C++ that allows the compiler to selectively discard templates that do not match the provided arguments.,
What is a type trait in C++?,"A type trait is a metafunction in C++ that provides information about a type, such as whether it is a pointer or a reference.",
What is type deduction in C++?,Type deduction is the process of determining the type of a template argument based on the context in which it is used.,
What is type aliasing in C++?,Type aliasing is the process of creating a new name for an existing type using the typedef or using keyword.,
What is perfect forwarding in C++?,Perfect forwarding is a technique in C++ that allows a function to forward its arguments to another function while preserving their types and values.,
What is a variadic template in C++?,A variadic template is a template that can accept a variable number of arguments.,
What is a fold expression in C++?,A fold expression is a C++17 feature that allows the application of a binary operation to a parameter pack.,
What is a dependent type in C++?,"A dependent type is a type that depends on a template parameter, and cannot be determined until the template is instantiated.",
What is a non-type template parameter in C++?,"A non-type template parameter is a template parameter that represents a value, rather than a type.",
What is a template template parameter in C++?,A template template parameter is a template parameter that represents another template.,
What is the difference between template function specialization and overloading in C++?,"Template function specialization is a way to define a specific implementation of a template function for a particular set of template arguments, while overloading allows the creation of multiple functions with the same name that differ in their parameters.",
What is the difference between a template class and a regular class in C++?,"A template class is a generic class that can be instantiated with different types, while a regular class is a class that is defined with a fixed type.",
What is the difference between a template class and a template function in C++?,"A template class is a class that is defined using a template and can be instantiated with different types, while a template function is a function that is defined using a template and can be called with different types.",
What is type erasure in C++?,Type erasure is a technique in C++ that allows the creation of a type-agnostic container that can store objects of different types.,
What is a template metaclass in C++?,A template metaclass is a class that is defined using a template and can be used to perform compile-time computations and generate code.,
What is the difference between constexpr and const in C++?,"constexpr variables and functions can be evaluated at compile-time, while const variables are evaluated at run-time.",
What is a template template argument in C++?,A template template argument is a template parameter that represents another template.,
What is the difference between a template template parameter and a regular template parameter in C++?,"A template template parameter is a parameter that represents another template, while a regular template parameter represents a type or value.",
What is a template template argument deduction in C++?,Template template argument deduction is the process of deducing the template argument for a template template parameter based on the types of the arguments passed to it.,
What is a dependent template in C++?,A dependent template is a template that depends on a template parameter and cannot be determined until the template is instantiated.,
What is the difference between a template specialization and a partial specialization in C++?,"A template specialization provides a specific implementation of a template for a particular set of template arguments, while a partial specialization provides a specific implementation for a subset of the possible template arguments.",
What is the difference between type traits and concepts in C++?,"Type traits provide information about a type, while concepts provide a set of requirements that a type must meet.",
What is a template alias in C++?,A template alias is a way to define a new name for an existing template.,
What is a template pack expansion in C++?,A template pack expansion is a way to expand a parameter pack into a list of arguments for a template function or class.,
What is a template metaprogram in C++?,A template metaprogram is a program that uses templates to perform computations and generate code at compile-time.,
What is a template class specialization in C++?,A template class specialization is a specific implementation of a template class for a particular set of template arguments.,
What is the difference between a template function and a function object in C++?,"A template function is a function that is defined using a template and can be called with different types, while a function object is an object that can be called like a function.",
What is a template function pointer in C++?,A template function pointer is a pointer to a function that is defined using a template.,
What is template argument deduction in C++?,Template argument deduction is the process of deducing the template arguments for a template function or class based on the types of the arguments passed to it.,
What is a template metaprogramming library in C++?,A template metaprogramming library is a collection of templates and template classes that can be used to perform compile-time computations and generate code.,
What is a template non-type parameter in C++?,A template non-type parameter is a parameter that represents a value rather than a type.,
What is a template member function in C++?,A template member function is a member function of a class that is defined using a template and can be called with different types.,
What is a template template parameter pack in C++?,A template template parameter pack is a parameter pack that represents multiple template parameters.,
What is a template argument pack expansion in C++?,A template argument pack expansion is a way to expand a parameter pack into a list of template arguments for a template function or class.,
What is a template partial ordering in C++?,Template partial ordering is the process of determining which function or class template specialization is the best match for a set of template arguments.,
What is a template class template parameter in C++?,A template class template parameter is a template parameter that represents another template class.,
What is the difference between a template class and a concept in C++?,"A template class is a generic class that can be instantiated with different types, while a concept is a set of requirements that a type must meet.",
What is a template parameter pack in C++?,A template parameter pack is a way to represent a variable number of template parameters.,
What is the difference between a template class and a template function pointer in C++?,"A template class is a generic class that can be instantiated with different types, while a template function pointer is a pointer to a function that is defined using a template.",
What is a template argument deduction guide in C++?,A template argument deduction guide is a way to provide a hint to the compiler about how to deduce the template arguments for a template function or class.,
What is a variadic template function in C++?,A variadic template function is a function that takes a variable number of arguments of different types.,
What is a template specialization in C++?,A template specialization is a specific implementation of a template for a particular set of template arguments.,
What is the difference between a template class and a template function object in C++?,"A template class is a generic class that can be instantiated with different types, while a template function object is an object that can be called like a function and is defined using a template.",
What is a template class template argument deduction in C++?,Template class template argument deduction is the process of deducing the template arguments for a template class template parameter based on the types of the arguments passed to it.,
What is a template member function specialization in C++?,A template member function specialization is a specific implementation of a template member function for a particular set of template arguments.,
What is the difference between a template class and a template non-type parameter in C++?,"A template class is a generic class that can be instantiated with different types, while a template non-type parameter is a parameter that represents a value rather than a type.",
What is the Standard Template Library (STL)?,"STL is a collection of templates and algorithms that provide programmers with a standard set of powerful tools for creating efficient, reusable code in C++.",
What are the components of the STL?,"The STL has three main components: containers, algorithms, and iterators.",
What are containers in STL?,"Containers are data structures that hold objects of various types, such as vectors, lists, and maps.",
What are algorithms in STL?,"Algorithms are procedures that operate on containers, such as sorting and searching.",
What are iterators in STL?,Iterators are objects that point to elements in containers and allow algorithms to access and manipulate the elements.,
What is a vector in STL?,"A vector is a container that holds a sequence of elements in a dynamic array, allowing for efficient random access and resizing.",
What is a list in STL?,"A list is a container that holds a sequence of elements in a linked list, allowing for efficient insertion and removal at any position.",
What is a map in STL?,"A map is a container that holds a collection of key-value pairs, allowing for efficient lookup and insertion of elements.",
What is a set in STL?,"A set is a container that holds a collection of unique elements in sorted order, allowing for efficient lookup and insertion.",
What is a queue in STL?,"A queue is a container that holds a collection of elements in a first-in, first-out (FIFO) order, allowing for efficient insertion and removal at both ends.",
What is a stack in STL?,"A stack is a container that holds a collection of elements in a last-in, first-out (LIFO) order, allowing for efficient insertion and removal at one end.",
What is the difference between a vector and a list in STL?,"A vector is a container that uses a dynamic array to store elements in contiguous memory, allowing for efficient random access and resizing. A list, on the other hand, uses a linked list to store elements in non-contiguous memory, allowing for efficient insertion and removal at any position.",
What is the difference between a map and a set in STL?,"A map is a container that holds a collection of key-value pairs, while a set holds a collection of unique elements. Maps allow for efficient lookup and insertion of elements based on a key, while sets allow for efficient lookup and insertion of individual elements.",
What is the difference between a queue and a stack in STL?,"A queue is a container that holds a collection of elements in a first-in, first-out (FIFO) order, while a stack holds a collection of elements in a last-in, first-out (LIFO) order.",
What is the function of the find algorithm in STL?,"The find algorithm is used to search a container for a specific value or element and returns an iterator pointing to the first occurrence of the element, or the end of the container if the element is not found.",
What is the function of the sort algorithm in STL?,The sort algorithm is used to sort the elements of a container in ascending or descending order.,
What is the function of the reverse algorithm in STL?,The reverse algorithm is used to reverse the order of the elements in a container.,
What is the function of the transform algorithm in STL?,The transform algorithm is used to apply a function to each element in a container and store the result in another container.,
What is the function of the accumulate algorithm in STL?,"The accumulate algorithm is used to calculate the sum of the elements in a container, with the option of specifying an initial value and a binary operation to apply to the elements.",
What is the function of the unique algorithm in STL?,The unique algorithm is used to remove consecutive duplicate elements from a container.,
What is the function of the count algorithm in STL?,The count algorithm is used to count the number of times a specific value or element appears in a container.,
What is the function of the min and max functions in STL?,"The min and max functions are used to return the minimum and maximum values from a container, respectively.",
What is the function of the random_shuffle algorithm in STL?,The random_shuffle algorithm is used to randomly shuffle the elements of a container.,
What is the function of the next_permutation algorithm in STL?,The next_permutation algorithm is used to generate the next lexicographically greater permutation of a container.,
What is the function of the prev_permutation algorithm in STL?,The prev_permutation algorithm is used to generate the next lexicographically smaller permutation of a container.,
What is the function of the partition algorithm in STL?,"The partition algorithm is used to divide a container into two groups based on a given condition, such as whether an element is even or odd.",
What is the function of the binary_search algorithm in STL?,"The binary_search algorithm is used to search a sorted container for a specific value or element, and returns a Boolean value indicating whether the element was found.",
What is the function of the equal_range algorithm in STL?,The equal_range algorithm is used to find the range of elements in a sorted container that are equal to a specific value or element.,
What is the function of the lower_bound algorithm in STL?,The lower_bound algorithm is used to find the first element in a sorted container that is greater than or equal to a specific value or element.,
What is the function of the upper_bound algorithm in STL?,The upper_bound algorithm is used to find the first element in a sorted container that is strictly greater than a specific value or element.,
What is the function of the merge algorithm in STL?,The merge algorithm is used to merge two sorted containers into a single sorted container.,
What is the function of the set_intersection algorithm in STL?,The set_intersection algorithm is used to find the common elements between two sorted containers.,
What is the function of the set_difference algorithm in STL?,The set_difference algorithm is used to find the elements in one sorted container that are not in another sorted container.,
What is the function of the set_symmetric_difference algorithm in STL?,"The set_symmetric_difference algorithm is used to find the elements that are in either of two sorted containers, but not in both.",
What is the function of the push_heap and pop_heap algorithms in STL?,"The push_heap algorithm is used to add a new element to a heap, and the pop_heap algorithm is used to remove the top element from a heap and maintain the heap property.",
What is the function of the make_heap algorithm in STL?,The make_heap algorithm is used to convert a container into a heap.,
What is the function of the sort_heap algorithm in STL?,The sort_heap algorithm is used to sort the elements of a heap.,
What is the function of the partial_sort algorithm in STL?,"The partial_sort algorithm is used to partially sort the elements of a container, such that the first N elements are sorted in ascending or descending order.",
What is the function of the nth_element algorithm in STL?,The nth_element algorithm is used to partially sort a container such that the Nth element is in its final sorted position.,
What is memory management?,"Memory management is the process of allocating memory resources to different programs, data structures, or objects, and then managing their usage and release to ensure efficient utilization of available memory.",
What is the importance of memory management in C++?,"Memory management is critical in C++ because it is a language that allows for direct memory manipulation. Mismanaging memory in C++ can lead to memory leaks, dangling pointers, and other serious problems that can compromise the stability and safety of a program.",
What is a memory leak?,"A memory leak is a situation in which a program fails to release allocated memory when it is no longer needed. This results in the gradual depletion of available memory resources, which can eventually cause the program to crash or hang.",
What is a dangling pointer?,"A dangling pointer is a pointer that points to a memory location that has been deallocated or freed. Using a dangling pointer can lead to undefined behavior, as the memory location may be reused for other purposes.",
What is the difference between automatic and dynamic memory allocation?,"Automatic memory allocation is done by the compiler, and memory is automatically allocated and deallocated as local variables come in and out of scope. Dynamic memory allocation, on the other hand, is done at runtime and allows for more flexibility in the allocation and deallocation of memory.",
What is the new operator used for?,The new operator is used for dynamic memory allocation in C++. It is used to allocate memory for objects or arrays at runtime.,
What is the delete operator used for?,The delete operator is used to free the memory allocated by the new operator in C++. It is used to deallocate memory for objects or arrays that were allocated using the new operator.,
What is the difference between delete and delete[] in C++?,The delete operator is used to deallocate memory for a single object that was allocated using the new operator. The delete[] operator is used to deallocate memory for an array of objects that were allocated using the new[] operator.,
What is a smart pointer?,A smart pointer is a type of C++ pointer that automatically manages memory allocation and deallocation. It is designed to prevent memory leaks and other memory-related errors by ensuring that the memory allocated to a pointer is automatically freed when it is no longer needed.,
What are the different types of smart pointers in C++?,"There are three main types of smart pointers in C++: unique_ptr, shared_ptr, and weak_ptr. unique_ptr is used to manage a single object, shared_ptr is used to manage multiple objects, and weak_ptr is used to reference objects managed by shared_ptr without owning them.",
What is a reference counting?,"Reference counting is a technique used by shared_ptr to keep track of the number of references to an object. When the last reference to an object is released, the object is automatically deallocated.",
What is garbage collection?,Garbage collection is a technique used by some programming languages to automatically manage memory allocation and deallocation. The garbage collector periodically scans memory to identify and deallocate objects that are no longer needed.,
Does C++ have built-in garbage collection?,"No, C++ does not have built-in garbage collection. Memory management in C++ is typically done using manual memory allocation and deallocation or smart pointers.",
What is RAII?,"RAII (Resource Acquisition Is Initialization) is a C++ programming technique that uses object lifetime to manage resources, such as memory allocation and deallocation. RAII is used to ensure that resources are properly allocated and released, even in the presence of exceptions.",
"What is debugging, and why is it essential in C++ programming?","Debugging is the process of finding and fixing errors, bugs, or defects in software code. It is essential in C++ programming because it helps to ensure that the code is functioning correctly and efficiently.",
What are some common errors that can occur in C++ programming?,"Common errors in C++ programming include syntax errors, logical errors, and runtime errors. Syntax errors occur when the code violates the rules of the C++ programming language. Logical errors occur when the code produces unexpected results due to incorrect or flawed logic. Runtime errors occur when the code crashes or produces unexpected results during execution.",
"What is a debugger, and how does it help in the debugging process?","A debugger is a tool that helps developers find and fix errors in their code. It works by allowing the developer to execute the code step by step, inspecting the state of the program at each step, and identifying any errors or bugs that may be present.",
"What is a breakpoint, and how does it help in the debugging process?","A breakpoint is a point in the code where the debugger pauses execution, allowing the developer to inspect the state of the program at that point. Breakpoints are useful for isolating errors and bugs by allowing developers to examine the state of the program at specific points in the code.",
What is the process for setting a breakpoint in C++?,"To set a breakpoint in C++, the developer must use a debugger that supports breakpoint functionality. They can then select the line of code where they want to set the breakpoint and use the debugger's interface to set it.",
How do you use a debugger to step through code and find errors?,"To use a debugger to step through code and find errors, the developer must execute the code step by step, inspecting the state of the program at each step. They can then use the debugger's tools to identify any errors or bugs that may be present.",
What is the process for printing debugging information to the console?,"To print debugging information to the console in C++, the developer can use the std::cout function to output the information they want to print. They can then run the program and view the output in the console.",
"What is a core dump, and how does it help in the debugging process?","A core dump is a file that is generated when a program crashes or encounters an error. It contains information about the state of the program at the time of the crash, which can be useful for debugging purposes.",
How do you read a core dump file?,"To read a core dump file, the developer can use a tool like gdb, which allows them to inspect the contents of the file and identify any errors or bugs that may be present.",
"What is a memory leak, and how does it affect program performance?","A memory leak is a situation where a program fails to release memory that it has allocated. This can cause the program to use more memory than it needs, which can slow down program performance and eventually lead to a crash.",
How do you identify a memory leak in C++?,"To identify a memory leak in C++, the developer can use a tool like valgrind, which detects memory leaks and other memory-related errors in C++ code.",
"What is a segmentation fault, and how does it affect program performance?",A segmentation fault occurs when a program attempts to access memory that it does not have permission to access. This can cause the program to crash or produce unexpected results.,
"What is a watchpoint, and how does it differ from a breakpoint in C++ debugging?","A watchpoint is a type of breakpoint that triggers when a specific memory location is accessed or modified. It differs from a regular breakpoint, which triggers when a specific line of code is reached.",
How do you use a debugger to view the contents of a variable in C++?,"To view the contents of a variable in C++ using a debugger, the developer can set a breakpoint at the point where the variable is declared and then inspect the variable's value in the debugger's interface.",
What is the process for using a debugger to step through code and find the source of an error?,"The process for using a debugger to step through code and find the source of an error involves executing the code step by step, inspecting the state of the program at each step, and identifying any errors or bugs that may be present. The developer can then use the debugger's tools to identify the source of the error and fix it.",
What is the difference between a syntax error and a logical error in C++ programming?,"A syntax error is a type of error that occurs when the code violates the rules of the C++ programming language. A logical error, on the other hand, occurs when the code produces unexpected results due to incorrect or flawed logic.",
What is the process for using a debugger to examine the call stack in C++?,"To examine the call stack in C++ using a debugger, the developer can set a breakpoint at the point where they want to start examining the call stack and then use the debugger's interface to inspect the call stack at that point.",
How do you use a debugger to identify the source of a segmentation fault in C++?,"To identify the source of a segmentation fault in C++ using a debugger, the developer can use the debugger's interface to inspect the memory locations that are causing the segmentation fault and then identify the source of the error in the code.",
What is the process for using a debugger to examine the values of pointers in C++?,"To examine the values of pointers in C++ using a debugger, the developer can set a breakpoint at the point where the pointer is declared and then use the debugger's interface to inspect the pointer's value at that point.",
What is the difference between a runtime error and a logical error in C++ programming?,"A runtime error is a type of error that occurs when the code crashes or produces unexpected results during execution. A logical error, on the other hand, occurs when the code produces unexpected results due to incorrect or flawed logic.",
What is the process for using a debugger to examine the contents of a data structure in C++?,"To examine the contents of a data structure in C++ using a debugger, the developer can set a breakpoint at the point where the data structure is accessed and then use the debugger's interface to inspect the contents of the data structure at that point.",
What is the process for using a debugger to examine the contents of a string in C++?,"To examine the contents of a string in C++ using a debugger, the developer can set a breakpoint at the point where the string is declared and then use the debugger's interface to inspect the string's value at that point.",
What is the difference between a stack overflow and a segmentation fault in C++ programming?,"A stack overflow occurs when the program's stack memory is exceeded, while a segmentation fault occurs when the program attempts to access memory that it does not have permission to access.",
What is the difference between a runtime error and a compile-time error in C++ programming?,"A compile-time error occurs during the compilation process, while a runtime error occurs during the execution of the program.",
How do you use a debugger to find the source of a memory access violation in C++?,"To find the source of a memory access violation in C++ using a debugger, the developer can use the debugger's memory management tools to identify the code that is attempting to access memory that has already been freed or has not been allocated.",
What is the process for using a debugger to examine the contents of a string in C++?,"To examine the contents of a string in C++ using a debugger, the developer can set a breakpoint at the point where the string is accessed and then use the debugger's interface to inspect the characters stored in the string.",
How do you use a debugger to find the source of a race condition in C++?,"To find the source of a race condition in C++ using a debugger, the developer can use the debugger's thread management tools to identify the threads that are competing for access to the same resource and then modify the code to synchronize access to the resource correctly.",
What is the difference between a memory leak and a dangling pointer in C++ programming?,"A memory leak occurs when a program allocates memory but does not free it when it is no longer needed, while a dangling pointer occurs when a program tries to access memory that has already been freed.",
How do you use a debugger to find the source of a segmentation fault caused by a stack overflow in C++?,"To find the source of a segmentation fault caused by a stack overflow in C++ using a debugger, the developer can use the debugger's call stack tools to identify the functions that are causing the overflow and then modify the code to prevent the overflow from occurring.",
What is the difference between a breakpoint and a tracepoint in C++ debugging?,"A breakpoint suspends program execution when a specific line of code is reached, while a tracepoint records program execution without suspending it.",
How do you use a debugger to find the source of a deadlock in C++?,"To find the source of a deadlock in C++ using a debugger, the developer can use the debugger's thread management tools to identify the threads that are waiting for each other to release resources and then modify the code to prevent the deadlock from occurring.",
What is the process for using a debugger to examine the contents of a multi-dimensional array in C++?,"To examine the contents of a multi-dimensional array in C++ using a debugger, the developer can set a breakpoint at the point where the array is accessed and then use the debugger's interface to inspect the values of each element in the array.",
How do you use a debugger to find the source of a floating-point exception in C++?,"To find the source of a floating-point exception in C++ using a debugger, the developer can use the debugger's floating-point exception handling tools to identify the code that is causing the exception and then modify the code to handle the exception correctly.",
What is the difference between a memory leak and a stack overflow in C++ programming?,"A memory leak occurs when a program allocates memory but does not free it when it is no longer needed, while a stack overflow occurs when the program's stack memory is exceeded.",
What is the difference between a core dump and a crash in C++ programming?,"A core dump is a file generated by the operating system when a program crashes, which contains a snapshot of the program's memory at the time of the crash. A crash refers to a program that has stopped working unexpectedly.",
How do you use a debugger to find the source of a memory leak in C++?,"To find the source of a memory leak in C++ using a debugger, the developer can use the debugger's memory management tools to identify the code that is allocating memory but not freeing it.",
What is the difference between a watchpoint and a conditional breakpoint in C++ debugging?,"A watchpoint suspends program execution when a specific variable is accessed, while a conditional breakpoint suspends program execution when a specific condition is met.",
How do you use a debugger to find the source of a deadlock caused by a mutex in C++?,"To find the source of a deadlock caused by a mutex in C++ using a debugger, the developer can use the debugger's thread management tools to identify the threads that are waiting for the same mutex to be released and then modify the code to release the mutex correctly.",
What is the process for using a debugger to examine the contents of a linked list in C++?,"To examine the contents of a linked list in C++ using a debugger, the developer can set a breakpoint at the point where the linked list is accessed and then use the debugger's interface to traverse the list and inspect the values of each node.",
How do you use a debugger to find the source of a buffer overflow in C++?,"To find the source of a buffer overflow in C++ using a debugger, the developer can use the debugger's memory management tools to identify the code that is writing to a buffer beyond its allocated size and then modify the code to prevent the overflow from occurring.",
What is the difference between a breakpoint and a conditional breakpoint in C++ debugging?,"A breakpoint suspends program execution when a specific line of code is reached, while a conditional breakpoint suspends program execution only when a specific condition is met.",
How do you use a debugger to find the source of a race condition caused by a shared variable in C++?,"To find the source of a race condition caused by a shared variable in C++ using a debugger, the developer can use the debugger's thread management tools to identify the threads that are accessing the variable and then modify the code to synchronize access to the variable correctly.",
What is the process for using a debugger to examine the contents of a vector in C++?,"To examine the contents of a vector in C++ using a debugger, the developer can set a breakpoint at the point where the vector is accessed and then use the debugger's interface to inspect the values of each element in the vector.",
How do you use a debugger to find the source of a null pointer exception in C++?,"To find the source of a null pointer exception in C++ using a debugger, the developer can use the debugger's memory management tools to identify the code that is dereferencing a null pointer and then modify the code to handle the exception correctly.",
What is the difference between a memory leak and a buffer overflow in C++ programming?,"A memory leak occurs when a program allocates memory but does not free it when it is no longer needed, while a buffer overflow occurs when the program writes to a buffer beyond its allocated size.",
What is the difference between a stack overflow and a heap overflow in C++ programming?,"A stack overflow occurs when a program runs out of stack memory, while a heap overflow occurs when a program writes to a memory location beyond the end of a dynamically allocated block.",
How do you use a debugger to find the source of a segmentation fault caused by a null pointer dereference in C++?,"To find the source of a segmentation fault caused by a null pointer dereference in C++ using a debugger, the developer can use the debugger's memory management tools to identify the code that is dereferencing a null pointer and then modify the code to handle the exception correctly.",
What is the process for using a debugger to examine the contents of a map in C++?,"To examine the contents of a map in C++ using a debugger, the developer can set a breakpoint at the point where the map is accessed and then use the debugger's interface to inspect the keys and values of each element in the map.",
How do you use a debugger to find the source of a memory leak caused by a circular reference in C++?,"To find the source of a memory leak caused by a circular reference in C++ using a debugger, the developer can use the debugger's memory management tools to identify the objects that are involved in the circular reference and then modify the code to break the reference cycle.",
What is the difference between a watchpoint and a conditional watchpoint in C++ debugging?,"A watchpoint suspends program execution when a specific variable is accessed, while a conditional watchpoint suspends program execution when a specific condition is met while accessing the variable.",
How do you use a debugger to find the source of a crash caused by a stack overflow in C++?,"To find the source of a crash caused by a stack overflow in C++ using a debugger, the developer can use the debugger's memory management tools to identify the code that is causing the stack overflow and then modify the code to prevent it from happening.",
What is the process for using a debugger to examine the contents of a deque in C++?,"To examine the contents of a deque in C++ using a debugger, the developer can set a breakpoint at the point where the deque is accessed and then use the debugger's interface to inspect the values of each element in the deque.",
How do you use a debugger to find the source of a null pointer exception caused by a deleted object in C++?,"To find the source of a null pointer exception caused by a deleted object in C++ using a debugger, the developer can use the debugger's memory management tools to identify the code that is dereferencing a pointer to a deleted object and then modify the code to handle the exception correctly.",
What is the difference between a memory leak and a stack overflow in C++ programming?,"A memory leak occurs when a program allocates memory but does not free it when it is no longer needed, while a stack overflow occurs when a program runs out of stack memory.",
How do you use a debugger to find the source of a deadlock caused by a semaphore in C++?,"To find the source of a deadlock caused by a semaphore in C++ using a debugger, the developer can use the debugger's thread management tools to identify the threads that are waiting for the semaphore to be released and then modify the code to release the semaphore correctly.",
How do you use a debugger to find the source of a memory corruption caused by buffer overflow in C++?,"To find the source of a memory corruption caused by buffer overflow in C++ using a debugger, the developer can use the debugger's memory management tools to identify the code that is writing beyond the bounds of an allocated buffer and then modify the code to handle the buffer correctly.",
How do you use a debugger to find the source of an infinite loop caused by a logical error in C++?,"To find the source of an infinite loop caused by a logical error in C++ using a debugger, the developer can use the debugger's execution control tools to step through the code and identify the conditions that cause the loop to never terminate.",
What is the difference between a break and continue statement in C++ programming?,"A break statement terminates the current loop or switch statement and continues execution after the loop or switch, while a continue statement skips the current iteration of the loop and continues with the next iteration.",
How do you use a debugger to find the source of a segmentation fault caused by a double-free in C++?,"To find the source of a segmentation fault caused by a double-free in C++ using a debugger, the developer can use the debugger's memory management tools to identify the code that is freeing memory twice and then modify the code to handle the memory correctly.",
What is the process for using a debugger to examine the contents of a map iterator in C++?,"To examine the contents of a map iterator in C++ using a debugger, the developer can set a breakpoint at the point where the iterator is accessed and then use the debugger's interface to inspect the keys and values of each element in the map.",
How do you use a debugger to find the source of a null pointer exception caused by a dangling pointer in C++?,"To find the source of a null pointer exception caused by a dangling pointer in C++ using a debugger, the developer can use the debugger's memory management tools to identify the code that is dereferencing a pointer to a deleted object and then modify the code to handle the exception correctly.",
What is the difference between a reference and a pointer in C++ programming?,"A reference is an alias to an existing variable, while a pointer is a variable that stores the memory address of another variable.",
How do you use a debugger to find the source of a deadlock caused by a mutex in C++?,"To find the source of a deadlock caused by a mutex in C++ using a debugger, the developer can use the debugger's thread management tools to identify the threads that are waiting for the mutex to be released and then modify the code to release the mutex correctly.",
What is the process for using a debugger to examine the contents of a list in C++?,"To examine the contents of a list in C++ using a debugger, the developer can set a breakpoint at the point where the list is accessed and then use the debugger's interface to inspect the values of each element in the list.",
What is a string in C++?,A string is a sequence of characters that is used to represent text. It is a data type in C++ that is used to store and manipulate textual data.,
How do you declare a string variable in C++?,You can declare a string variable in C++ using the string data type. For example: string str;,
How do you initialize a string variable in C++?,"You can initialize a string variable in C++ using a string literal. For example: string str = ""Hello, world!"";",
How do you access individual characters in a string in C++?,You can access individual characters in a string using the [] operator. For example: char c = str[0];,
How do you concatenate two strings in C++?,"You can concatenate two strings in C++ using the + operator. For example: string str1 = ""Hello""; string str2 = ""world""; string result = str1 + "" "" + str2;",
How do you find the length of a string in C++?,You can find the length of a string using the length() function. For example: int len = str.length();,
How do you compare two strings in C++?,You can compare two strings in C++ using the == operator. ,
How do you convert a string to an integer in C++?,You can convert a string to an integer using the stoi() function. For example: int num = stoi(str);,
How do you convert an integer to a string in C++?,You can convert an integer to a string using the to_string() function. For example: string str = to_string(num);,
How do you convert a string to a double in C++?,You can convert a string to a double using the stod() function. For example: double num = stod(str);,
How do you convert a double to a string in C++?,You can convert a double to a string using the to_string() function. For example: string str = to_string(num);,
How do you find the first occurrence of a character in a string in C++?,You can find the first occurrence of a character in a string using the find() function. For example: size_t pos = str.find('e');,
How do you find the last occurrence of a character in a string in C++?,You can find the last occurrence of a character in a string using the rfind() function. For example: size_t pos = str.rfind('e');,
How do you find the first occurrence of a substring in a string in C++?,"You can find the first occurrence of a substring in a string using the find() function. For example: size_t pos = str.find(""world"");",
How do you find the last occurrence of a substring in a string in C++?,"You can find the last occurrence of a substring in a string using the rfind() function. For example: size_t pos = str.rfind(""world"");",
How do you replace a substring in a string in C++?,"You can replace a substring in a string using the replace() function. For example: str.replace(0, 5, ""Hi"");",
How do you convert a string to uppercase in C++?,"You can convert a string to uppercase using the transform() function. For example: transform(str.begin(), str.end(), str.begin(), ::toupper);",
How do you count the number of occurrences of a substring in a string in C++?,"You can count the number of occurrences of a substring in a string using the count() function. For example: int numOccurrences = count(str.begin(), str.end(), ""world"");",
How do you remove all non-alphanumeric characters from a string in C++?,You can remove all non-alphanumeric characters from a string using the erase-remove idiom. ,
How do you find the nth occurrence of a character in a string in C++?,You can find the nth occurrence of a character in a string using the find() function in a loop.,
How do you check if a string is empty in C++?,You can check if a string is empty using the empty() function.,
How do you remove all occurrences of a character from a string in C++?,"You can remove all occurrences of a character from a string using the erase-remove idiom. For example: str.erase(remove(str.begin(), str.end(), 'a'), str.end());",
How do you check if two strings are equal ignoring case in C++?,You can check if two strings are equal ignoring case using the equal() function. ,
How do you insert a string into another string at a specific position in C++?,"You can insert a string into another string at a specific position using the insert() function. For example: str.insert(5, ""world"");",
How do you check if a string starts with a specific substring in C++?,"You can check if a string starts with a specific substring using the compare() function. For example: bool startsWith = str.compare(0, 5, ""Hello"") == 0;",
How do you check if a string ends with a specific substring in C++?,"You can check if a string ends with a specific substring using the compare() function. For example: bool endsWith = str.compare(str.length() - 5, 5, ""world"") == 0;",
How do you reverse a string in C++?,"You can reverse a string using the reverse() function. For example: reverse(str.begin(), str.end());",
How do you check if a string is a palindrome in C++?,You can check if a string is a palindrome using the reverse() function and the equal() function.,
How do you sort a string in alphabetical order in C++?,"You can sort a string in alphabetical order using the sort() function. For example: sort(str.begin(), str.end());
",
How do you find the first occurrence of a character in a string in C++?,You can find the first occurrence of a character in a string using the find() function. For example: size_t pos = str.find('o');,
How do you extract a substring from a string in C++?,"You can extract a substring from a string using the substr() function. For example: string sub = str.substr(5, 3);",
How do you check if a string contains a substring in C++?,"You can check if a string contains a substring using the find() function. For example: bool contains = str.find(""world"") != string::npos;",
How do you compare two strings in C++?,You can compare two strings using the compare() function. For example: int result = str1.compare(str2);,
How do you remove a specific substring from a string in C++?,"You can remove a specific substring from a string using the erase() function. For example: str.erase(str.find(""world""), 5);",
How do you concatenate two strings in C++?,You can concatenate two strings using the + operator. For example: string result = str1 + str2;,
